{"version":3,"sources":["ImageDatabase/tutorial.mp4","store/reducers/index.js","store/actions.js","components/LeftPanePopoverTab.js","components/LeftPaneTab.js","components/LeftPane.js","components/ContributePage.js","components/Matrix.js","components/LeftPaneModalTab.js","components/LeftPaneModal.js","components/SearchDisplayTab.js","components/SearchDisplay.js","components/ListDisplayTab.js","components/ColCharts.js","components/BodyChart.js","components/FilterBody.js","components/FilterPane.js","components/BodyZones.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","searchDisplay","searchData","names","params","listDisplay","viewCount","searchTermDisplay","searchTermQuery","currentFilteredArray","filter","minYear","maxYear","venueFilter","authorFilter","sourceFilter","categories","functions","bodyZones","fabrication","material","arrFunc","arrBod","arrFab","arrMat","selFunction","selBodyZones","selFabrication","selMaterial","showFunc","showBod","showFab","showMat","bookMarks","viewBookmarks","isLoggedIn","reducer","state","action","type","val","value","listView","temp","index","indexOf","splice","push","jsonToSend","JSON","stringify","username","password","bookmarks","request","Request","method","headers","body","fetch","then","response","status","toString","text","parse","message","console","log","valName","valPassword","LeftPanePopoverTab","props","onClick","subtype","tempArr","listArr","includes","setState","onSelect","onSelectSubType","onSelFunction","onSelBodyZones","onSelFabrication","onSelMaterial","input","curInp","onSelectFunction","onSelectBodyZones","onSelectFabrication","onSelectMaterial","selArr","inp","this","subtypes","sort","unshift","map","key","className","name","id","label","style","width","color","backgroundColor","Component","connect","dispatch","LeftPaneTab","toggle","popoverOpen","popoverFunc","popoverBod","popoverFab","popoverMat","arr","myVal","src","alt","UncontrolledPopover","hideArrow","modifiers","offset","trigger","target","PopoverBody","padding","transform","LeftPane","onShowFunction","onShowBodyZones","onShowFabrication","onShowMaterial","listItems","i","tempList","item","listItem","clicked","ContributePage","onAChange","event","data","wearability","onBChange","electronicIntegration","onCChange","maintainence","onDChange","context","onEChange","activity","onFChange","aesthetic","onTitleChange","title","onLinkChange","link","onMainpageChange","mainpage","handleResCatChange","res","resourceCategorization","handleSourceChange","source","onYearChange","year","onVenueChange","venue","onFabChange","fab","onMatChange","mat","onFuncChange","func","handleClicks2","area","clickTimeout","doubleClicked","clearTimeout","setTimeout","zone","handleSubmit","Object","assign","tempResat","toggleFab","bind","toggleMat","toggleFunc","dropdownOpenFab","dropdownOpenMat","dropdownOpenFunc","prevState","img","w","window","innerWidth","h","innerHeight","myMap2","areas","shape","coords","fillColor","fabList","fabricationList","matList","materialList","funcList","functionList","height","marginTop","Input","onChange","borderRadius","display","marginLeft","borderTop","paddingTop","borderWidth","textAlign","Dropdown","minHeight","placeholder","fluid","multiple","selection","options","borderLeft","fontSize","Button","objectFit","size","Matrix","name_array","bool_param","query_param_array","updateQuery","toggleDisplay","modal","toggle2","modal2","toggle3","modal3","filterYear","filterVenue","toLowerCase","filterSource","nameitems","namefinalitems","sheet1Data","length","filterArr","entries","dangerouslySetInnerHTML","__html","bool_array","funcCount","trim","fabCount","matCount","bodCount","funcBodCount","matBodCount","fabBodCount","fabFuncCount","matFuncCount","matFabCount","matFabFuncCount","curMatFabFuncCount","matFabBodCount","curMatFabBodCount","funcFabBodCount","curFuncFabBodCount","funcMatBodCount","curFuncMatBodCount","allCount","curAllCount","w_f","h_f","closeBtn","closeBtn2","closeBtn3","paddingLeft","marginRight","Modal","maxWidth","margin","maxHeight","isOpen","ModalHeader","close","ModalBody","overflowY","viewBox","x","y","flat","spacing","origin","x1","y1","x2","y2","stop-color","cellStyle","fill","stroke","q","r","s","textAnchor","dy","font-size","strokeWidth","transition","query_param","LeftPaneModalTab","curInput","LeftPaneModal","SearchDisplayTab","toggleCost","tooltipOpenCost","toggleImp","tooltipOpenImp","toggleWear","tooltipOpenWear","updateBookmark","substring","item1","document","getElementById","item2","item3","item4","item5","addEventListener","e","deltaX","getBoundingClientRect","bottom","scrollLeft","deltaY","check","parseInt","href","onError","error","loggedIn","checked","count","flexWrap","SearchDisplay","filterFunc","filterBod","filterFab","filterMat","filterAuthor","authors","author","shuffleArray","array","j","Math","floor","random","seed","sin","filterData","research","tutorials","aesthetics","concepts","allData","searchQuery","filteredArrayUpdate","researchArr","tutorialsArr","aestheticsArr","conceptsArr","patentsArr","undefined","listContents","scope","corLabel","Table","striped","backToSearch","ColCharts","function","subType","Results","fontWeight","top","right","left","dataKey","cursor","BodyChart","out","position","Range","Slider","createSliderWithTooltip","FilterBody","toggleStats","filterToggle","toggleMetrics","metricsModal","onVenueClick","split","onAuthorClick","onSourceClick","toggleBookmarks","toggleAuthor","toggleVenue","dropdownVenueOpen","dropdownAuthorOpen","showLabels","sourceInit","venueArr","authorArr","splitAuthors","mainPage","curSearchData","authorArticles","myData","filterEngineering","filterFashion","engLength","fashLength","Set","DropdownItem","yearData","Projects","closeBtnMetrics","hide","handleStyle","trackStyle","allowCross","railStyle","min","max","defaultValue","float","ButtonDropdown","DropdownToggle","caret","DropdownMenu","zIndex","FilterPane","toggleVisibility","visibility","handleChange","searchTermDisplayUpdate","searchTermQueryUpdate","preventDefault","toggleHome","toggleBack","move","toggleMainDisplay","logout","popVal","onSubmit","border","placement","PopoverHeader","showLoop","showView","BodyZones","componentWillMount","handleClicks","myMap","strokeColor","HomePage","onSignUpWarningChange","signUpWarning","onLoginWarningChange","loginWarning","onSignUpUsernameChange","signUpUsername","onLoginUsernameChange","loginUsername","onSignUpEmailChange","signUpEmail","onSignUpPasswordChange","signUpPassword","onLoginPasswordChange","loginPassword","onGoogleLoginSubmit","email","authSuccess","toggleDisp","onGoogleSignUpSubmit","pwd","objReceived","onLoginSubmit","responseGoogle","profileObj","responseGoogleError","onSignUpSubmit","backgroundSize","simpleDialog","show","hideOnOverlayClicked","ref","tutorial","controls","Form","clientId","buttonText","onSuccess","onFailure","cookiePolicy","valuename","valuepass","App","toggleToSearch","displayHome","computeImplementationMetric","fabricationChart","functionChart","impMetric","fabScore","funcScore","ans","computeCostMetric","materialChart","costMetric","matScore","computeWearability","totalCount","attachScore","mainScore","isNaN","actScore","intScore","conScore","aesScore","toFixed","displayMatrix","a","json","responseInfo","wearabilityResponse","wearabilityInfo","wearabilityArrayData","wearabilityData","wearabilityHeaders","tempMap","currentRow","costmetric","payload","wearabilityDatum","wearabilityStr","Wearability","updateSearchData","updateViewCount","counter","updateSearchDisplay","views","Boolean","location","hostname","match","rootReducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uKAAAA,EAAOC,QAAU,IAA0B,sC,yVCErCC,EAAe,CAEjBC,eAAe,EACfC,WAAY,GACZC,MAAO,GACPC,OAAQ,GAERC,aAAa,EAEbC,UAAW,EAEXC,mBAAmB,EACnBC,gBAAiB,GAEjBC,qBAAsB,GAEtBC,QAAQ,EACRC,QAAS,KACTC,QAAS,KACTC,YAAa,MACbC,aAAc,MACdC,aAAc,OAEdC,WAAY,CAAC,WAAY,YAAa,cAAe,YACrDC,UAAW,CAAC,UAAW,gBAAiB,oBAAqB,4BAC5D,UAAW,yBAA0B,yBAA0B,WAC9D,UAAW,aAAc,YAAa,aAAc,aACnD,iBAAkB,aAAc,WAAY,kBAAmB,aAAc,QAAS,wBACzFC,UAAW,CAAC,OAAQ,QAAS,gBAAiB,OAAQ,OACtD,iBAAkB,OAAQ,YAAa,QACvCC,YAAa,CAAC,mBAAoB,gBAAiB,cAClD,WAAY,WAAY,WAAY,gBACnC,YAAa,UAAW,sBAAuB,uBAC/C,WAAY,0BAA2B,UAAW,YAAa,YACjEC,SAAU,CAAC,eAAgB,kBAAmB,WAAY,oBAC1D,UAAW,qBAAqB,YAAa,sBAAuB,cACpE,yBAA0B,4BAA6B,kCACvD,eAAgB,QAAS,sBAEzBC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GAERC,YAAa,GACbC,aAAc,GACdC,eAAgB,GAChBC,YAAa,GAEbC,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,SAAS,EAETC,UAAW,GACXC,eAAe,EAEfC,YAAY,GAyPDC,EAtPC,WAAqC,IAAnCC,EAAkC,uDAA1BrC,EAAcsC,EAAY,uCAEhD,OAASA,EAAOC,MAEZ,IClEuB,kBDmEnB,OAAO,2BACAF,GADP,IAEIZ,YAAaa,EAAOE,MAE5B,ICtEwB,mBDuEpB,OAAO,2BACAH,GADP,IAEIX,aAAcY,EAAOE,MAE7B,IC1E0B,qBD2EtB,OAAO,2BACAH,GADP,IAEIV,eAAgBW,EAAOE,MAE/B,IC9EuB,kBD+ElB,OAAO,2BACAH,GADP,IAEIT,YAAaU,EAAOE,MAE7B,ICjFiB,YDkFb,OAAO,2BACFH,GADL,IAEER,UAAYQ,EAAMR,WAExB,ICrFgB,WDsFZ,OAAO,2BACAQ,GADP,IAEIP,SAAWO,EAAMP,UAEzB,ICzFgB,WD0Fb,OAAO,2BACAO,GADP,IAEIN,SAAWM,EAAMN,UAExB,IC7FgB,WD8Fb,OAAO,2BACAM,GADP,IAEIL,SAAWK,EAAML,UAGxB,ICjGuB,kBDkGpB,OAAO,2BACCK,GADR,IAEKhB,QAAQ,YAAKiB,EAAOG,SAG5B,ICtGsB,iBDwGnB,OAAO,2BACCJ,GADR,IAEKf,OAAO,YAAKgB,EAAOG,SAG3B,IC5GsB,iBD6GnB,OAAO,2BACCJ,GADR,IAEKd,OAAO,YAAKe,EAAOG,SAG3B,ICjHsB,iBDkHnB,OAAO,2BACCJ,GADR,IAEKb,OAAO,YAAKc,EAAOG,SAE3B,ICpHmB,cDqHjB,OAAO,2BACFJ,GADL,IAEEnC,WAAW,YAAKoC,EAAOG,SAEzB,ICxHoB,iBDyHlB,OAAO,2BACFJ,GADL,IAEEpC,eAAe,IAGnB,IC1G2B,wBD2G3B,OAAO,2BACFoC,GADL,IAEEpC,eAAe,EACfM,mBAAmB,IAGrB,ICpIkB,eDqIhB,OAAO,2BACF8B,GADL,IAEElC,MAAM,YAAKmC,EAAOnC,OAClBC,OAAO,YAAKkC,EAAOlC,UAEvB,ICxIiB,cDyIf,OAAO,2BACFiC,GADL,IAEE3B,QAAQ,IAEZ,IC5IiB,cD6If,OAAO,2BACF2B,GADL,IAEE1B,QAAS2B,EAAO3B,QAChBC,QAAS0B,EAAO1B,UAEpB,ICjJkB,eDkJhB,OAAO,2BACFyB,GADL,IAEExB,YAAayB,EAAOE,MAExB,ICrJmB,gBDsJjB,OAAO,2BACFH,GADL,IAEEvB,aAAcwB,EAAOE,MAEzB,ICzJmB,gBD0JjB,OAAO,2BACFH,GADL,IAEEtB,aAAcuB,EAAOE,MAEzB,IC5JoB,iBD6JlB,OAAO,2BACFH,GADL,IAEEK,UAAYL,EAAMK,WAEtB,IC/JyB,sBDgKvB,OAAO,2BACFL,GADL,IAEE9B,mBAAmB,IAEvB,ICnKuB,oBDoKrB,OAAO,2BACF8B,GADL,IAEE7B,gBAAiB8B,EAAOE,MAE5B,ICtKsB,mBDwKlB,IAAIG,EAAI,YAAON,EAAMJ,WAEjBW,EAAQD,EAAKE,QAAQP,EAAOE,KAE5BI,GAAS,EACVD,EAAKG,OAAOF,EAAO,GAIpBD,EAAKI,KAAKT,EAAOE,KAGnB,IAAIQ,EAAaC,KAAKC,UAAU,CAC3BC,SAAUd,EAAMc,SAChBC,SAAUf,EAAMe,SAChBC,UAAWV,IAGZW,EAAU,IAAIC,QAAQ,4DAA6D,CACjFC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMV,IAiBZ,OAfIW,MAAML,GAASM,MAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,YAChBF,EAASG,OAAOJ,MAAK,SAASI,GAGE,YADVf,KAAKgB,MAAMD,GACbE,SAEbC,QAAQC,IAAI,iBAOtB,2BACF/B,GADL,IAEEJ,UAAWU,IAGjB,ICpNoB,iBDsNlB,OAAO,2BACFN,GADL,IAEEH,eAAiBG,EAAMH,gBAK3B,IC3NkB,eD8NhB,OADAiC,QAAQC,IAAI9B,GACL,2BACFD,GADL,IAEEF,YAAY,EACZgB,SAAUb,EAAO+B,QACjBjB,SAAUd,EAAOgC,YACjBrC,UAAWK,EAAOE,MAItB,ICtOkB,eDwOhB,OAAO,2BACFH,GADL,IAEEF,YAAY,EACZd,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GAERC,YAAa,GACbC,aAAc,GACdC,eAAgB,GAChBC,YAAa,GAEbC,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,SAAS,EAETC,UAAW,GACXC,eAAe,IAInB,IC3P0B,uBD6PxB,OAAO,2BACFG,GADL,IAEE5B,qBAAsB6B,EAAOE,MAIjC,ICjQkB,eDmQhB,OAAO,2BACFH,GADL,IAEE/B,UAAWgC,EAAOE,MAI5B,OAAOH,G,2EEzSLkC,G,4FAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,QAAU,SAACC,GAGP,IAAIC,EAAU,GAEX,EAAKtC,MAAMuC,QAAQC,SAASH,GAE3BC,EAAU,GAIVA,EAAQ5B,KAAK2B,GAGjB,EAAKI,SAAS,CAEVF,QAASD,IAGb,EAAKI,SAASJ,GACd,EAAKK,gBAAgBN,EAAS,EAAKF,MAAMjC,OA9B1B,EAoCnBwC,SAAW,SAACJ,GAGJ,IAAIpC,EAAO,EAAKiC,MAAMjC,KAET,aAATA,EAEC,EAAKiC,MAAMS,cAAcN,GAEZ,cAATpC,EACJ,EAAKiC,MAAMU,eAAe,EAAK7C,MAAMuC,SAExB,gBAATrC,EACJ,EAAKiC,MAAMW,iBAAiBR,GAG5B,EAAKH,MAAMY,cAAcT,IApDnB,EA0DnBK,gBAAkB,SAACK,EAAO9C,GAEnB8C,IAAU,EAAKhD,MAAMiD,SACtBD,EAAQ,IACC,YAAR9C,GAEC,EAAKuC,SAAS,CACXQ,OAAQD,IAGblB,QAAQC,IAAIiB,GACd,EAAKb,MAAMe,iBAAiBF,IAEZ,aAAR9C,GAEJ,EAAKiC,MAAMgB,kBAAkBH,GAC5B,EAAKP,SAAS,CACZQ,OAAQD,KAIC,eAAR9C,GAEJ,EAAKiC,MAAMiB,oBAAoBJ,GAC9B,EAAKP,SAAS,CACZQ,OAAQD,MAKX,EAAKb,MAAMkB,iBAAiBL,GAC3B,EAAKP,SAAS,CACZQ,OAAQD,MAvFf,EAAKhD,MAAQ,CAEZuC,QAAS,EAAKJ,MAAMmB,OACpBL,OAAQ,EAAKd,MAAMmB,OAAO,IANZ,E,0CAiGnB,WAAU,IAAD,OAEGC,EAAMC,KAAKrB,MAAMsB,SAIjBlD,GAFJgD,EAAMA,EAAIG,QAEMlD,QAAQ,OAASgD,KAAKrB,MAAMjC,KAAO,KAC/CK,GAAS,GACVgD,EAAI9C,OAAOF,EAAO,GAErBgD,EAAII,QAAQ,OAASH,KAAKrB,MAAMjC,KAAO,KAEvC,IAAIoD,EAASE,KAAKxD,MAAMuC,QAuBxB,OAtBAgB,EAAMA,EAAIK,KAAI,SAACZ,GAEX,OAEI,yBAAKa,IAAK,EAAK1B,MAAM0B,KAClBP,EAAOd,SAASQ,GAChB,yBAAKZ,QAAS,kBAAM,EAAKA,QAAQY,IAAQc,UAAU,iCAChDC,KAAK,cAELC,GAAIhB,EACJiB,MAAOjB,GAAQA,GAEf,yBAAKZ,QAAS,kBAAM,EAAKA,QAAQY,IAAQc,UAAU,yBACnDC,KAAK,cAAcF,IAAKb,EAAOgB,GAAIhB,EACzBiB,MAAOjB,GAAQA,OASnC,6BACQ,yBAAKkB,MAAO,CAACC,MAAO,OAAQC,MAAO,QAASC,gBAAiB,UAC1Dd,Q,GAzIMe,cAiKlBC,cAAQ,MAfI,SAAAC,GACvB,MAAO,CACH5B,cAAe,SAACxC,GAAD,OAAWoE,EAAS,CAACtE,KDlJb,kBCkJgDE,MAAOA,KAC9EyC,eAAgB,SAACzC,GAAD,OAAWoE,EAAS,CAACtE,KDlJf,iBCkJiDE,MAAOA,KAC9E0C,iBAAkB,SAAC1C,GAAD,OAAWoE,EAAS,CAACtE,KDlJjB,iBCkJmDE,MAAOA,KAChF2C,cAAe,SAAC3C,GAAD,OAAWoE,EAAS,CAACtE,KDlJd,iBCkJgDE,MAAOA,KAE7E8C,iBAAkB,SAAC9C,GAAD,OAAWoE,EAAS,CAACtE,KDjKhB,kBCiKmDC,IAAKC,KAC/E+C,kBAAmB,SAAC/C,GAAD,OAAWoE,EAAS,CAACtE,KDjKhB,mBCiKoDC,IAAKC,KACjFgD,oBAAqB,SAAChD,GAAD,OAAWoE,EAAS,CAACtE,KDjKhB,qBCiKsDC,IAAKC,KACrFiD,iBAAkB,SAACjD,GAAD,OAAWoE,EAAS,CAACtE,KDjKhB,kBCiKmDC,IAAKC,QAKxEmE,CAAkCrC,G,kBClK3CuC,E,kDAEF,WAAYtC,GAAQ,IAAD,8BAChB,cAAMA,IAcRuC,OAAS,SAACX,GACR,EAAKtB,SAAS,CACZkC,aAAc,EAAK3E,MAAM2E,eAZ3B,EAAK3E,MAAQ,CACX4E,aAAa,EACbC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZJ,aAAa,GAVC,E,0CAsBpB,WAGS,IAAIzE,EAAOsD,KAAKrB,MAAM4B,KAElBiB,EAAM,GACN1B,EAAS,GAED,aAATpD,GACC8E,EAAMxB,KAAKrB,MAAMvD,UACjB0E,EAASE,KAAKrB,MAAMnD,SAEP,cAATkB,GACJ8E,EAAMxB,KAAKrB,MAAMtD,UACjByE,EAASE,KAAKrB,MAAMlD,QAEP,gBAATiB,GACJ8E,EAAMxB,KAAKrB,MAAMrD,YACjBwE,EAASE,KAAKrB,MAAMjD,SAGpB8F,EAAMxB,KAAKrB,MAAMpD,SACjBuE,EAASE,KAAKrB,MAAMhD,QAGxB,IAEI8F,EAAQ,YAiBZ,MAfuB,aAApBzB,KAAKrB,MAAM4B,MACM,qBACJ,mBACZkB,EAAQ,YAGgB,gBAApBzB,KAAKrB,MAAM4B,OACD,qBACJ,mBACZkB,EAAQ,YAQT,yBAAKjB,GAAI,WAAWR,KAAKrB,MAAM4B,KAAMD,UAAU,cAE3C,yBAAKA,UAAWmB,GAAQzB,KAAKrB,MAC5B4B,KACD,yBAAKC,GAAG,QAAQkB,IAAK,uBAAyB1B,KAAKrB,MAAM4B,KAAO,OAC/DoB,IAAI,GAAGrB,UAAU,cAMV,kBAACsB,EAAA,EAAD,CAAqBlB,MAAO,CAAEG,gBAAiB,SAAUgB,WAAW,EAAMC,UAAW,CAACC,OAAQ,QAASC,QAAQ,SAASC,OAAQ,WAGhIjC,KACCrB,MACA4B,MAGK,kBAAC2B,EAAA,EAAD,CAAaxB,MAAO,CAACyB,QAAS,IAAKvB,MAAO,UAAWC,gBAAiB,QAASuB,UAAW,sBAAsB,kBAAC,EAAD,CACvF1F,KAAMsD,KAAKrB,MAAM4B,KACjBN,SAAUuB,EACT1B,OAAQA,EACRoB,OAAQlB,KAAKkB,OACbb,IAAKL,KAAKrB,MAAM0B,a,GA9F/CS,aA4HXC,eAnBS,SAAAvE,GACpB,MAAO,CACHpB,UAAWoB,EAAMpB,UACjBC,UAAWmB,EAAMnB,UACjBC,YAAakB,EAAMlB,YACnBC,SAAUiB,EAAMjB,SAEhBS,SAAUQ,EAAMR,SAChBC,QAASO,EAAMP,QACfC,QAASM,EAAMN,QACfC,QAASK,EAAML,QAEfX,QAASgB,EAAMhB,QACfC,OAAQe,EAAMf,OACdC,OAAQc,EAAMd,OACdC,OAAQa,EAAMb,UAIPoF,CAAyBE,GC3HlCoB,E,4MAEFzD,QAAU,SAAClC,GAIM,aAATA,EAEC,EAAKiC,MAAM2D,iBAEE,cAAT5F,EACJ,EAAKiC,MAAM4D,kBAEE,gBAAT7F,EACJ,EAAKiC,MAAM6D,oBAGX,EAAK7D,MAAM8D,kB,4CAIpB,WAAU,IAECC,EAFF,OAGEC,EAAI,EAEJC,EAAW5C,KAAKrB,MAAMxD,WAUzB,OANDuH,GAHAE,EAAWA,EAAS/H,QAAO,SAACgI,GAC1B,MAAgB,cAATA,MAEYzC,KAAI,SAAC0C,GACrB,OACI,kBAAC,EAAD,CAAazC,IAAKsC,IAAKpC,KAAMuC,EAAUC,QAAS,EAAKnE,aAM5D,yBAAK0B,UAAU,gBACXoC,O,GAvCM5B,aAgERC,eAlBS,SAAAvE,GACpB,MAAO,CACHrB,WAAYqB,EAAMrB,WAClBd,WAAYmC,EAAMnC,eAIC,SAAA2G,GACvB,MAAO,CACHsB,eAAgB,kBAAMtB,EAAS,CAACtE,KH1Df,eG2DjB6F,gBAAiB,kBAAMvB,EAAS,CAACtE,KH1DjB,cG2DhB8F,kBAAmB,kBAAMxB,EAAS,CAACtE,KH1DnB,cG2DhB+F,eAAgB,kBAAMzB,EAAS,CAACtE,KH1DhB,iBGgETqE,CAA6CsB,G,yHC5DtDW,G,yDAmBJ,WAAYrE,GAAQ,IAAD,8BAEf,cAAMA,IA+BVsE,UAAY,SAACC,EAAOC,GAClB,EAAKlE,SAAS,CACZmE,YAAaD,EAAKvG,SAnCH,EAuCnByG,UAAY,SAACH,EAAOC,GAClB,EAAKlE,SAAS,CACZqE,sBAAuBH,EAAKvG,SAzCb,EA6CnB2G,UAAY,SAACL,EAAOC,GAClB,EAAKlE,SAAS,CACZuE,aAAcL,EAAKvG,SA/CJ,EAmDnB6G,UAAY,SAACP,EAAOC,GAClB,EAAKlE,SAAS,CACZyE,QAASP,EAAKvG,SArDC,EAyDnB+G,UAAY,SAACT,EAAOC,GAClB,EAAKlE,SAAS,CACZ2E,SAAUT,EAAKvG,SA3DA,EA+DnBiH,UAAY,SAACX,EAAOC,GAClB,EAAKlE,SAAS,CACZ6E,UAAWX,EAAKvG,SAjED,EAqEnBmH,cAAgB,SAACb,GAEf,EAAKjE,SAAS,CACZ+E,MAAOd,EAAMjB,OAAOrF,SAxEL,EA4EnBqH,aAAe,SAACf,GAEd,EAAKjE,SAAS,CACZiF,KAAMhB,EAAMjB,OAAOrF,SA/EJ,EAmFnBuH,iBAAmB,SAACjB,GAElB,EAAKjE,SAAS,CACZmF,SAAUlB,EAAMjB,OAAOrF,SAtFR,EA0FnByH,mBAAqB,SAACC,GAElB,IAAIvH,EAAQ,EAAKP,MAAM+H,uBAAuBvH,QAAQsH,GAClDxH,EAAO,EAAKN,MAAM+H,uBAClBxH,GAAS,EACVD,EAAKG,OAAOF,EAAO,GAIpBD,EAAKqD,QAAQmE,GAGf,EAAKrF,SAAS,CACZsF,uBAAwBzH,KAvGX,EA2GnB0H,mBAAqB,SAACC,GAEK,KAAtB,EAAKjI,MAAMiI,QAAuC,SAAtB,EAAKjI,MAAMiI,OACxC,EAAKxF,SAAS,CACZwF,OAAQA,IAIJ,EAAKjI,MAAMiI,SAAWA,EAC5B,EAAKxF,SAAS,CACZwF,OAAQ,SAMP,EAAKjI,MAAMiI,SAAWA,EACvB,EAAKxF,SAAS,CACZwF,OAAQA,IAKV,EAAKxF,SAAS,CACZwF,OAAQ,UAnIG,EAyInBC,aAAe,SAACxB,GAEd,EAAKjE,SAAS,CACZ0F,KAAMzB,EAAMjB,OAAOrF,SA5IJ,EAgJnBgI,cAAgB,SAAC1B,GAEf,EAAKjE,SAAS,CACZ4F,MAAO3B,EAAMjB,OAAOrF,SAnJL,EAuJnBkI,YAAc,SAAC5B,EAAOC,GACpB,EAAKlE,SAAS,CACZ8F,IAAK5B,EAAKvG,MAAMsB,cAzJD,EA6JnB8G,YAAc,SAAC9B,EAAOC,GACpB,EAAKlE,SAAS,CACZgG,IAAK9B,EAAKvG,MAAMsB,cA/JD,EAmKnBgH,aAAe,SAAChC,EAAOC,GACrB,EAAKlE,SAAS,CACZkG,KAAMhC,EAAKvG,MAAMsB,cArKF,EA2KnBkH,cAAgB,SAACC,GACW,OAAtB,EAAKC,cACP,EAAKC,cAAc,aACnBC,aAAa,EAAKF,cAClB,EAAKA,aAAe,MAGpB,EAAKA,aAAeG,YAAW,WAC/B,EAAK1C,QAAQsC,GACbG,aAAa,EAAKF,cAChB,EAAKA,aAAe,OACnB,MAtLY,EA0LnBC,cAAgB,SAACF,GAEf,EAAKpG,SAAS,CACZyG,KAAML,KA7LS,EAkMnBtC,QAAU,SAACsC,GAEc,SAApB,EAAK7I,MAAMkJ,MAUTL,EAAK9E,MAAQ,EAAK/D,MAAMkJ,KAR3B,EAAKzG,SAAS,CACZyG,KAAML,EAAK9E,OAiBX,EAAKtB,SAAS,CACZyG,KAAM,UAzNK,EAqPrBC,aAAe,WAEEC,OAAOC,OAAO,GAAI,EAAKrJ,MAAM+H,wBAClBrG,WADtB,IAGIsD,EAAM,GAEVA,EAAItE,KAAK,EAAKV,MAAMwH,OACpBxC,EAAItE,KAAK,EAAKV,MAAM0H,MACpB1C,EAAItE,KAAK,EAAKV,MAAM4H,UACpB5C,EAAItE,KAAK,EAAKV,MAAMmI,MACpBnD,EAAItE,KAAK,EAAKV,MAAMqI,OACpBrD,EAAItE,KAAK,EAAKV,MAAMuI,KACpBvD,EAAItE,KAAK,EAAKV,MAAMyI,KACpBzD,EAAItE,KAAK,EAAKV,MAAM2I,MACpB3D,EAAItE,KAAK,EAAKV,MAAMkJ,MACpBlE,EAAItE,KAAK,EAAKV,MAAM4G,aACpB5B,EAAItE,KAAK,EAAKV,MAAM8G,uBACpB9B,EAAItE,KAAK,EAAKV,MAAMgH,cACpBhC,EAAItE,KAAK,EAAKV,MAAMkH,SACpBlC,EAAItE,KAAK,EAAKV,MAAMoH,UACpBpC,EAAItE,KAAK,EAAKV,MAAMsH,WACpBtC,EAAItE,KAAK,EAAKV,MAAMiI,QACpBjD,EAAItE,KAAK,EAAKV,MAAMsJ,YAxQlB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAElB,EAAKxJ,MAAQ,CAEL2J,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBX,KAAM,OACN1B,MAAO,GACPE,KAAM,GACNE,SAAU,GACVO,KAAM,GACNE,MAAO,GACPE,IAAK,GACLE,IAAK,GACLE,KAAM,GACN/B,YAAa,GACbE,sBAAuB,GACvBE,aAAc,GACdE,QAAS,GACTE,SAAU,GACVE,UAAW,GACXS,uBAAwB,GACxBE,OAAQ,IA7BH,E,6CAgOnB,WAEEzE,KAAKf,UAAS,SAAAqH,GAAS,MAAK,CAC1BH,iBAAkBG,EAAUH,sB,uBAIjC,WAEEnG,KAAKf,UAAS,SAAAqH,GAAS,MAAK,CAC1BF,iBAAkBE,EAAUF,sB,wBAIhC,WAEEpG,KAAKf,UAAS,SAAAqH,GAAS,MAAK,CAC1BD,kBAAmBC,EAAUD,uB,oBA2EhC,WAAU,IAAD,OAEHE,EAAM,0CAEa,cAApBvG,KAAKxD,MAAMkJ,KACZa,EAAM,mDAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,UAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,gDAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,kBAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,uDAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,8CAEoB,mBAApBvG,KAAKxD,MAAMkJ,OACjBa,EAAM,sDAGR,IAAIC,EAAIC,OAAOC,WAAa,KACxBC,EAAIF,OAAOG,YAAc,IAEzBC,EAAS,CACTtG,KAAM,UACNuG,MAAO,CACP,CAACvG,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,EAAIG,EAAG,IAAMH,EAAG,GAAKG,GAAIM,UAAW,eACnF,CAAC1G,KAAM,QAASwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,GAAKG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eACtF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,IAAMR,EAAG,GAAKG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eACtF,CAAC1G,KAAM,gBAAiBwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eAC/F,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eACtF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eAEtF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,GAAKG,EAAG,GAAKH,EAAG,IAAMG,GAAIM,UAAW,eACpF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,IAAMR,EAAG,GAAKG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eAEtF,CAAC1G,KAAM,iBAAkBwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,GAAKH,EAAG,IAAMG,GAAIM,UAAW,eAC/F,CAAC1G,KAAM,iBAAkBwG,MAAO,OAAQC,OAAQ,CAAC,IAAMR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,iBAM/FC,EAAUlH,KAAKrB,MAAMwI,gBAAgB/G,KAAI,SAACyC,GAG5C,MADW,CAAExC,IAAKwC,EAAM1E,KAAM0E,EAAMjG,MAAOiG,MAIzCuE,EAAUpH,KAAKrB,MAAM0I,aAAajH,KAAI,SAACyC,GAGzC,MADW,CAAExC,IAAKwC,EAAM1E,KAAM0E,EAAMjG,MAAOiG,MAUzCyE,EAAWtH,KAAKrB,MAAM4I,aAAanH,KAAI,SAACyC,GAG1C,MADW,CAAExC,IAAKwC,EAAM1E,KAAM0E,EAAMjG,MAAOiG,MAI/C,OAEE,yBAAKvC,UAAU,mBAEX,yBAAKA,UAAU,kBAET,yBAAKI,MAAO,CAAC8G,OAAQ,MAAOC,UAAW,OACnC,yBAAK/G,MAAO,CAAC8G,OAAQ,QACjB,+CACA,kBAACE,EAAA,EAAD,CAAO9K,MAAOoD,KAAKxD,MAAMwH,MAAO2D,SAAU,SAACzE,GAAD,OAAW,EAAKa,cAAcb,IAAQxC,MAAO,CAAEkH,aAAc,MAAOzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,UAGrJ,yBAAKgE,MAAO,CAACmH,QAAS,OAAQJ,UAAW,OAErC,yBAAK/G,MAAO,CAACC,MAAO,QAChB,8CACA,kBAAC+G,EAAA,EAAD,CAAO9K,MAAOoD,KAAKxD,MAAM0H,KAAMyD,SAAU,SAACzE,GAAD,OAAW,EAAKe,aAAaf,IAAQxC,MAAO,CAAEkH,aAAc,MAAOzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,UAGnJ,yBAAKgE,MAAO,CAACC,MAAO,MAAOmH,WAAY,OACnC,mDACA,kBAACJ,EAAA,EAAD,CAAO9K,MAAOoD,KAAKxD,MAAM4H,SAAUuD,SAAU,SAACzE,GAAD,OAAW,EAAKiB,iBAAiBjB,IAAQxC,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,WAKhK,yBAAKgE,MAAO,CAACmH,QAAS,OAAQJ,UAAW,OAErC,yBAAK/G,MAAO,CAACC,MAAO,QAChB,qCACA,kBAAC+G,EAAA,EAAD,CAAO9K,MAAOoD,KAAKxD,MAAMmI,KAAMgD,SAAU,SAACzE,GAAD,OAAW,EAAKwB,aAAaxB,IAAQxC,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,UAGpJ,yBAAKgE,MAAO,CAACC,MAAO,MAAOmH,WAAY,OACnC,sCACA,kBAACJ,EAAA,EAAD,CAAO9K,MAAOoD,KAAKxD,MAAMqI,MAAO8C,SAAU,SAACzE,GAAD,OAAW,EAAK0B,cAAc1B,IAAQxC,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,YAM5J,yBAAKgE,MAAO,CAAC8G,OAAQ,MAAOO,UAAW,QAASC,WAAY,KAAMC,YAAa,QAASR,UAAW,KAAMI,QAAS,OAAQK,UAAW,WAEnI,yBAAKxH,MAAO,CAACC,MAAO,QACV,yBAAKD,MAAO,CAAC8G,OAAQ,MAAOC,UAAW,OACnC,sEACA,kBAACU,EAAA,EAAD,CAAUR,SAAU3H,KAAK8E,YAAapE,MAAO,CAACyB,QAAS,IAAKiG,UAAW,MAAOC,YAAY,cAAcC,OAAK,EAACC,UAAQ,EAACC,WAAS,EAACC,QAASvB,KAG9I,yBAAKxG,MAAO,CAAC8G,OAAQ,MAAOC,UAAW,OACnC,mEACA,kBAACU,EAAA,EAAD,CAAUR,SAAU3H,KAAKgF,YAAatE,MAAO,CAACyB,QAAS,IAAKiG,UAAW,MAAOC,YAAY,WAAWC,OAAK,EAACC,UAAQ,EAACC,WAAS,EAACC,QAASrB,KAG3I,yBAAK1G,MAAO,CAAC8G,OAAQ,MAAOC,UAAW,OACnC,mEACA,kBAACU,EAAA,EAAD,CAAUR,SAAU3H,KAAKkF,aAAcxE,MAAO,CAACyB,QAAS,IAAKiG,UAAW,MAAOC,YAAY,WAAWC,OAAK,EAACC,UAAQ,EAACC,WAAS,EAACC,QAASnB,MAGtJ,yBAAK5G,MAAO,CAACoH,WAAY,KAAMnH,MAAO,MAAO+H,WAAY,QAAST,YAAa,UAGvE,yBAAKvH,MAAO,CAACC,MAAO,OAAQ6G,OAAQ,MAAOC,UAAW,KAAMK,WAAY,OACpE,+DACA,yBAAKpH,MAAO,CAACmH,QAAS,OAAQL,OAAQ,OAAQmB,SAAU,SAC5B,gBAAtB3I,KAAKxD,MAAMiI,OAA6B,kBAACmE,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAK4F,mBAAmB,gBAAgB9D,MAAO,CAACG,gBAAiB,UAAWqH,UAAW,SAAUS,SAAU,OAAQ/H,MAAO,QAASD,MAAO,QAAjK,eAAkM,kBAACiI,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAK4F,mBAAmB,gBAAgB9D,MAAO,CAACG,gBAAiB,QAASqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA9J,eACpN,YAAtB3I,KAAKxD,MAAMiI,OAAyB,kBAACmE,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAK4F,mBAAmB,YAAY9D,MAAO,CAACG,gBAAiB,UAAWqH,UAAW,SAAUtH,MAAO,QAASkH,WAAY,KAAMnH,MAAO,MAAMgI,SAAU,SAA7K,WAA2M,kBAACC,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAK4F,mBAAmB,YAAY9D,MAAO,CAACG,gBAAiB,QAASqH,UAAW,SAAUtH,MAAO,QAASkH,WAAY,KAAMnH,MAAO,MAAOgI,SAAU,SAA5K,aAIzP,yBAAKjI,MAAO,CAACC,MAAO,OAAQ6G,OAAQ,MAAOC,UAAW,MAAOK,WAAY,OACrE,gFACA,yBAAKpH,MAAO,CAACmH,QAAS,OAASL,OAAO,MAAMmB,SAAU,SAC9C3I,KAAKxD,MAAM+H,uBAAuBvF,SAAS,aAAiB,kBAAC4J,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,cAAc3D,MAAO,CAACG,gBAAiB,UAAWqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA9J,aAA8L,kBAACC,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,cAAc3D,MAAO,CAACG,gBAAiB,QAASqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA5J,aAC1P3I,KAAKxD,MAAM+H,uBAAuBvF,SAAS,YAAgB,kBAAC4J,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,aAAa3D,MAAO,CAACG,gBAAiB,UAAYiH,WAAY,KAAMI,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAAhL,YAA+M,kBAACC,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,aAAa3D,MAAO,CAACG,gBAAiB,QAAUiH,WAAY,KAAMI,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA9K,aAGlR,yBAAKjI,MAAO,CAACmH,QAAS,OAAQJ,UAAW,KAAMD,OAAO,MAAOmB,SAAU,SACjE3I,KAAKxD,MAAM+H,uBAAuBvF,SAAS,UAAc,kBAAC4J,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,WAAW3D,MAAO,CAACG,gBAAiB,UAAWqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA3J,UAAwL,kBAACC,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,WAAW3D,MAAO,CAACG,gBAAiB,QAASqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAAzJ,UACjP3I,KAAKxD,MAAM+H,uBAAuBvF,SAAS,kBAAsB,kBAAC4J,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,mBAAmB3D,MAAO,CAACG,gBAAiB,UAAWqH,UAAW,SAAUtH,MAAO,QAASkH,WAAY,KAAMnH,MAAO,MAAOgI,SAAU,SAArL,kBAA0N,kBAACC,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,mBAAmB3D,MAAO,CAACG,gBAAiB,QAASqH,UAAW,SAAUtH,MAAO,QAASkH,WAAY,KAAMnH,MAAO,MAAOgI,SAAU,SAAnL,mBAEjS,yBAAKjI,MAAO,CAACmH,QAAS,OAAQJ,UAAW,KAAMD,OAAO,MAAOmB,SAAU,SACjE3I,KAAKxD,MAAM+H,uBAAuBvF,SAAS,cAAkB,kBAAC4J,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,eAAe3D,MAAO,CAACG,gBAAiB,UAAWqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA/J,aAA+L,kBAACC,EAAA,EAAD,CAAQhK,QAAS,kBAAM,EAAKyF,mBAAmB,eAAe3D,MAAO,CAACG,gBAAiB,QAASqH,UAAW,SAAUtH,MAAO,QAASD,MAAO,MAAOgI,SAAU,SAA7J,iBAQlR,yBAAKjH,IAAK,+BACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAOkI,UAAW,QAASf,WAAY,MAAOL,UAAW,SAmDtF,yBAAKnH,UAAU,kBACb,yBAAMI,MAAO,CAAC0B,UAAW,sBAAuBzB,MAAO,QACvD,kBAAC,IAAD,CAAae,IAAK6E,EAAKnG,IAAKyG,EAAQlG,MAAO,IAAM6F,EAAGgB,OAAQ,IAAMb,EAC/D/H,QAAS,SAAAyG,GAAI,OAAI,EAAKD,cAAcC,MAEtC,yBAAK3E,MAAO,CAAEiI,SAAU,UAAWb,WAAY,QAAQ,gCAAvD,oBACA,yBAAKpH,MAAO,CAAEiI,SAAU,UAAWb,WAAY,QAA/C,sBAA0E,kCAG1E,kBAACc,EAAA,EAAD,CAAQE,KAAK,KAAKlK,QAAS,kBAAM,EAAK+G,gBAAgBjF,MAAO,CAAC+G,UAAW,MAAOK,WAAY,MAAOI,UAAW,UAAWtH,MAAM,aAA/H,UAA2J,U,GArjB3IE,cAukBdC,eATS,SAAAvE,GACpB,MAAO,CAEH2K,gBAAiB3K,EAAMlB,YACvB+L,aAAc7K,EAAMjB,SACpBgM,aAAc/K,EAAMpB,aAIb2F,CAAyBiC,GCjkBlC+F,G,gEAEJ,WAAYpK,GAAQ,IAAD,8BAEjB,cAAMA,IAUNC,QAAU,SAACoK,EAAYC,EAAYC,GAE5BD,IAED,EAAKtK,MAAMwK,YAAYH,EAAYE,GACnC,EAAKvK,MAAMyK,kBAjBA,EAoBjBlI,OAAS,WACP,EAAKjC,UAAS,SAAAqH,GAAS,MAAK,CAC1B+C,OAAQ/C,EAAU+C,WAtBL,EA0BjBC,QAAU,WACR,EAAKrK,UAAS,SAAAqH,GAAS,MAAK,CAC1BiD,QAASjD,EAAUiD,YA5BN,EA+BjBC,QAAU,WACR,EAAKvK,UAAS,SAAAqH,GAAS,MAAK,CAC1BmD,QAASnD,EAAUmD,YAjCN,EA26BjBC,WAAa,SAAC7G,GAEZ,MAAoB,KAAjBA,EAAI,MAGCA,EAAI,MAAY,EAAKlE,MAAM7D,SAAW+H,EAAI,MAAY,EAAKlE,MAAM5D,SAh7B1D,EAm7BjB4O,YAAc,SAAC9G,GAEb,MAA6B,QAArB,EAAKlE,MAAMkG,OAAmBhC,EAAK,sBAAsB+G,gBAAkB,EAAKjL,MAAMkG,MAAM+E,eAr7BrF,EAw7BjBC,aAAe,SAAChH,GAEd,MAAsB,KAAnBA,EAAI,QAAwC,SAAnBA,EAAI,SAGF,SAAtB,EAAKlE,MAAM8F,QAAqB5B,EAAI,OAAW+G,gBAAkB,EAAKjL,MAAM8F,OAAOmF,gBAz7B3F,EAAKpN,MAAQ,CACXkJ,KAAM,OACN2D,OAAO,EACPE,QAAQ,EACRE,QAAQ,EACRK,UAAW,IATE,E,0CAuDjB,WAIE,IAJQ,IAAD,OACDC,EAAiB,GACnBC,EAAahK,KAAKrB,MAAMtE,WACxBC,EAAQ,GACJqI,EAAI,EAAGA,EAAIqH,EAAWC,OAAQtH,IACpCrI,EAAM4C,KAAK,+BAA+B8M,EAAWrH,GAAG,kBAA7C,0CACTqH,EAAWrH,GAAX,QAA2B,SAIzB,IAVC,EAUGuH,EAAYlK,KAAKrB,MAAMtE,WAV1B,cAW4BC,EAAM6P,WAXlC,IAWD,2BAA8C,CAAC,IAAD,yBAAlCpN,EAAkC,KAA3BH,EAA2B,KAC5CmN,EAAe7M,KAAK,wBAAIwD,MAAO,CAACyB,QAAS,WAAY9B,IAAKtD,GAAO,0BAAMqN,wBAAyB,CAACC,OAAOzN,QAZzG,8BAcEoD,KAAKrB,MAAM9D,SAIZqP,GADAA,GADAA,EAAYA,EAAUrP,OAAOmF,KAAK0J,aACZ7O,OAAOmF,KAAK2J,cACZ9O,OAAOmF,KAAK6J,eAGpC,IAAIb,EAAa,GACjBA,EAAW,GAAK,WAChBA,EAAW,GAAK,YAChBA,EAAW,GAAK,cAChBA,EAAW,GAAK,WAEhB,IAAIsB,EAAa,GACjBA,EAAWpN,MAAK,GAChBoN,EAAWpN,MAAK,GAChBoN,EAAWpN,MAAK,GAChBoN,EAAWpN,MAAK,GAEc,KAA3B8C,KAAKrB,MAAM/C,cACV0O,EAAW,IAAK,EAChBtB,EAAW,GAAKhJ,KAAKrB,MAAM/C,aAGA,KAA5BoE,KAAKrB,MAAM9C,eACVyO,EAAW,IAAK,EAChBtB,EAAW,GAAKhJ,KAAKrB,MAAM9C,cAGE,KAA9BmE,KAAKrB,MAAM7C,iBACVwO,EAAW,IAAK,EAChBtB,EAAW,GAAKhJ,KAAKrB,MAAM7C,gBAGD,KAA3BkE,KAAKrB,MAAM5C,cACVuO,EAAW,IAAK,EAChBtB,EAAW,GAAKhJ,KAAKrB,MAAM5C,aAG/B,IAAIwO,EAAYL,EAAUrP,QAAO,SAACgI,GAChC,MAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAEzE0H,EAAYA,EAAUN,OAEnBK,EAAW,KAAOtB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,oBAO/DuL,EALmBL,EAAUrP,QAAO,SAACgI,GACnC,OAAOA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACjF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAEzDP,QAG3B,IAAIQ,EAAWP,EAAUrP,QAAO,SAACgI,GAC/B,MAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,qBAE/C4H,EAAWA,EAASR,OAEjBK,EAAW,KAAOtB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,uBAM/DyL,EAJkBP,EAAUrP,QAAO,SAACgI,GAClC,OAAOA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACpF3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAE9DP,QAGzB,IAAIS,EAAWR,EAAUrP,QAAO,SAACgI,GAC/B,MAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAEzE6H,EAAWA,EAAST,OAEjBK,EAAW,KAAQtB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,oBAOhE0L,EALkBR,EAAUrP,QAAO,SAACgI,GAClC,OAAOA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACjF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAE3DP,QAGzB,IAAIU,EAAWT,EAAUrP,QAAO,SAACgI,GAC/B,MAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,mBAE3E8H,EAAWA,EAASV,OAEjBK,EAAW,MAOZK,EALkBT,EAAUrP,QAAO,SAACgI,GAClC,OAAOA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAClF3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAE5DP,QAOzB,IAAIW,EAAeV,EAAUrP,QAAO,SAACgI,GACnC,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACtC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,mBAE7E+H,EAAeA,EAAaX,OAEzBK,EAAW,IAAMA,EAAW,KAAOtB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,oBAUhF4L,EARsBV,EAAUrP,QAAO,SAACgI,GACtC,OAAQA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAChF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAEnDP,QAKjC,IAAIY,EAAcX,EAAUrP,QAAO,SAACgI,GAClC,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACtC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,mBAE7EgI,EAAcA,EAAYZ,OAEvBK,EAAW,IAAMA,EAAW,KAAOtB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,oBAUhF6L,EARqBX,EAAUrP,QAAO,SAACgI,GACrC,OAAQA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAChF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAErDP,QAG/B,IAAIa,EAAcZ,EAAUrP,QAAO,SAACgI,GAClC,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACnC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,sBAEnDiI,EAAcA,EAAYb,OAEvBK,EAAW,IAAMA,EAAW,KAAOtB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,uBAShF8L,EAPqBZ,EAAUrP,QAAO,SAACgI,GACrC,OAAQA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAChF3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAExDP,QAK/B,IAAIc,EAAeb,EAAUrP,QAAO,SAACgI,GACnC,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACjC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,qBAInD,GAFAkI,EAAeA,EAAad,OAEzBjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,mBAAqBgK,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,oBAE3GsL,EAAW,IAAMA,EAAW,KAM7BS,EALsBb,EAAUrP,QAAO,SAACgI,GACtC,OAAQA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACrF3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAC3D,KAAvB3H,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAEnCoH,aAI9B,IAAIjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAAoBgK,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,oBAAqB,CAExI,GAAGsL,EAAW,IAAMA,EAAW,GAO7BS,EANsBb,EAAUrP,QAAO,SAACgI,GACtC,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBAC5CA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAEnDP,WAI9B,CAEH,GAAGK,EAAW,IAAMA,EAAW,GAS7BS,EARsBb,EAAUrP,QAAO,SAACgI,GACtC,OAAQA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACrF3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAClF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGnDP,OAMnC,IAAIe,EAAed,EAAUrP,QAAO,SAACgI,GACnC,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACpC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAI7E,GAFAmI,EAAeA,EAAaf,OAEzBjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,mBAAqBgK,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,iBAE3GsL,EAAW,IAAMA,EAAW,KAO7BU,EANsBd,EAAUrP,QAAO,SAACgI,GACtC,OAAQA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAClF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WACxD,KAAvB3H,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAEnCoH,aAI9B,IAAIjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAAoBgK,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,iBAAkB,CAErI,GAAGsL,EAAW,IAAMA,EAAW,GAO7BU,EANsBd,EAAUrP,QAAO,SAACgI,GACtC,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACtEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAEnDP,WAI9B,CAEH,GAAGK,EAAW,IAAMA,EAAW,GAS7BU,EARsBd,EAAUrP,QAAO,SAACgI,GACtC,OAAQA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAClF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAC/E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAEnDP,OAQnC,IAAIgB,EAAcf,EAAUrP,QAAO,SAACgI,GAClC,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAI7E,GAFAoI,EAAcA,EAAYhB,OAEvBjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,sBAAwBgK,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,iBAE9GsL,EAAW,IAAMA,EAAW,KAO7BW,EANqBf,EAAUrP,QAAO,SAACgI,GACrC,OAAQA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAClF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WACrD,KAA1B3H,EAAK,kBAAqD,KAA1BA,EAAK,qBAEXoH,aAI5B,IAAIjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,qBAAuBgK,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,iBAAkB,CAExI,GAAGsL,EAAW,IAAMA,EAAW,GAM7BW,EALqBf,EAAUrP,QAAO,SAACgI,GACrC,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACtEA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAExDP,WAI5B,CACH,GAAGK,EAAW,IAAMA,EAAW,GAQ7BW,EAPqBf,EAAUrP,QAAO,SAACgI,GACrC,OAAQA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAClF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,WAC/E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAExDP,OAOjC,IAAIiB,EAAkBhB,EAAUrP,QAAO,SAACgI,GACtC,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACxC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAE7EqI,EAAkBA,EAAgBjB,OAElC,IAAIkB,EAAqBjB,EACrBlB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ9CY,GAPEC,EAAqBA,EAAmBtQ,QAAO,SAACgI,GAChD,OACEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC1E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAG/CP,QAIrCjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,qBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAO9CY,GANAC,EAAqBA,EAAmBtQ,QAAO,SAACgI,GAC9C,OACEA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGlDP,QAGzC3L,QAAQC,IAAI2M,GAERlC,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAM9CY,GALAC,EAAqBA,EAAmBtQ,QAAO,SAACgI,GAC9C,OAASA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAE7CP,QAGzC3L,QAAQC,IAAI2M,GAMZ,IAAIE,EAAiBlB,EAAUrP,QAAO,SAACgI,GACrC,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACvC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,mBAE/EuI,EAAiBA,EAAenB,OAEhC,IAAIoB,EAAoBnB,EAEpBlB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,qBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAO9Cc,GANCC,EAAoBA,EAAkBxQ,QAAO,SAACgI,GAC7C,OACEA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGpDP,QAInCjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAM9Cc,GALEC,EAAoBA,EAAkBxQ,QAAO,SAACgI,GAC9C,OAASA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAE/CP,QAIpCK,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ9Cc,GAPAC,EAAoBA,EAAkBxQ,QAAO,SAACgI,GAC5C,OACEA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGlDP,QAKrC,IAAIqB,EAAkBpB,EAAUrP,QAAO,SAACgI,GACtC,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACvC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,mBAE/EyI,EAAkBA,EAAgBrB,OAChC,IAAIsB,EAAqBrB,EACvBlB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,qBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAO9CgB,GANCC,EAAqBA,EAAmB1Q,QAAO,SAACgI,GAC/C,OACEA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGlDP,QAIrCjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ9CgB,GAPAC,EAAqBA,EAAmB1Q,QAAO,SAACgI,GAC9C,OACEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC1E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAG/CP,QAKtCK,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ9CgB,GAPEC,EAAqBA,EAAmB1Q,QAAO,SAACgI,GAChD,OACEA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGhDP,QAMvC,IAAIuB,EAAkBtB,EAAUrP,QAAO,SAACgI,GACtC,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACpC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACvC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,mBAE/E2I,EAAkBA,EAAgBvB,OAElC,IAAIwB,EAAqBvB,EAErBlB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ9CkB,GAPCC,EAAqBA,EAAmB5Q,QAAO,SAACgI,GAC/C,OACEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC1E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAG/CP,QAIrCjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAM9CkB,GALEC,EAAqBA,EAAmB5Q,QAAO,SAACgI,GAChD,OAASA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAE7CP,QAItCK,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ9CkB,GAPEC,EAAqBA,EAAmB5Q,QAAO,SAACgI,GAChD,OACEA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGhDP,QAGvC,IAAIyB,EAAWxB,EAAUrP,QAAO,SAACgI,GAC/B,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACtC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACxC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACrC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,qBAEnD6I,EAAWA,EAASzB,OACpB,IAAI0B,EAAczB,EAEdlB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAQ7DoB,GAPAC,EAAcA,EAAY9Q,QAAO,SAACgI,GAClC,OACEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC1E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAG3DP,QAIzBjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,qBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAO/DoB,GANEC,EAAcA,EAAY9Q,QAAO,SAACgI,GAClC,OACEA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAGhEP,QAIvBjB,EAAW,GAAGY,cAAcY,OAAOxL,SAAS,kBAE3CsL,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAM/DoB,GALEC,EAAcA,EAAY9Q,QAAO,SAACgI,GAClC,OAASA,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SACnF3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC7E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAE3DP,QAIxBK,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,KAO/DoB,GANAC,EAAcA,EAAY9Q,QAAO,SAACgI,GAChC,OACEA,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC3E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,SAC9E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAASgK,EAAW,GAAGY,cAAcY,YAE9DP,QAGzB,IAAI2B,EAAMnF,OAAOC,WAAa,KAE3BkF,EAAM,GACPA,EAAM,GACAA,EAAM,MACZA,EAAM,KAER,IAAIC,EAAMpF,OAAOG,YAAc,KAG5BiF,EAAM,GACPA,EAAM,GACAA,EAAM,MACZA,EAAM,KAGApF,OAAOC,WACPD,OAAOG,YADf,IAKMkF,EAAW,kBAAClD,EAAA,EAAD,CAAQE,KAAK,KAAKlK,QAASoB,KAAKkB,OAAQN,MAAM,aAAa,aAC1EmL,EAAY,kBAACnD,EAAA,EAAD,CAAQhK,QAASoB,KAAKsJ,QAAS1I,MAAM,aAAa,aAC9DoL,EAAY,kBAACpD,EAAA,EAAD,CAAQhK,QAASoB,KAAKwJ,QAAS5I,MAAM,aAAa,aAEhE,OAGC,yBAAKN,UAAU,cAGbhC,QAAQC,MAEV,yBAAKmC,MAAO,CAACuL,YAAY,MAAMzE,OAAQ,MAAOK,QAAS,OAAQjH,MAAO,QAASsL,YAAY,QAExG,yBAAK5L,UAAU,UAAUI,MAAO,CAAC+G,UAAW,KAAMkB,SAAU,QAAS/J,QAASoB,KAAKwJ,SAAnF,WACA,kBAAC2C,EAAA,EAAD,CAAOzL,MAAO,CAAC0L,SAAU,OAAQC,OAAQ,KAAMC,UAAW,OAAQ3L,MAAO,OAAQ6G,OAAQ,QAAS+E,OAAQvM,KAAKxD,MAAMiN,OAAQvI,OAAQlB,KAAKwJ,SACxI,kBAACgD,EAAA,EAAD,CAAaC,MAAOT,EAAWtL,MAAO,CAACG,gBAAiB,QAASD,MAAO,QAAS4G,OAAQ,OAAQtG,OAAQlB,KAAKwJ,SAC9G,uCADA,WAGA,kBAACkD,EAAA,EAAD,CAAWhM,MAAO,CAACG,gBAAiB,QAAS8L,UAAW,OAAQnF,OAAQ,MAAO7G,MAAO,SAEtF,yBAAKD,MAAO,CAACmH,QAAS,SAClB,yBAAKnH,MAAO,CAACC,MAAO,OAAQmH,WAAY,KAAMlH,MAAO,UACnD,4BAAKmJ,EAAL,SAOR,yBAAKzJ,UAAU,aAAaI,MAAO,CAAC+G,UAAW,KAAMK,WAAW,KAAMa,SAAU,QAAS/J,QAASoB,KAAKkB,QAAvG,cACA,kBAACiL,EAAA,EAAD,CAAOzL,MAAO,CAAC0L,SAAU,OAAQC,OAAQ,KAAMC,UAAW,OAAQ3L,MAAO,OAAQ6G,OAAQ,QAAS+E,OAAQvM,KAAKxD,MAAM6M,MAAOnI,OAAQlB,KAAKkB,QACvI,kBAACsL,EAAA,EAAD,CAAaC,MAAOX,EAAUpL,MAAO,CAACG,gBAAiB,QAASD,MAAO,QAAS4G,OAAQ,KAAMrF,QAAS,iBAAkBjB,OAAQlB,KAAKkB,QAAtI,cAEA,kBAACwL,EAAA,EAAD,CAAWhM,MAAO,CAACG,gBAAiB,QAAS8L,UAAW,OAAQnF,OAAQ,MAAO7G,MAAO,SAEhF,kBAAC,EAAD,QAKR,yBAAKL,UAAU,UAAUI,MAAO,CAAC+G,UAAW,KAAMK,WAAY,KAAMa,SAAU,QAAS/J,QAASoB,KAAKsJ,SAArG,cACA,kBAAC6C,EAAA,EAAD,CAAOzL,MAAO,CAAC0L,SAAU,OAAQC,OAAQ,KAAMC,UAAW,OAAQ3L,MAAO,OAAQ6G,OAAQ,QAAS+E,OAAQvM,KAAKxD,MAAM+M,OAAQrI,OAAQlB,KAAKsJ,SACxI,kBAACkD,EAAA,EAAD,CAAaC,MAAOV,EAAWrL,MAAO,CAACG,gBAAiB,QAASD,MAAO,QAAS4G,OAAQ,OAAQtG,OAAQlB,KAAKsJ,SAA9G,cAEA,kBAACoD,EAAA,EAAD,CAAWhM,MAAO,CAACG,gBAAiB,QAAS8L,UAAW,OAAQnF,OAAQ,MAAO7G,MAAO,SAEtF,yBAAKD,MAAO,CAACmH,QAAS,SAClB,yBAAKnH,MAAO,CAACC,MAAO,MAAOmH,WAAY,KAAMlH,MAAO,UAElD,0CACA,qCACA,kBAAC8G,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,SACzE,8CACA,kBAACgL,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,SACzE,wCACA,kBAACgL,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,SACzE,wCACA,kBAACgL,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,MAAQzF,QAAS,IAAKqF,OAAQ,OAAQ9K,KAAK,UAI3E,yBAAKgE,MAAO,CAACC,MAAO,MAAOmH,WAAY,KAAMlH,MAAO,UAEpD,yDAQO,yBAAKN,UAAU,aACJ,kBAAC,UAAD,CAASK,MAAO,IAAMiL,EAAKpE,OAA6B,IAArBf,OAAOG,YAAoBgG,QAAS,mBACvE,kBAAC,SAAD,CAAQ9D,KA3EA,CAAE+D,EAAG,KAAMC,EAAI,MA2EIC,MAAM,EAAMC,QAAS,KAAMC,OAAQ,CAAEJ,EAAG,EAAGC,EAAG,IAC/D,oCAAgBtM,GAAG,OAAO0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,MAAMuL,aAAW,YAC9B,0BAAMvL,OAAO,MAAMuL,aAAW,YAC9B,0BAAMvL,OAAO,OAAOuL,aAAW,aAE/BhD,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAqB,IAAboB,EAAmB,kBAAC,UAAD,CAAS6B,UAAW,CAACC,KAAM,aAAcC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,cAAe,WAAY,cAAcoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASC,YAAU,MAAMP,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQC,YAAU,MAAKP,KAAK,SAA5C,IACzbxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQC,YAAU,MAAMP,KAAK,SAA7C,KAAwDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQC,YAAU,MAAMP,KAAK,SAA7C,KAAwDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAAS,IAAM9B,EAAW,OAAkC,kBAAC,UAAD,CAASpL,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,oBAA7B,KAAmDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBACxsB,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,cAAe,WAAY,cAAcoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,QAAQ,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAC3Y,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAExF,oCAAgBtN,GAAG,UAAU0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACrD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,OAAOuL,aAAW,aAEhChD,EAAW,IAAMA,EAAW,GAAwB,IAAhBQ,EAAsB,kBAAC,UAAD,CAASyC,UAAW,CAACC,KAAM,gBAAiBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,iBAAiBoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAQX,EAAE,IAAIiB,GAAG,SAAS,IAAMhD,EAAc,OACvc,kBAAC,UAAD,CAASxK,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,oBAAoBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAErS,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,iBAAiBoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAEzX,oCAAgBtN,GAAG,WAAW0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACvD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,OAAOuL,aAAW,aAEjChD,EAAW,IAAMA,EAAW,GAAyB,IAAjBU,EAAuB,kBAAC,UAAD,CAASuC,UAAW,CAACC,KAAM,iBAAkBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,cAAcoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAM9C,EAAe,OACtc,kBAAC,UAAD,CAAS1K,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAExS,kBAAC,UAAD,CAASP,UAAW,CAACC,KAAM,QAASC,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,cAAcoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAEpY,oCAAgBtN,GAAG,UAAU0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACtD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,OAAOuL,aAAW,aAEhChD,EAAW,IAAMA,EAAW,GAAwB,IAAhBW,EAAsB,kBAAC,UAAD,CAASsC,UAAW,CAACC,KAAM,gBAAgBC,OAAO,SAAU7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,iBAAiBoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAlL,IAAsL,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAM7C,EAAc,OACvc,kBAAC,UAAD,CAAS3K,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAApF,IAAwF,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEzS,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,iBAAiBoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAA/O,IAAmP,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAE1X,oCAAgBtN,GAAG,WAAW0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACvD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,OAAOuL,aAAW,aAE/BhD,EAAW,IAAMA,EAAW,GAAyB,IAAjBM,EAAuB,kBAAC,UAAD,CAAS2C,UAAW,CAACC,KAAM,iBAAkBC,OAAO,SAAU7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,eAAeoD,GAAI,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAQX,EAAE,IAAIiB,GAAG,SAAS,IAAMlD,EAAe,OAC1c,kBAAC,UAAD,CAAStK,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,GAAI,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,oBAA7B,KAAmDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEvS,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,eAAeoD,GAAI,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAEzX,oCAAgBtN,GAAG,UAAU0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACtD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,OAAOuL,aAAW,aAE/BhD,EAAW,IAAMA,EAAW,GAAwB,IAAhBO,EAAsB,kBAAC,UAAD,CAAS0C,UAAW,CAACC,KAAM,gBAAiBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,cAAcoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAMjD,EAAc,OACpc,kBAAC,UAAD,CAASvK,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,oBAAoBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEtS,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,cAAcoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAGxX,oCAAgBtN,GAAG,WAAW0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACvD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,OAAOuL,aAAW,aAG9BhD,EAAW,IAAMA,EAAW,GAAyB,IAAjBS,EAAuB,kBAAC,UAAD,CAASwC,UAAW,CAACC,KAAM,iBAAiBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,iBAAiBoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAM/C,EAAe,OACxc,kBAAC,UAAD,CAASzK,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAExS,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,iBAAiBoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAE1X,oCAAgBtN,GAAG,cAAc0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAC3D,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,MAAMuL,aAAW,YAC9B,0BAAMvL,OAAO,OAAOuL,aAAW,aAGhChD,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAA4B,IAApBkB,EAA0B,kBAAC,UAAD,CAAS+B,UAAW,CAACC,KAAM,oBAAqBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,YAAa,cAAcoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAMtC,EAAkB,MAAhf,MAC/E,kBAAC,UAAD,CAASlL,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,oBAA7B,KAAmDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,iBAApX,MAEA,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,YAAa,cAAcoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,WAAnb,MAED,oCAAgBtN,GAAG,aAAa0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACzD,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,MAAMuL,aAAW,YAC9B,0BAAMvL,OAAO,OAAOuL,aAAW,aAE7BhD,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAA2B,IAAnBc,EAAyB,kBAAC,UAAD,CAASmC,UAAW,CAACC,KAAM,mBAAoBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,WAAY,iBAAiBoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAM1C,EAAiB,OAC9jB,kBAAC,UAAD,CAAS9K,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,oBAAoBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEnX,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,WAAY,iBAAiBoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAEvb,oCAAgBtN,GAAG,cAAc0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAC5D,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,MAAMuL,aAAW,YAC9B,0BAAMvL,OAAO,OAAOuL,aAAW,aAG9BhD,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAA4B,IAApBgB,EAA0B,kBAAC,UAAD,CAASiC,UAAW,CAACC,KAAM,oBAAqBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,YAAa,iBAAiBoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAO,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAMxC,EAAkB,OACpkB,kBAAC,UAAD,CAAShL,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,oBAA7B,KAAmDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEpX,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,YAAa,iBAAiBoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAGzb,oCAAgBtN,GAAG,cAAc0M,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAC1D,0BAAMtL,OAAO,KAAKuL,aAAW,YAC7B,0BAAMvL,OAAO,MAAMuL,aAAW,YAC9B,0BAAMvL,OAAO,OAAOuL,aAAW,aAG/BhD,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAA4B,IAApBY,EAA0B,kBAAC,UAAD,CAASqC,UAAW,CAACC,KAAM,oBAAqBC,OAAO,SAAS7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAK,CAAC,WAAY,WAAY,iBAAiBoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,SAA7B,KAAwCxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAM5C,EAAkB,OAClkB,kBAAC,UAAD,CAAS5K,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,SAASN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,QAAQN,KAAK,sBAA7B,KAAqDxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEtX,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,kBAAmBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAK,CAAC,WAAY,WAAY,iBAAiBoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAAG,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOL,KAAK,MAAMX,EAAE,IAAIiB,GAAG,UAAU,IAAW,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,UAAgB,2BAAOjB,EAAE,IAAIiB,GAAG,YAE1bxD,EAAW,GAAoB,IAAbG,EAAmB,kBAAC,UAAD,CAAS8C,UAAW,CAACC,KAAM,kBAAkBC,OAAQ,oBAAoB7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,iBAAiBoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GACrM,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMC,YAAU,QAAOP,KAAK,SAASxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIW,KAAK,QAAOM,GAAG,SAAS,IAAMrD,EAAW,OAE1K,kBAAC,UAAD,CAASnK,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAmBC,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAChF,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEtI,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,oBAAqBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,iBAAiBoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GACtN,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIkB,YAAU,QAAOP,KAAK,sBAAsBxE,EAAW,MAI7GsB,EAAW,GAAqB,IAAbI,EAAmB,kBAAC,UAAD,CAAS6C,UAAW,CAACC,KAAM,iBAAkBC,OAAQ,mBAAmB7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,cAAcoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GACpM,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMC,YAAU,QAAOP,KAAK,SAASxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAMpD,EAAW,OAEtK,kBAAC,UAAD,CAASpK,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAClF,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEpI,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,mBAAoBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,cAAcoD,EAAG,EAAGC,GAAI,EAAGC,EAAG,GACpN,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIkB,YAAU,QAAOP,KAAK,sBAAsBxE,EAAW,MAO7GsB,EAAW,GAAsB,IAAdC,EAAoB,kBAAC,UAAD,CAASgD,UAAW,CAACC,KAAK,mBAAoBC,OAAQ,qBAAqB7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,cAAcoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GACxM,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMC,YAAU,QAAQP,KAAK,SAASxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAMvD,EAAY,OAE1K,kBAAC,UAAD,CAASjK,UAAU,UAAUiN,UAAW,CAACE,OAAQ,mBAAoBC,GAAI,EAAGC,EAAG,EAAGC,EAAG,GACnF,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,sBAAsBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEpI,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,qBAAsBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,cAAcoD,GAAI,EAAGC,EAAG,EAAGC,EAAG,GACtN,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOE,YAAU,QAAQlB,EAAE,IAAIW,KAAK,sBAAsBxE,EAAW,MAM5GsB,EAAW,GAAqB,IAAbK,EAAmB,kBAAC,UAAD,CAAS4C,UAAW,CAACC,KAAK,iBAAkBC,OAAQ,oBAAoB7O,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,eAAeoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACtM,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMC,YAAU,QAAOP,KAAK,SAASxE,EAAW,IAAW,2BAAOwE,KAAK,QAAOX,EAAE,IAAIiB,GAAG,SAAS,IAAMnD,EAAW,OAEtK,kBAAC,UAAD,CAASrK,UAAU,UAASiN,UAAW,CAACE,OAAQ,mBAAoBC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACnF,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOhB,EAAE,IAAIiB,GAAG,MAAMN,KAAK,oBAAoBxE,EAAW,IAAW,2BAAO6D,EAAE,IAAIiB,GAAG,SAAS,kBAEhI,kBAAC,UAAD,CAASP,UAAW,CAACE,OAAQ,mBAAoBO,YAAa,MAAOC,WAAY,oBAAqB3N,UAAU,UAAU1B,QAAS,kBAAM,EAAKA,QAAQoK,EAAYsB,EAAW,GAAI,CAAC,eAAeoD,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACtN,0BAAMf,EAAE,IAAIC,EAAE,IAAIe,WAAW,UAAS,2BAAOE,YAAU,QAAOlB,EAAE,IAAIW,KAAK,oBAAoBxE,EAAW,c,GAp3B5GlI,cA+9BNC,eA1BS,SAAAvE,GACpB,MAAO,CACHZ,YAAaY,EAAMZ,YACnBC,aAAcW,EAAMX,aACpBC,eAAgBU,EAAMV,eACtBC,YAAaS,EAAMT,YACnB1B,WAAYmC,EAAMnC,WAElBQ,OAAQ2B,EAAM3B,OACdC,QAAS0B,EAAM1B,QACfC,QAASyB,EAAMzB,QACf8J,MAAOrI,EAAMxB,YACbyJ,OAAQjI,EAAMtB,iBAMK,SAAA8F,GACvB,MAAO,CACHoI,cAAe,kBAAMpI,EAAS,CAACtE,KL39BT,oBK49BtByM,YAAa,SAACH,EAAYkF,GAAb,OAA6BlN,EAAS,CAACtE,KL39BhC,eK29BgEpC,MAAO0O,EAAYzO,OAAQ2T,QAKxGnN,CAA6CgI,GC1+BtDoF,G,yDAGF,WAAYxP,GAAQ,IAAD,8BAChB,cAAMA,IAOTO,SAAW,SAACM,EAAO9C,GACJ,YAARA,GAEC,EAAKuC,SAAS,CACXQ,OAAQD,IAKX,EAAKb,MAAMe,iBAAiBF,IAEhB,aAAR9C,GAEJ,EAAKiC,MAAMgB,kBAAkBH,GAC5B,EAAKP,SAAS,CACZQ,OAAQD,KAIC,eAAR9C,GACJ,EAAKiC,MAAMiB,oBAAoBJ,GAC9B,EAAKP,SAAS,CACZQ,OAAQD,MAKX,EAAKb,MAAMkB,iBAAiBL,GAC3B,EAAKP,SAAS,CACZQ,OAAQD,MAlChB,EAAKhD,MAAQ,CACX4R,SAAU,IAJI,E,0CAgDnB,WACQ,IAAIrO,EACSC,KAAKxD,MAAMiD,OAaxB,OAXAM,EAAMC,KAAKrB,MAAMsB,SAASG,KAAI,SAACZ,GAE3B,OACI,yBAAKc,UAAU,YACVd,MASb,yBAAKc,UAAU,wBACRP,O,GArEYe,cCAzBuN,GDqFStN,YAAQ,MAVI,SAAAC,GACvB,MAAO,CACHtB,iBAAkB,SAAC9C,GAAD,OAAWoE,EAAS,CAACtE,KNpFhB,kBMoFmDC,IAAKC,KAC/E+C,kBAAmB,SAAC/C,GAAD,OAAWoE,EAAS,CAACtE,KNpFhB,mBMoFoDC,IAAKC,KACjFgD,oBAAqB,SAAChD,GAAD,OAAWoE,EAAS,CAACtE,KNpFhB,qBMoFsDC,IAAKC,KACrFiD,iBAAkB,SAACjD,GAAD,OAAWoE,EAAS,CAACtE,KNpFhB,kBMoFmDC,IAAKC,QAKxEmE,CAAkCoN,G,kDClF7C,WAAYxP,GAAQ,IAAD,8BAEf,cAAMA,IAEDnC,MAAQ,CAEZuC,QAAS,EAAKJ,MAAMmB,QANN,E,0CAUnB,WAI8CE,KAAKrB,MAAMvD,UAIvC4E,KAAKrB,MAAMtD,UAIX2E,KAAKrB,MAAMrD,YAIX0E,KAAKrB,MAAMpD,SAErB,OAGA,yBAAK+E,UAAU,sB,GAlCCQ,cCQtBwN,GDiDSvN,aAZS,SAAAvE,GAGpB,OADA8B,QAAQC,IAAI/B,EAAMhB,SACX,CACHJ,UAAWoB,EAAMhB,QACjBH,UAAWmB,EAAMf,OACjBH,YAAakB,EAAMd,OACnBH,SAAUiB,EAAMb,UAKToF,CAAyBsN,G,gEC/CtC,WAAY1P,GAAQ,IAAD,8BACjB,cAAMA,IAcR4P,WAAa,WACX,EAAKtP,SAAS,CACZuP,iBAAkB,EAAKhS,MAAMgS,mBAjBd,EAqBnBC,UAAY,WACV,EAAKxP,SAAS,CACZyP,gBAAiB,EAAKlS,MAAMkS,kBAvBb,EA2BnBC,WAAa,WACX,EAAK1P,SAAS,CACZ2P,iBAAkB,EAAKpS,MAAMoS,mBA7Bd,EAiCnBC,eAAiB,SAACtO,GAEhB,IAAIzD,EAAOyD,EAAKuO,UAAU,IAC1BxQ,QAAQC,IAAIzB,GACZ,EAAK6B,MAAMkQ,eAAe/R,IAlC1B,EAAKN,MAAQ,CACXgS,iBAAiB,EACjBE,gBAAgB,EAChBE,iBAAiB,GAGnB,EAAKH,UAAY,EAAKA,UAAUzI,KAAf,gBACjB,EAAKuI,WAAa,EAAKA,WAAWvI,KAAhB,gBAClB,EAAK2I,WAAa,EAAKA,WAAW3I,KAAhB,gBAXD,E,qDAyCnB,WAEA,IAAI+I,EAAQC,SAASC,eAAe,aAChCC,EAAQF,SAASC,eAAe,aAChCE,EAAQH,SAASC,eAAe,aAChCG,EAAQJ,SAASC,eAAe,aAChCI,EAAQL,SAASC,eAAe,aAEpCxI,OAAO6I,iBAAiB,SAAS,SAASC,GAEtB,IAAbA,EAAEC,OAEED,EAAEzC,EAAIiC,EAAMU,wBAAwBC,OACrCX,EAAMY,YAAcJ,EAAEC,OAIhBD,EAAEzC,EAAIoC,EAAMO,wBAAwBC,OACjDR,EAAMS,YAAcJ,EAAEC,OAITD,EAAEzC,EAAIqC,EAAMM,wBAAwBC,OAC5CP,EAAMQ,YAAcJ,EAAEC,OAIdD,EAAEzC,EAAIsC,EAAMK,wBAAwBC,OAC1CN,EAAMO,YAAcJ,EAAEC,OAIhBD,EAAEzC,EAAIuC,EAAMI,wBAAwBC,SAC1CL,EAAMM,YAAcJ,EAAEC,QAMpBD,EAAEzC,EAAIiC,EAAMU,wBAAwBC,OACtCH,EAAEK,OAAS,EAAGb,EAAMY,YAAc,IACjCZ,EAAMY,YAAc,IAGnBJ,EAAEzC,EAAIoC,EAAMO,wBAAwBC,OACtCH,EAAEK,OAAS,EAAGV,EAAMS,YAAc,IACjCT,EAAMS,YAAc,IAGnBJ,EAAEzC,EAAIqC,EAAMM,wBAAwBC,OACtCH,EAAEK,OAAS,EAAGT,EAAMQ,YAAc,IACjCR,EAAMQ,YAAc,IAGnBJ,EAAEzC,EAAIsC,EAAMK,wBAAwBC,OACtCH,EAAEK,OAAS,EAAGR,EAAMO,YAAc,IACjCP,EAAMO,YAAc,IAGnBJ,EAAEzC,EAAIuC,EAAMI,wBAAwBC,SACtCH,EAAEK,OAAS,EAAGP,EAAMM,YAAc,IACjCN,EAAMM,YAAc,U,oBAO/B,WAAU,IAEJ5P,EAFG,OAqHP,MA9GuB,aAApBC,KAAKrB,MAAMjC,KACR,EACsB,aAApBsD,KAAKrB,MAAMjC,KACb,EACsB,uBAApBsD,KAAKrB,MAAMjC,KACb,EACsB,oBAApBsD,KAAKrB,MAAMjC,MACb,EAENqD,EAAMC,KAAKrB,MAAM6C,IAAIpB,KAAI,SAACZ,GAExBmD,EACA,IAAIkN,EAAQ,EAAKlR,MAAMvC,UAAU4C,SAASQ,EAAM,kBAAkBsP,UAAU,KAIzEgB,SAAStQ,EAAK,cAAoB,KAE7BsQ,SAAStQ,EAAK,cAAoB,KAElCsQ,SAAStQ,EAAK,cAAoB,KAElCsQ,SAAStQ,EAAK,cAAoB,IAElCsQ,SAAStQ,EAAK,gBAKnBsQ,SAAStQ,EAAK,YAAkB,IAE3BsQ,SAAStQ,EAAK,YActB,OANoC,IAAjCsQ,SAAStQ,EAAK,WACT,MACiC,IAAjCsQ,SAAStQ,EAAK,YACd,SAKN,yBAAKc,UAAU,aAEb,yBAAKA,UAAU,SACb,uBAAIyP,KAAMvQ,EAAM,kBAAmByC,OAAO,UAE1C,yBAAKzB,GAAG,QAAQkB,IAAK,oDAAsDlC,EAAM,UAAY,OAASwQ,QAAS,SAACT,GAAOA,EAAEtN,OAAOgO,MAAQ,KAAMV,EAAEtN,OAAOP,IAAM,qEAAsEC,IAAI,GAAGjB,MAAO,CAAC8G,OAAQ,OAAQ7G,MAAO,OAAQkI,UAAW,YAE5R,uBAAIkH,KAAMvQ,EAAM,kBAAmByC,OAAO,UAC1C,yBAAKzB,GAAG,QAAQF,UAAU,YAAad,EAAM,kBAAkByK,OAAS,GAAOzK,EAAM,kBAAsBA,EAAM,kBAAkBsP,UAAU,EAAG,IAAM,QAIpJ,EAAKnQ,MAAMuR,SAAa,yBAAK1P,GAAG,QAAQF,UAAU,UAAS,kBAACoH,EAAA,EAAD,CAAOyI,QAASN,EAAOjR,QAAS,kBAAM,EAAKiQ,eAAerP,EAAM,oBAAoB9C,KAAK,aAAc,KAAe,mCAoDzL,yBAAK4D,UAAU,eAEb,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,WAAWN,KAAKrB,MAAMjC,OAGzC,yBAAK4D,UAAU,oBAEb,yBAAKE,GAAI,WAAaR,KAAKrB,MAAMyR,MAAO9P,UAAU,cAAcI,MAAO,CAACmH,QAAS,OAAQL,OAAQ,OAAQ6I,SAAU,WAChHtQ,S,GA9OkBe,cAsQhBC,eARS,SAAAvE,GACpB,MAAO,CACHJ,UAAWI,EAAMJ,UAEjB8T,SAAU1T,EAAMF,eAVG,SAAA0E,GACvB,MAAO,CACH6N,eAAgB,SAACjS,GAAD,OAAWoE,EAAS,CAACtE,KR3Ob,mBQ2OiDC,IAAKC,EAAMsB,SAAS,EAAE,UAYxF6C,CAA6CuN,G,SC1QtDgC,GCDuBxP,Y,kDDOzB,WAAYnC,GAAQ,IAAD,8BAEf,cAAMA,IAaV4R,WAAa,SAAC1N,GAEZ,OAAG,EAAKlE,MAAMrE,MAAM,GAAGsP,cAAcY,OAAOxL,SAAS,iBACpB,KAAvB6D,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,cAEjEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SApBtQ,EAuBnBgG,UAAY,SAAC3N,GACX,OAAQA,EAAK,eAAe+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAxBzQ,EA2BnBiG,UAAY,SAAC5N,GAEX,OAAG,EAAKlE,MAAMrE,MAAM,GAAGsP,cAAcY,OAAOxL,SAAS,oBACjB,KAA1B6D,EAAK,kBAAqD,KAA1BA,EAAK,iBAEvCA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAhC9K,EAmCnBkG,UAAY,SAAC7N,GAEX,OAAG,EAAKlE,MAAMrE,MAAM,GAAGsP,cAAcY,OAAOxL,SAAS,gBACpB,KAAvB6D,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,cAEjEA,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAAW3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS,EAAKL,MAAMrE,MAAM,GAAGsP,cAAcY,SAxCtQ,EA2CnBd,WAAa,SAAC7G,GAEZ,MAAoB,KAAjBA,EAAI,MAECA,EAAI,MAAY,EAAKlE,MAAM7D,SAAW+H,EAAI,MAAY,EAAKlE,MAAM5D,SA/CxD,EAkDnB4O,YAAc,SAAC9G,GAEb,MAA6B,QAArB,EAAKlE,MAAMkG,OAAmBhC,EAAK,sBAAsB+G,gBAAkB,EAAKjL,MAAMkG,MAAM+E,eApDnF,EAuDnB+G,aAAe,SAAC9N,GACd,IAAI+N,EAAU,GAKd,MAJG,YAAa/N,IACd+N,EAAU/N,EAAI,SAGc,QAAtB,EAAKlE,MAAMkS,QAAoBD,EAAQhH,cAAc5K,SAAS,EAAKL,MAAMkG,MAAM+E,gBA7DtE,EAgEnBC,aAAe,SAAChH,GAER,MAAsB,KAAnBA,EAAI,QAAwC,SAAnBA,EAAI,SAGF,SAAtB,EAAKlE,MAAM8F,QAAqB5B,EAAI,OAAW+G,gBAAkB,EAAKjL,MAAM8F,OAAOmF,gBArEhF,EAwEnBkH,aAAe,SAACC,GACd,IAAK,IAAIpO,EAAIoO,EAAM9G,OAAS,EAAGtH,EAAI,EAAGA,IAAK,CACvC,IAAMqO,EAAIC,KAAKC,MAAM,EAAKC,OAAOxO,IAAMA,EAAI,IADJ,EAEhB,CAACoO,EAAMC,GAAID,EAAMpO,IAAvCoO,EAAMpO,GAFgC,KAE5BoO,EAAMC,GAFsB,KAK3C,OAAOD,GA9EU,EAiFnBI,OAAS,SAACC,GACR,IAAIvE,EAAuB,IAAnBoE,KAAKI,IAAID,KACjB,OAAOvE,EAAIoE,KAAKC,MAAMrE,IA/EpB,EAAKrQ,MAAQ,CAEX8U,WAAY,GACZC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,SAAU,GACV7U,UAAU,GAXG,E,0CAsFnB,WAAU,IAAD,OAEGqN,EAAYlK,KAAKrB,MAAMgT,QAEvB3R,KAAKrB,MAAMtC,cAyCf6N,EAAYA,EAAUrP,QAAO,SAACgI,GAE5B,OAAO,EAAKlE,MAAMvC,UAAU4C,SAAS6D,EAAK,kBAAkBiM,UAAU,QA1C9D9O,KAAKrB,MAAMvE,cA6Bb8P,EAAYA,EAAUrP,QAAO,SAACgI,GAC5B,OAAOA,EAAK,kBAAkB+G,cAAc5K,SAAS,EAAKL,MAAMiT,YAAYhI,mBApBtEtL,QAAQC,IAAI2L,GAEXlK,KAAKrB,MAAMpE,OAAOyE,SAAS,cAC3BkL,EAAYA,EAAUrP,OAAOmF,KAAKuQ,aAGlCvQ,KAAKrB,MAAMpE,OAAOyE,SAAS,eAC3BkL,EAAYA,EAAUrP,OAAOmF,KAAKwQ,YAElCxQ,KAAKrB,MAAMpE,OAAOyE,SAAS,iBAC3BkL,EAAYA,EAAUrP,OAAOmF,KAAKyQ,YAElCzQ,KAAKrB,MAAMpE,OAAOyE,SAAS,cAC3BkL,EAAYA,EAAUrP,OAAOmF,KAAK0Q,aAwBrD1Q,KAAKrB,MAAMkT,oBAAoB3H,GAE/B,IAAI4H,EACAC,EACAC,EACAC,EACAC,EAEJJ,EAAc5H,EAAUrP,QAAO,SAACgI,GAC9B,YAAwBsP,IAArBtP,EAAI,UAEAoO,KAAKE,SAAW,MAIzBY,EAAe7H,EAAUrP,QAAO,SAACgI,GAC/B,YAAwBsP,IAArBtP,EAAI,UAEAoO,KAAKE,SAAW,MAIzBa,EAAgB9H,EAAUrP,QAAO,SAACgI,GAChC,YAAkCsP,IAA/BtP,EAAK,uBAEDoO,KAAKE,SAAW,MAIzBc,EAAc/H,EAAUrP,QAAO,SAACgI,GAC9B,YAA+BsP,IAA5BtP,EAAK,oBAEDoO,KAAKE,SAAW,MAIzBe,EAAahI,EAAUrP,QAAO,SAACgI,GAC7B,YAAuBsP,IAApBtP,EAAI,SAEAoO,KAAKE,SAAW,MAKzB,IAAItU,EAAWmD,KAAKrB,MAAM9B,SACtB8F,EAAI,EACJyP,EAAelI,EAAU9J,KAAI,SAACyC,GAChC,OACE,4BACE,wBAAIwP,MAAM,OAAO1P,KACjB,4BAAKE,EAAK,mBACV,4BAAKA,EAAK,uBAKZyP,EAAW,mBAmCf,OAjCItS,KAAKrB,MAAMtC,gBAEbiW,EAAW,GACRtS,KAAKrB,MAAMpE,OAAOyE,SAAS,cACZ,KAAbsT,EACDA,GAAsBtS,KAAKrB,MAAMrE,MAAM,GAEvCgY,EAAWA,EAAW,MAAQtS,KAAKrB,MAAMrE,MAAM,IAGhD0F,KAAKrB,MAAMpE,OAAOyE,SAAS,eACZ,KAAbsT,EACDA,GAAsBtS,KAAKrB,MAAMrE,MAAM,GAEvCgY,EAAWA,EAAW,MAAQtS,KAAKrB,MAAMrE,MAAM,IAGhD0F,KAAKrB,MAAMpE,OAAOyE,SAAS,iBACZ,KAAbsT,EACDA,GAAsBtS,KAAKrB,MAAMrE,MAAM,GAEvCgY,EAAWA,EAAW,MAAStS,KAAKrB,MAAMrE,MAAM,IAGjD0F,KAAKrB,MAAMpE,OAAOyE,SAAS,cACZ,KAAbsT,EACDA,GAAsBtS,KAAKrB,MAAMrE,MAAM,GAEvCgY,EAAWA,EAAW,MAAQtS,KAAKrB,MAAMrE,MAAM,KAOnD,yBAAKoG,MAAO,CAACC,MAAO,UAChB9D,EAAa,yBAAKyD,UAAU,cACxB,kBAACiS,EAAA,EAAD,CAAOC,SAAO,GACd,+BACE,iCACA,8CACA,qCAEF,+BACGJ,KAKR,yBAAK9R,UAAU,gBACT,yBAAKA,UAAU,aACb,yBAAK1B,QAASoB,KAAKrB,MAAM8T,aAAanS,UAAU,aAC5C,yBAAKI,MAAO,CAAE8G,OAAQ,MAAMmB,SAAU,OAAQxG,QAAS,SAAU,yBAErE,yBAAK7B,UAAU,YACX,yBAAKI,MAAO,CAAC8G,OAAQ,MAAOmB,SAAU,OAAQxG,QAAS,SAAUmQ,KAGvE,kBAAC,EAAD,CAAkBlC,MAAM,IAAI1T,KAAK,WAAW8E,IAAKxB,KAAK8Q,aAAagB,KACnE,kBAAC,EAAD,CAAkB1B,MAAM,IAAI1T,KAAK,YAAY8E,IAAKxB,KAAK8Q,aAAaiB,KACpE,kBAAC,EAAD,CAAkB3B,MAAM,IAAI1T,KAAK,aAAa8E,IAAKxB,KAAK8Q,aAAakB,KACrE,kBAAC,EAAD,CAAkB5B,MAAM,IAAI1T,KAAK,WAAW8E,IAAKxB,KAAK8Q,aAAamB,KACpE,kBAAC,EAAD,CAAkB7B,MAAM,IAAI1T,KAAK,UAAU8E,IAAKxB,KAAK8Q,aAAaoB,W,GAxQ1DpR,cA8SbC,eA9BS,SAAAvE,GACpB,MAAO,CACHmV,QAASnV,EAAMnC,WACfC,MAAOkC,EAAMlC,MACbC,OAAQiC,EAAMjC,OAEdM,OAAQ2B,EAAM3B,OACdC,QAAS0B,EAAM1B,QACfC,QAASyB,EAAMzB,QACf8J,MAAOrI,EAAMxB,YACbyJ,OAAQjI,EAAMtB,aAEd2B,SAAUL,EAAMK,SAEhBzC,cAAeoC,EAAM9B,kBACrBkX,YAAapV,EAAM7B,gBAEnB0B,cAAeG,EAAMH,cACrBD,UAAWI,EAAMJ,cAIE,SAAA4E,GACvB,MAAO,CACH6Q,oBAAqB,SAACjV,GAAD,OAAWoE,EAAS,CAACtE,KT7Qd,uBS6QsDC,IAAKC,QAMhFmE,CAA6CuP,G,8FEhTtDoC,G,kDAEJ,WAAY/T,GAAQ,IAAD,8BAEf,cAAMA,IAECnC,MAAQ,GAJA,E,0CASnB,WAAU,IAAD,OASH2G,GAPUnD,KAAKrB,MAAM8B,MAOd,IAkBX0C,EAjBwB,aAArBnD,KAAKrB,MAAM8B,MACET,KAAKrB,MAAMgU,SAGHvS,KAAI,SAACwS,GAEvB,IAAI9V,EAAO,EAAK6B,MAAMtE,WAAWQ,QAAO,SAACgI,GAEvC,OAAQA,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SAC5E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SACvE3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,WAG5E,MAAO,CAACjK,KAAMqS,EAASC,QAAS/V,EAAKmN,WAOd,gBAArBjK,KAAKrB,MAAM8B,MAEPT,KAAKrB,MAAMrD,YAGH8E,KAAI,SAACwS,GAEvB,IAAI9V,EAAO,EAAK6B,MAAMtE,WAAWQ,QAAO,SAACgI,GAEvC,OAAOA,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SAC9E3H,EAAK,iBAAiB+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,WAG/E,MAAO,CAACjK,KAAMqS,EAASC,QAAS/V,EAAKmN,WAO3BjK,KAAKrB,MAAMpD,SAGH6E,KAAI,SAACwS,GAEvB,IAAI9V,EAAO,EAAK6B,MAAMtE,WAAWQ,QAAO,SAACgI,GAEvC,OAAQA,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SAC5E3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SACvE3H,EAAK,cAAc+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,WAG5E,MAAO,CAACjK,KAAMqS,EAASC,QAAS/V,EAAKmN,WAQvC,IAAIhD,EAAY,qBAEQ,gBAArBjH,KAAKrB,MAAM8B,QACZwG,EAAY,sBAEU,aAArBjH,KAAKrB,MAAM8B,QACZwG,EAAY,sBAEd,IAAIT,EAAIC,OAAOC,WAAa,KACxBC,EAAIF,OAAOG,YAAc,IAC7B,OACE,yBAAKlG,MAAO,CAACC,MAAO,MAAOkH,QAAS,SAEpC,yBAAKnH,MAAO,CAACE,MAAOqG,EAAW6L,WAAY,SAAU9S,KAAKrB,MAAM8B,OAChE,yBAAKC,MAAO,CAAC0B,UAAW,sBAClB,kBAAC,KAAD,CAAUzB,MAAO,IAAM6F,EAAGgB,OAAQ,IAAMb,EAAGxD,KAAMA,EAC7CkJ,OAAQ,CAAC0G,IAAK,EAAIpM,EAAGqM,MAAO,GAAKxM,EAAGyM,KAAM,GAAKzM,EAAGkJ,OAAQ,EAAI/I,IAEnE,kBAAC,KAAD,CAAOuM,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,CAASC,QAAQ,IACjB,kBAAC,KAAD,CAAKzS,MAAO,CAAC8M,KAAMvG,GAAYiM,QAAQ,UAAU1F,KAAK,iB,GAtGzC1M,aAyHTC,gBATS,SAAAvE,GACpB,MAAO,CACHnC,WAAYmC,EAAMnC,WAClBsY,SAAUnW,EAAMpB,UAChBG,SAAUiB,EAAMjB,SAChBD,YAAakB,EAAMlB,eAIZyF,CAAyB2R,ICzHlCU,G,kDAEJ,WAAYzU,GAAQ,IAAD,8BAEf,cAAMA,IAECnC,MAAQ,GAJA,E,0CASnB,WAAU,IAIJ2G,EAJG,OAoBPA,EAdUnD,KAAKrB,MAAMtD,UAEH+E,KAAI,SAACwS,GAEvB,IAAI9V,EAAO,EAAK6B,MAAMtE,WAAWQ,QAAO,SAACgI,GAEvC,OAAQA,EAAK,eAAe+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SAC7E3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,SACxE3H,EAAK,eAAe+G,cAAcY,OAAOxL,SAAS4T,EAAQhJ,cAAcY,WAG7E,MAAO,CAACjK,KAAMqS,EAAShW,MAAOE,EAAKmN,WAKnC,IADA,IAAIoJ,EAAM,GACF1Q,EAAI,EAAGA,EAAIQ,EAAK8G,OAAQtH,IAC9B0Q,EAAIlQ,EAAKR,GAAGpC,MAAQ4C,EAAKR,GAAG/F,MAG9B0B,QAAQC,IAAI8U,GAGZ,IAAI7M,EAAIC,OAAOC,WAAa,KACxBC,EAAIF,OAAOG,YAAc,IAEzBjK,EAAM,aAAe,GAAK6J,EAAI,QAAU,GAAKG,EAAI,MAErD,OACE,yBAAKjG,MAAO,CAACC,MAAO,MAAOkH,QAAS,SAChC,yBAAKnH,MAAO,CAACE,MAAM,mBAAoBkS,WAAY,SAAnD,cACA,yBAAKpS,MAAO,CAAC0B,UAAWzF,EAAK2W,SAAU,aACnC,yBAAK5R,IAAK,oCACTC,IAAI,GAAGjB,MAAO,CAAC8G,OAAQ,OAAQ7G,MAAO,MAAOkI,UAAW,WACxD,yBAAKnI,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAG,MACrH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAG,MACrH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAG,OACrH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAI,kBACtH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAY5D,OAAQ,OAAQuD,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAG,MAEzH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAG,MACrH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAI,mBACtH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAI,OAAQ6M,EAAG,MAErH,yBAAK3S,MAAO,CAAC4S,SAAU,WAAYP,IAAK,MAAOE,KAAM,MAAOrS,MAAO,mBAAoB+H,SAAU,GAAKnC,EAAIG,EAAI,OAAQ0M,EAAI,oB,GA7DjHvS,aA6ETC,gBAPS,SAAAvE,GACpB,MAAO,CACHnC,WAAYmC,EAAMnC,WAClBgB,UAAWmB,EAAMnB,aAIV0F,CAAyBqS,ICnElCG,IAD0BC,IAAOC,wBACzBD,IAAOD,OAEfG,G,kDAMF,WAAY/U,GAAQ,IAAD,8BACb,cAAMA,IAeZgV,YAAc,WACZ,EAAK1U,UAAS,SAAAqH,GAAS,MAAK,CAC1B+C,OAAQ/C,EAAU+C,UAGpB,EAAK1K,MAAMiV,gBArBM,EAyBnBC,cAAgB,WACd,EAAK5U,UAAS,SAAAqH,GAAS,MAAK,CAC1BwN,cAAexN,EAAUwN,kBA3BV,EA+ClBnM,SAAW,SAAC/K,GAEV0B,QAAQC,IAAI3B,EAAM,IAEnB,EAAK+B,MAAM2S,aACX,EAAK3S,MAAM+K,WAAW9M,EAAM,GAAIA,EAAM,KApDrB,EAuDnBmX,aAAe,SAACnX,GAEd,IAAID,EAAMC,EAAMoX,MAAM,MAEtB1V,QAAQC,IAAI5B,EAAI,IAChB,EAAKsC,SAAS,CACZ4F,MAAOlI,EAAI,KAGb,EAAKgC,MAAMgL,YAAYhN,EAAI,KAhEV,EAmEnBsX,cAAgB,SAACrX,GAEf,IAAID,EAAMC,EAAMoX,MAAM,MAEtB1V,QAAQC,IAAI5B,EAAI,IAChB,EAAKsC,SAAS,CACZ4R,OAAQlU,EAAI,KAGd,EAAKgC,MAAMgS,aAAahU,EAAI,KA5EX,EA+EnBuX,cAAgB,SAACtX,GAEf,IAAIE,EAAOF,EAEE,gBAAVA,EAGCE,EADuB,gBAAtB,EAAK6B,MAAM8F,OACL,OAEA,cAIO,YAAV7H,IAGJE,EADuB,YAAtB,EAAK6B,MAAM8F,OACL,OAEA,WAOb,EAAK9F,MAAMkL,aAAa/M,IAxGL,EAscnBsM,cAAgB,WAEd,EAAKzK,MAAMyK,iBAxcM,EA2cnB+K,gBAAkB,WAEhB,EAAKxV,MAAMwV,mBA3cP,EAAKC,aAAe,EAAKA,aAAapO,KAAlB,gBACpB,EAAKqO,YAAc,EAAKA,YAAYrO,KAAjB,gBACnB,EAAKxJ,MAAQ,CACX8X,mBAAmB,EACnBC,oBAAoB,EACpB1P,MAAO,MACPwE,OAAO,EACPmL,YAAY,EACZ3D,OAAQ,MACR4D,WAAY,EACZX,aAAc,GAZH,E,+CA+BnB,WAEE9T,KAAKf,UAAS,SAAAqH,GAAS,MAAK,CAC1BgO,mBAAoBhO,EAAUgO,kBAC9BE,YAAalO,EAAUkO,iB,0BAI5B,WAEExU,KAAKf,UAAS,SAAAqH,GAAS,MAAK,CAC1BiO,oBAAqBjO,EAAUiO,mBAC/BC,YAAalO,EAAUkO,iB,oBAgE1B,WAUE,IAVQ,IAAD,OAEHhO,EAAIC,OAAOC,WAAa,KACxBC,EAAIF,OAAOG,YAAc,IAEzBvM,EAAa2F,KAAKrB,MAAMtE,WACxBqa,EAAW,GACXC,EAAY,GAGRhS,EAAI,EAAGA,EAAItI,EAAW4P,OAAQtH,IAAK,CACzC+R,EAASxX,KAAK7C,EAAWsI,GAAG,uBAE5B,IAAIiO,EAAU,GACX,YAAavW,EAAWsI,KACzBiO,EAAUvW,EAAWsI,GAAX,SAIZ,IAFA,IAAIiS,EAAehE,EAAQoD,MAAM,KAEzBhD,EAAI,EAAGA,EAAI4D,EAAa3K,OAAQ+G,IACtC2D,EAAUzX,KAAK0X,EAAa5D,GAAGxG,QAI/BxK,KAAKrB,MAAMkW,WAEbxa,EAAa2F,KAAKrB,MAAMmW,eAG1BJ,EAASvU,QAAQ,OACjBwU,EAAUxU,QAAQ,OAElBuU,EAAWA,EAAStU,KAAI,SAACyE,GAEvB,GAAG,EAAKlG,MAAMkW,SAAU,CAClB,GAAa,QAAVhQ,EACC,OAAOA,EAAQ,KAAO,EAAKlG,MAAMtE,WAAW4P,OAAS,IAEzD,IAAInN,EAAO,EAAK6B,MAAMtE,WAAWQ,QAAO,SAACgI,GAAD,OAAUA,EAAK,sBAAsB+G,gBAAkB/E,EAAM+E,iBAGrG,OAAO/E,EAAQ,KAAO/H,EAAKmN,OAAS,IAItC,GAAa,QAAVpF,EACD,OAAOA,EAAQ,KAAO,EAAKlG,MAAMmW,cAAc7K,OAAS,IAC1D,IAAInN,EAAO,EAAK6B,MAAMmW,cAAcja,QAAO,SAACgI,GAAD,OAAUA,EAAK,sBAAsB+G,gBAAkB/E,EAAM+E,iBAExG,OAAO/E,EAAQ,KAAO/H,EAAKmN,OAAS,OAO1C0K,EAAYA,EAAUvU,KAAI,SAACyQ,GAEzB,GAAG,EAAKlS,MAAMkW,SAAU,CAClB,GAAc,QAAXhE,EACC,OAAOA,EAAS,KAAO,EAAKlS,MAAMtE,WAAW4P,OAAS,IAE1D,IAAI8K,EAAiB,EAAKpW,MAAMtE,WAAWQ,QAAO,SAACgI,GACjD,IAAI+N,EAAU,GACX,YAAa/N,IACd+N,EAAU/N,EAAI,SAEhB+N,EAAQhH,cAAc5K,SAAS6R,EAAOjH,kBAIxC,OAAOiH,EAAS,KAAOkE,EAAe9K,OAAS,IAIjD,GAAc,QAAX4G,EACD,OAAOA,EAAS,KAAO,EAAKlS,MAAMmW,cAAc7K,OAAS,IAC3D,IAAI8K,EAAiB,EAAKpW,MAAMmW,cAAcja,QAAO,SAACgI,GACpD,IAAI+N,EAAU,GACX,YAAa/N,IACd+N,EAAU/N,EAAI,SAEhB+N,EAAQhH,cAAc5K,SAAS6R,EAAOjH,kBAGxC,OAAOiH,EAAS,KAAOkE,EAAe9K,OAAS,OAIrD,IAAI+K,EAAShV,KAAKrB,MAAMtE,WAEpB2F,KAAKrB,MAAMkW,WACbG,EAAShV,KAAKrB,MAAMmW,eAEtB,IAAIG,EAAoBD,EAAOna,QAAO,SAACgI,GACrC,MAA2B,gBAAnBA,EAAI,QAAmD,SAAnBA,EAAI,UAG9CqS,EAAgBF,EAAOna,QAAO,SAACgI,GACjC,MAA2B,YAAnBA,EAAI,QAA+C,SAAnBA,EAAI,UAG1CsS,EAAYF,EAAkBhL,OAC9BmL,EAAaF,EAAcjL,OAG/BmL,EAAa,KADbD,EAAwB,IAAZA,GAAmBA,EAAYC,IAK3CV,GAFAA,EAAQ,YAAO,IAAIW,IAAIX,KAEHtU,KAAI,SAACyE,GACvB,OACE,kBAACyQ,GAAA,EAAD,CAAc1W,QAAS,kBAAM,EAAKmV,aAAalP,KAASA,MAM5D8P,GAFAA,EAAS,YAAO,IAAIU,IAAIV,KAEFvU,KAAI,SAACyQ,GACzB,OACE,kBAACyE,GAAA,EAAD,CAAc1W,QAAS,kBAAM,EAAKqV,cAAcpD,KAAUA,MAgB9D,IAZA,IAUI0E,EAAW,GAtIR,WAwIC5S,GAEN,IAAI7F,EAAOkY,EAAOna,QAAO,SAACgI,GAExB,OAAOA,EAAI,OAAaF,EAAEzE,cAG5BqX,EAAQ,sBACDA,GADC,CAEJ,CACEhV,KAAMoC,EAAEzE,WACRsX,SAAU1Y,EAAKmN,WAXftH,EAAI,KAAMA,GAAK,KAAMA,IAAM,EAA3BA,GAgBN,IAAMmJ,EAAW,kBAAClD,EAAA,EAAD,CAAQhK,QAASoB,KAAK2T,YAAa/S,MAAM,aAAa,aACjE6U,EAAkB,kBAAC7M,EAAA,EAAD,CAAQhK,QAASoB,KAAK6T,cAAejT,MAAM,aAAa,aAClF,OACI,6BACI,yBAAKF,MAAO,CAAE+G,UAAW,KAAMkB,SAAU,SAAzC,cACA,kBAAC,KAAD,CAAUhI,MAAO,IAAM6F,EAAGgB,OAAQ,IAAMb,EAAGxD,KAAMoS,EAC7ClJ,OAAQ,CAAC0G,IAAK,EAAIpM,EAAGsM,KAAM,EAAGvD,OAAQ,IACtC,kBAAC,KAAD,CAAOwD,QAAQ,OAAOwC,MAAM,IAC5B,kBAAC,KAAD,CAASvC,QAAQ,IACjB,kBAAC,KAAD,CAAKD,QAAQ,cAGjB,kBAACK,GAAD,CAAOoC,YAAa,CAAC,CAAE9U,gBAAiB,SAAU,CAACA,gBAAiB,UAAY+U,WAAY,CAAC,CAAE/U,gBAAiB,OAAQ2G,OAAQ,EAAIb,EAAI,OACxIkP,YAAY,EAAQC,UAAW,CAAEjV,gBAAiB,SAAWkV,IAAK,KAAMC,IAAK,KAAMC,aAAc,CAACjW,KAAKrB,MAAM7D,QAASkF,KAAKrB,MAAM5D,SAAU4M,SAAU,SAAC/K,GAAD,OAAW,EAAK+K,SAAS/K,MAC9K,6BAAMoD,KAAKrB,MAAM7D,QAAQ,0BAAM4F,MAAO,CAACwV,MAAO,UAAWlW,KAAKrB,MAAM5D,UAEpE,yBAAK2F,MAAO,CAAE+G,UAAW,KAAMkB,SAAU,SAAzC,qBACA,kBAACwN,GAAA,EAAD,CAAgBzV,MAAO,CAACC,MAAM,OAAQ6G,OAAQ,GAAKb,EAAI,MAAO4F,OAAQvM,KAAKxD,MAAM8X,kBAAmBpT,OAAQlB,KAAKqU,aACzG,kBAAC+B,GAAA,EAAD,CAAgB1V,MAAO,CAACG,gBAAiB,QAASD,MAAO,SAAUyV,OAAK,GACtE,yBAAK3V,MAAO,CAAE0B,UAAW,qBAAsBpC,KAAKxD,MAAMqI,QAE5D,kBAACyR,GAAA,EAAD,CAAchW,UAAU,gBAAgBI,MAAO,CAACC,MAAM,OAAQgM,UAAU,SAAUnF,OAA6B,GAArBf,OAAOG,cAC9F8N,IAIX,yBAAKhU,MAAO,CAAE+G,UAAW,KAAMkB,SAAU,SAAzC,WACA,kBAACwN,GAAA,EAAD,CAAgBzV,MAAO,CAACC,MAAM,OAAQ6G,OAAQ,GAAKb,EAAI,MAAO4F,OAAQvM,KAAKxD,MAAM+X,mBAAoBrT,OAAQlB,KAAKoU,cAC1G,kBAACgC,GAAA,EAAD,CAAgB1V,MAAO,CAACG,gBAAiB,QAASD,MAAO,SAAUyV,OAAK,GACtE,yBAAK3V,MAAO,CAAE0B,UAAW,qBAAsBpC,KAAKxD,MAAMqU,SAE5D,kBAACyF,GAAA,EAAD,CAAchW,UAAU,gBAAgBI,MAAO,CAACC,MAAM,OAAQgM,UAAU,SAAUnF,OAA6B,GAArBf,OAAOG,cAC9F+N,IAuCX,yBAAKjU,MAAO,CAAC+G,UAAW,KAAMK,WAAY,QACxC,kBAACc,EAAA,EAAD,CAAQtI,UAAU,iBAAiBI,MAAO,CAACC,MAAO,OAAQ/B,QAASoB,KAAKoJ,eAAiBpJ,KAAKrB,MAAM9B,SAAa,gCAAoC,6BAAuC,KAG5LmD,KAAKrB,MAAMuR,SAAa,yBAAKxP,MAAO,CAAC+G,UAAW,KAAMK,WAAY,QAClE,kBAACc,EAAA,EAAD,CAAQtI,UAAU,iBAAiBI,MAAO,CAACC,MAAO,OAAQ/B,QAASoB,KAAKmU,iBAAmBnU,KAAKrB,MAAMtC,cAAkB,mBAAuB,yBAAmC,KACzK,8BAEX,yBAAKqE,MAAO,CAAC+G,UAAW,KAAMK,WAAY,MAAOyO,OAAQ,oBAGjD,kBAAC3N,EAAA,EAAD,CAAQtI,UAAU,iBAAiBI,MAAO,CAACC,MAAO,OAAQ/B,QAASoB,KAAK2T,aAAxE,uBAEA,kBAACxH,EAAA,EAAD,CAAOzL,MAAO,CAAC0L,SAAU,OAAQC,OAAQ,KAAMC,UAAW,OAAQ3L,MAAO,OAAQ6G,OAAQ,QAAS+E,OAAQvM,KAAKxD,MAAM6M,MAAOnI,OAAQlB,KAAKkB,QACvI,kBAACsL,EAAA,EAAD,CAAaC,MAAOX,EAAUpL,MAAO,CAACG,gBAAiB,QAASD,MAAO,SAAUM,OAAQlB,KAAK2T,aAA9F,uBAEA,kBAACjH,EAAA,EAAD,CAAWhM,MAAO,CAACG,gBAAiB,QAAS8L,UAAW,SAEpD,yBAAKjM,MAAO,CAACmH,QAAS,OAAQL,OAAQ,QACnC,kBAAC,GAAD,CAAW/G,MAAM,aACjB,kBAAC,GAAD,CAAWA,MAAM,cAGpB,yBAAKC,MAAO,CAACmH,QAAS,OAAOL,OAAQ,MAAOC,UAAW,OACpD,kBAAC,GAAD,CAAWhH,MAAM,gBACjB,kBAAC,GAAD,UAQpB,yBAAKC,MAAO,CAAC+G,UAAW,KAAMK,WAAY,QAKlC,kBAACqE,EAAA,EAAD,CAAOzL,MAAO,CAAC0L,SAAU,OAAQC,OAAQ,KAAMC,UAAW,OAAQ3L,MAAO,OAAQ6G,OAAQ,QAAS+E,OAAQvM,KAAKxD,MAAMsX,cACnH,kBAACtH,EAAA,EAAD,CAAaC,MAAOgJ,EAAiB/U,MAAO,CAACG,gBAAiB,QAASD,MAAO,UAA9E,uBAEA,kBAAC8L,EAAA,EAAD,CAAWhM,MAAO,CAACG,gBAAiB,QAAS8L,UAAW,WAErD,6BAGM,yBAAKjM,MAAO,CAAC+G,UAAW,SACtB,yBAAK/G,MAAO,CAAEwH,UAAW,SAAUtH,MAAO,QAASuB,QAAS,kBACxD,wBAAIzB,MAAO,IAAX,eACA,iaAEA,y1BAKA,gGAOJ,yBAAKgB,IAAK,mCACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAO6G,OAAQ,MAAOM,WAAY,KAAMe,UAAW,YAG3E,yBAAKnI,MAAO,CAAC+G,UAAW,OAAQ7G,MAAO,QAASsH,UAAW,SAAU/F,QAAS,kBACxE,yBAAKzB,MAAO,CAAC+G,UAAW,KAAM7G,MAAO,UAAU,mDAE/C,6BACE,4tBAGF,qPAEA,yBAAKc,IAAK,mCACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAO6G,OAAQ,MAAOC,UAAW,KAAMoB,UAAW,WAExE,yBAAKnI,MAAO,CAAC+G,UAAW,UACxB,kWAIE,0RAEA,yHAEH,yBAAK/F,IAAK,mCACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAO6G,OAAQ,MAAQC,UAAW,OAAQK,WAAY,KAAMe,UAAW,WAE7F,yBAAKnI,MAAO,CAAC+G,UAAW,UAAxB,gEACC,yBAAK/F,IAAK,mCACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAO6G,OAAQ,MAAOC,UAAW,KAAMK,WAAY,KAAMe,UAAW,YAIpG,yBAAKnI,MAAO,CAAEwH,UAAW,SAAUtH,MAAO,QAASuB,QAAS,kBACxD,wBAAIzB,MAAO,IAAX,yBACA,yvCAevB,6BACI,yBAAKJ,UAAU,aAAaoB,IAAK,+BAChCC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAOmH,WAAY,MAAOL,UAAW,KAAMoB,UAAW,iB,GApcnE/H,aA2fVC,gBArBS,SAAAvE,GACpB,MAAO,CAEH3B,OAAQ2B,EAAM3B,OACdC,QAAS0B,EAAM1B,QACfC,QAASyB,EAAMzB,QACf8J,MAAOrI,EAAMxB,YACbyJ,OAAQjI,EAAMtB,aACdb,WAAYmC,EAAMnC,WAClBwC,SAAUL,EAAMK,SAChBR,cAAeG,EAAMH,cAErB6T,SAAU1T,EAAMF,WAEhBwY,cAAetY,EAAM5B,yBA5BF,SAAAoG,GACvB,MAAO,CAEHsQ,WAAY,kBAAMtQ,EAAS,CAACtE,Kb7dT,iBa8dnBgN,WAAY,SAAC5O,EAASC,GAAV,OAAsBiG,EAAS,CAACtE,Kb7dzB,ca6dwD5B,QAASA,EAASC,QAASA,KACtG4O,YAAa,SAAC9E,GAAD,OAAW7D,EAAS,CAACtE,Kb7dd,ea6d8CC,IAAKkI,KACvE8L,aAAc,SAACE,GAAD,OAAY7P,EAAS,CAACtE,Kb7df,gBa6dgDC,IAAKkU,KAC1EhH,aAAc,SAACpF,GAAD,OAAYzD,EAAS,CAACtE,Kb7df,gBa6dgDC,IAAK8H,KAC1E2E,cAAe,kBAAMpI,EAAS,CAACtE,Kb5dT,oBa6dtByX,gBAAiB,kBAAOnT,EAAS,CAACtE,KbvdZ,uBaiffqE,CAA6C2S,ICtgBtD8C,G,kDAUJ,WAAY7X,GAAQ,IAAD,8BACf,cAAMA,IAUR8X,iBAAmB,WACY,YAA1B,EAAKja,MAAMka,WACZ,EAAKzX,SAAS,CACZyX,WAAY,WAId,EAAKzX,SAAS,CACZyX,WAAY,YAIhBpY,QAAQC,IAAI,EAAK/B,MAAMka,aAvBR,EAgCjBC,aAAe,SAACzT,GACb,EAAKjE,SAAS,CAACrC,MAAOsG,EAAMjB,OAAOrF,SAjCrB,EAoClB+I,aAAe,SAACzC,GAEd,EAAKvE,MAAMyK,gBACX,EAAKzK,MAAMiY,0BACX,EAAKjY,MAAMkY,sBAAsB,EAAKra,MAAMI,OAE5C,EAAKqC,SAAS,CAACrC,MAAO,KACtBsG,EAAM4T,kBA3CU,EA+ClBC,WAAa,WAEX,EAAKpY,MAAMqY,aAER,EAAKrY,MAAMsY,MACb,EAAKtY,MAAMuY,oBACZ,EAAKvY,MAAMwY,UAlDV,EAAKjW,OAAS,EAAKA,OAAO8E,KAAZ,gBACd,EAAKxJ,MAAQ,CACXI,MAAO,GACPuE,aAAa,EACbuV,WAAY,WAPC,E,0CA0BjB,WACE1W,KAAKf,SAAS,CACZkC,aAAcnB,KAAKxD,MAAM2E,gB,oBA4B7B,WAEE,IACIiW,EAAS,oBAGVpX,KAAKxD,MAAM2E,cACZiW,EAAS,yBAEX,IAAI5Q,EAAwB,IAApBC,OAAOC,WACXC,EAAyB,IAArBF,OAAOG,YAEf,OAEA,yBAAKtG,UAAYN,KAAKrB,MAAMsY,KAAWjX,KAAKrB,MAAM9B,SAAiC,iBAApB,gBAA0C,aAErG,yBAAK6D,MAAO,CAACmH,QAAS,SAEjB,yBAAKvH,UAAU,aAChB,0BAAM+W,SAAUrX,KAAK2F,aAAcnF,GAAG,UACpC,2BAAO9D,KAAK,SAAS2L,YAAY,SAASzL,MAAOoD,KAAKxD,MAAMI,MAAO+K,SAAU3H,KAAK2W,iBAIpF,6BACI,yBAAK/X,QAASoB,KAAK+W,WAAYzW,UAAU,aAAaoB,IAAK,mCAC1DC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAOyB,UAAW,sBAAuByG,UAAW,aAInF,yBAAKnI,MAAO,CAAC8G,OAAQ,QACb,yBAAK9G,MAAO,CAAC0B,UA7Bf,qBA6B+BoF,OAAQ,OAAQ+O,OAAQ,QACjD,yBAAKjW,UAAU,UAAUI,MAAO,CAAE4W,OAAO,kBAAmBlV,UAAYgV,GAAS5W,GAAI,iBAEjF,yBAAKF,UAAU,WACf,yBAAKI,MAAO,CAACC,MAAO,OAAQyB,UAAW,uBAAvC,OACQ,0BAAM9B,UAAU,YAAhB,MADR,aAQP,kBAACsB,EAAA,EAAD,CAAqBC,WAAW,EAAMG,QAAQ,SAAStB,MAAO,CAACC,MAAO6F,EAAG4F,SAAU5F,EAAGgB,OAAQb,EAAG2F,UAAW3F,EAAI,cAAe/F,MAAO,QAAS+L,UAAW,SAAU9L,gBAAiB,QAAS0V,OAAQ,MAAOgB,UAAU,QAAQhL,OAAQvM,KAAKxD,MAAM2E,YAAac,OAAQ,gBAAiBf,OAAQlB,KAAKkB,QACnS,kBAACsW,EAAA,EAAD,CAAe9W,MAAO,CAACiI,SAAU,OAAQhI,MAAO,OAAQ6G,OAAQ,KAAM3G,gBAAiB,QAASsB,QAAS,MAAOvB,MAAO,UAAU,yBAAKF,MAAO,CAACoH,WAAY,KAAML,UAAW,OAA1C,gBACjI,kBAACvF,EAAA,EAAD,CAAaxB,MAAK,aAAGE,MAAO,QAASD,MAAO,OAAQ6G,OAAQ,MAAOsL,WAAY,MAAO3Q,QAAS,UAAWtB,gBAAiB,SAAzG,QAAyH,UAAU,kBAAC,GAAD,CAAY+S,aAAc5T,KAAKyW,iBAAkBgB,SAAUzX,KAAKrB,MAAM8Y,SAAU5C,SAAU7U,KAAKrB,MAAMkW,cAIjQ7U,KAAKrB,MAAM+Y,SAAa,yBAAKhX,MAAO,CAAE+G,UAAW,OAAQ7G,MAAO,UAAxC,UACdZ,KAAKrB,MAAMlE,WACZ,0C,GArHEqG,aAgJVC,gBARS,SAAAvE,GACpB,MAAO,CACHK,SAAUL,EAAMK,SAChBpC,UAAW+B,EAAM/B,cAdE,SAAAuG,GACvB,MAAO,CACH4V,wBAAyB,kBAAM5V,EAAS,CAACtE,Kd9Gd,yBc+G3Bma,sBAAuB,SAACja,GAAD,OAAWoE,EAAS,CAACtE,Kd9GnB,oBc8GwDC,IAAKC,KACtFwM,cAAe,kBAAMpI,EAAS,CAACtE,Kd3HT,oBc6HtBya,OAAQ,kBAAMnW,EAAS,CAACtE,Kd3GJ,qBcwHbqE,CAA6CyV,IC9ItDmB,G,kDAEJ,WAAYhZ,GAAQ,IAAD,8BAEf,cAAMA,IAoBVuC,OAAS,WACP,EAAKjC,UAAS,SAAAqH,GAAS,MAAK,CAC1B+C,OAAQ/C,EAAU+C,WAxBH,EA4BnBC,QAAU,WACR,EAAKrK,UAAS,SAAAqH,GAAS,MAAK,CAC1BiD,QAASjD,EAAUiD,YA9BJ,EAiCnBC,QAAU,WACR,EAAKvK,UAAS,SAAAqH,GAAS,MAAK,CAC1BmD,QAASnD,EAAUmD,YAnCJ,EAsCnBmO,mBAAqB,SAAAjZ,GACnB,EAAK2G,aAAe,MAvCH,EA0CnBuS,aAAe,SAACxS,GACY,OAAtB,EAAKC,cACP,EAAKC,cAAc,aACnBC,aAAa,EAAKF,cAClB,EAAKA,aAAe,MAGpB,EAAKA,aAAeG,YAAW,WAC/B,EAAK1C,QAAQsC,GACbG,aAAa,EAAKF,cAChB,EAAKA,aAAe,OACnB,MArDY,EAyDnBC,cAAgB,SAACF,GAEf,EAAKpG,SAAS,CACZyG,KAAML,IAGR,EAAK1G,MAAMgB,kBAAkB0F,IA/DZ,EAkEnBtC,QAAU,SAACsC,GAEc,SAApB,EAAK7I,MAAM+D,MAWT8E,EAAK9E,MAAQ,EAAK/D,MAAMkJ,MAT3B,EAAKzG,SAAS,CACZyG,KAAML,EAAK9E,OAGb,EAAK5B,MAAMgB,kBAAkB0F,EAAK9E,QAehC,EAAKtB,SAAS,CACZyG,KAAM,SAGN,EAAK/G,MAAMgB,kBAAkB,MAzF/B,EAAKnD,MAAQ,CACXkJ,KAAM,OACN2D,OAAO,EACPE,QAAQ,EACRE,QAAQ,EACRK,UAAW,IATA,E,qDAanB,c,oBAqFE,WAKE,IALQ,IAAD,OACDC,EAAiB,GAEnBC,EAAahK,KAAKrB,MAAMtE,WACxBC,EAAQ,GACJqI,EAAI,EAAGA,EAAIqH,EAAWC,OAAQtH,IACpCrI,EAAM4C,KAAK,+BAA+B8M,EAAWrH,GAAG,kBAA7C,0CACTqH,EAAWrH,GAAX,QAA2B,SAG/B,IAVO,EAUH4D,EAAM,0CAVH,cAYsBjM,EAAM6P,WAZ5B,IAYP,2BAA8C,CAAC,IAAD,yBAAlCpN,EAAkC,KAA3BH,EAA2B,KAC5CmN,EAAe7M,KAAK,wBAAIwD,MAAO,CAACyB,QAAS,WAAY9B,IAAKtD,GAAO,0BAAMqN,wBAAyB,CAACC,OAAOzN,QAbnG,8BAegB,cAApBoD,KAAKxD,MAAMkJ,KACZa,EAAM,mDAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,UAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,gDAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,kBAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,uDAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,+CAEoB,SAApBvG,KAAKxD,MAAMkJ,KACjBa,EAAM,8CAEoB,mBAApBvG,KAAKxD,MAAMkJ,OACjBa,EAAM,sDAIN,IAAIC,EAAIC,OAAOC,WAAa,KACxBC,EAAIF,OAAOG,YAAc,IAG3BkR,EAAQ,CACRvX,KAAM,SACNuG,MAAO,CACP,CAACvG,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,EAAIG,EAAG,IAAMH,EAAG,GAAKG,GAAIM,UAAW,eACnF,CAAC1G,KAAM,QAASwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,GAAKG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eACtF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,IAAMR,EAAG,GAAKG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eACtF,CAAC1G,KAAM,gBAAiBwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eAC/F,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eACtF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eAEtF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,GAAKG,EAAG,GAAKH,EAAG,IAAMG,GAAIM,UAAW,eACpF,CAAC1G,KAAM,OAAQwG,MAAO,OAAQC,OAAQ,CAAC,IAAMR,EAAG,GAAKG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,eAEtF,CAAC1G,KAAM,iBAAkBwG,MAAO,OAAQC,OAAQ,CAAC,GAAKR,EAAG,IAAMG,EAAG,GAAKH,EAAG,IAAMG,GAAIM,UAAW,eAC/F,CAAC1G,KAAM,iBAAkBwG,MAAO,OAAQC,OAAQ,CAAC,IAAMR,EAAG,IAAMG,EAAG,IAAMH,EAAG,IAAMG,GAAIM,UAAW,iBAI/F,OACC,yBAAK3G,UAAU,aAGX,yBAAKI,MAAO,CAAC0B,UAAW,sBAClB,kBAAC,IAAD,CAAa2V,YAAY,cAAcrW,IAAK6E,EAAKnG,IAAK0X,EAAOnX,MAAO,IAAM6F,EAAGgB,OAAQ,IAAMb,EACzF/H,QAAS,SAAAyG,GAAI,OAAI,EAAKwS,aAAaxS,MAEpC,yBAAK3E,MAAO,CAAC+G,UAAW,MAAOrF,UAAW,kBAAmBxB,MAAO,QAASkS,WAAY,MAAOnK,SAAU,UACtG,gDACA,2CACA,yBAAKjI,MAAO,CAAEiI,SAAU,YAAY,gCAApC,oBACA,yBAAKjI,MAAO,CAAEiI,SAAU,YAAxB,sBAAuD,wC,GAlL3D7H,aAuMTC,gBAZS,SAAAvE,GACtB,MAAO,CACHnC,WAAYmC,EAAMnC,eAIG,SAAA2G,GACvB,MAAO,CACHrB,kBAAmB,SAAC/C,GAAD,OAAWoE,EAAS,CAACtE,Kf9MhB,mBe8MoDC,IAAKC,QAI1EmE,CAA6C4W,I,kFCxMtDK,G,kDAEJ,WAAYrZ,GAAQ,IAAD,8BAEf,cAAMA,IA8BRuC,OAAS,WACP,EAAKjC,UAAS,SAAAqH,GAAS,MAAK,CAC1B+C,OAAQ/C,EAAU+C,WAlCL,EAsCjB4O,sBAAwB,SAAC/U,GAEvB,EAAKjE,SAAS,CACZiZ,cAAe,yBAzCF,EA6CjBC,qBAAuB,SAACjV,GAEtB,EAAKjE,SAAS,CACZmZ,aAAc,yBAhDD,EAoDjBC,uBAAyB,SAACnV,GAExB,EAAKjE,SAAS,CACZqZ,eAAgBpV,EAAMjB,OAAOrF,SAvDhB,EA2DjB2b,sBAAwB,SAACrV,GAEvB,EAAKjE,SAAS,CACZuZ,cAAetV,EAAMjB,OAAOrF,SA9Df,EAmEjB6b,oBAAsB,SAACvV,GAGrB,EAAKjE,SAAS,CACZyZ,YAAaxV,EAAMjB,OAAOrF,SAvEb,EA2EjB+b,uBAAyB,SAACzV,GAExB,EAAKjE,SAAS,CACZ2Z,eAAgB1V,EAAMjB,OAAOrF,SA9EhB,EAkFjBic,sBAAwB,SAAC3V,GAEvB,EAAKjE,SAAS,CACZ6Z,cAAe5V,EAAMjB,OAAOrF,SArFf,EAyFjBmc,oBAAsB,SAACzb,EAAUC,EAAUyb,GAEzC,IAGIC,EAAc,EAAKta,MAAMsa,YACzBC,EAAa,EAAKva,MAAMuC,OAIxBiY,GAFuB,EAAKhB,qBAEL,EAAKgB,sBAE5Bhc,EAAaC,KAAKC,UAAU,CAC3BC,SAAUA,EACVC,SAAUA,IAGV6b,EAAM7b,EAENE,EAAU,IAAIC,QAAQ,kDAAmD,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMV,IAEZW,MAAML,GAASM,MAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,WAChBF,EAASG,OAAOJ,MAAK,SAASI,GAE1B,IAAIkb,EAAcjc,KAAKgB,MAAMD,GACD,YAAxBkb,EAAYhb,SAEb4a,EAAYI,EAAY/b,SAAU8b,EAAKC,EAAY7b,WACnD0b,KAICC,EAAqB7b,EAAU0b,EAAOzb,MAQ9C4b,EAAqB7b,EAAU0b,EAAOzb,OAxI9B,EA8IjB+b,cAAgB,WAEd,IAGIL,EAAc,EAAKta,MAAMsa,YACzBC,EAAa,EAAKva,MAAMuC,OAExBiX,EAAuB,EAAKA,qBAE5Bhb,EAAaC,KAAKC,UAAU,CAC3BC,SAAU,EAAKd,MAAMgc,cACrBjb,SAAU,EAAKf,MAAMsc,gBAGrBM,EAAM,EAAK5c,MAAMsc,cAEjBrb,EAAU,IAAIC,QAAQ,kDAAmD,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMV,IAEZW,MAAML,GAASM,MAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,WAChBF,EAASG,OAAOJ,MAAK,SAASI,GAE1B,IAAIkb,EAAcjc,KAAKgB,MAAMD,GACD,YAAxBkb,EAAYhb,SAEb4a,EAAYI,EAAY/b,SAAU8b,EAAKC,EAAY7b,WACnD0b,KAICf,OAORA,QA1LQ,EAiMnBoB,eAAiB,SAACvb,GACjBM,QAAQC,IAAIP,GAEZ,EAAK+a,oBAAoB/a,EAASwb,WAAWjZ,KAAKvC,EAASwb,WAAWjZ,KAAKvC,EAASwb,WAAWR,QApM7E,EA2MnBS,oBAAsB,SAACzb,GACtBM,QAAQC,IAAI,UA5MM,EA+MnB4a,qBAAuB,SAAC7b,EAAU0b,EAAOzb,GAEvC,IAGI0b,EAAc,EAAKta,MAAMsa,YACzBC,EAAa,EAAKva,MAAMuC,OAExB+W,EAAwB,EAAKA,sBAE7BmB,EAAM7b,EAENJ,EAAaC,KAAKC,UAAU,CAC3BC,SAAUA,EACV0b,MAAOA,EACPzb,SAAUA,IAGVE,EAAU,IAAIC,QAAQ,mDAAoD,CACxEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMV,IAEZW,MAAML,GAASM,MAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,WAChBF,EAASG,OAAOJ,MAAK,SAASI,GAE1B,IAAIkb,EAAcjc,KAAKgB,MAAMD,GACD,YAAxBkb,EAAYhb,SAEbC,QAAQC,IAAI8a,GACZJ,EAAYI,EAAY/b,SAAU8b,EAAKC,EAAY7b,WACnD0b,KAICjB,OAORA,QA7PU,EAkQjByB,eAAiB,WAEf,IAGIT,EAAc,EAAKta,MAAMsa,YACzBC,EAAa,EAAKva,MAAMuC,OAExB+W,EAAwB,EAAKA,sBAE7BmB,EAAM,EAAK5c,MAAMoc,eAEjBzb,EAAaC,KAAKC,UAAU,CAC3BC,SAAU,EAAKd,MAAM8b,eACrBU,MAAO,EAAKxc,MAAMkc,YAClBnb,SAAU,EAAKf,MAAMoc,iBAGrBnb,EAAU,IAAIC,QAAQ,mDAAoD,CACxEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMV,IAEZW,MAAML,GAASM,MAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,WAChBF,EAASG,OAAOJ,MAAK,SAASI,GAE1B,IAAIkb,EAAcjc,KAAKgB,MAAMD,GACD,YAAxBkb,EAAYhb,SAEbC,QAAQC,IAAI8a,GACZJ,EAAYI,EAAY/b,SAAU8b,EAAKC,EAAY7b,WACnD0b,KAICjB,OAORA,QA5SL,EAAKzb,MAAQ,CACXkJ,KAAM,OACNgT,YAAa,GACbJ,eAAgB,GAChBM,eAAgB,GAChBV,cAAe,GACfM,cAAe,GACfM,cAAe,GACfV,aAAc,GACd/O,OAAO,GAGX,EAAKoP,oBAAsB,EAAKA,oBAAoBzS,KAAzB,gBAC3B,EAAKqS,uBAAyB,EAAKA,uBAAuBrS,KAA5B,gBAC9B,EAAK2S,uBAAyB,EAAKA,uBAAuB3S,KAA5B,gBAC9B,EAAKiS,sBAAwB,EAAKA,sBAAsBjS,KAA3B,gBAE7B,EAAKuS,sBAAwB,EAAKA,sBAAsBvS,KAA3B,gBAC7B,EAAK6S,sBAAwB,EAAKA,sBAAsB7S,KAA3B,gBAC7B,EAAKmS,qBAAuB,EAAKA,qBAAqBnS,KAA1B,gBAE5B,EAAK0T,eAAiB,EAAKA,eAAe1T,KAApB,gBACtB,EAAKsT,cAAgB,EAAKA,cAActT,KAAnB,gBAErB,EAAK+S,oBAAsB,EAAKA,oBAAoB/S,KAAzB,gBAC3B,EAAKmT,qBAAuB,EAAKA,qBAAqBnT,KAA1B,gBA7Bb,E,0CAsTjB,WAAU,IAAD,OAEW4C,EAAA,EAAgB5I,KAAKkB,OASvC,OAEA,yBAAKR,MAAO,CAAC8G,OAAQ,QAAS7G,MAAM,QAASgZ,eAAgB,QAAS9Y,gBAAiB,UAEvF,yBAAKH,MAAO,CAAC8G,OAAQ,MAAO7G,MAAO,QACnC,yBAAKe,IAAK,+BACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,OAAQyB,UAAW,wBAAyByG,UAAW,YAG3E,yBAAKvI,UAAU,iBAEf,yBAAKI,MAAO,CAACE,MAAO,QAASsH,UAAW,SAAUmE,OAAQ,WAA1D,iSAMA,yBAAK3L,MAAO,CAACmH,QAAS,OAAQJ,UAAW,OAerC,kBAACmB,EAAA,EAAD,CAAQhK,QAASoB,KAAKrB,MAAMuC,OAAQR,MAAO,CAAE2L,OAAQ,UAAYzL,MAAM,aAAvE,UAGJ,yBAAKF,MAAO,CAACmH,QAAS,OAAQJ,UAAW,OAIxC,kBAACmB,EAAA,EAAD,CAAQlI,MAAO,CAAE2L,OAAQ,UAAWzL,MAAQ,YAAYhC,QAAS,kBAAM,EAAKgb,aAAaC,SAAzF,kBACF,kBAAC,KAAD,CAAUC,sBAAoB,EAACC,IAAK,SAAAA,GAAG,OAAI,EAAKH,aAAeG,GAAK/V,MAAM,iCAE1E,2BAAOtC,IAAKsY,KAAUrZ,MAAM,OAAO6G,OAAO,OAAOyS,SAAW,eAI3D,kBAAC9N,EAAA,EAAD,CAAOrD,KAAK,KAAKpI,MAAO,CAACG,gBAAiB,QAASuL,SAAU,OAASE,UAAW,OAAQ3L,MAAO,OAAQ6G,OAAQ,QAAS+E,OAAQvM,KAAKxD,MAAM6M,MAAOnI,OAAQlB,KAAKkB,QAE9J,kBAACwL,EAAA,EAAD,CAAWhM,MAAO,CAACG,gBAAiB,QAASD,MAAO,UACpD,yBAAKF,MAAO,CAACmH,QAAS,SACrB,yBAAKnH,MAAO,CAACC,MAAO,MAAO8G,UAAW,UACnC,kBAACyS,GAAA,EAAD,KACqC,KAA5Bla,KAAKxD,MAAM4b,aAAwB,yBAAK1X,MAAO,CAACE,MAAO,QAASZ,KAAKxD,MAAM4b,cAAwB,8BACpG,yCACA,kBAAC1Q,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,OAAQlL,KAAK,OAAOiL,SAAU3H,KAAKuY,sBAAuB3b,MAAOoD,KAAKxD,MAAMgc,gBAE1G,yBAAK9X,MAAO,CAAC+G,UAAW,UAAxB,YACA,kBAACC,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,OAAQlL,KAAK,WAAWiL,SAAU3H,KAAK6Y,sBAAuBjc,MAAOoD,KAAKxD,MAAMsc,gBAEhH,kBAAClQ,EAAA,EAAD,CAAQhK,QAASoB,KAAKsZ,cAAe5Y,MAAO,CAAC+G,UAAW,MAAOK,WAAY,OAAQlH,MAAM,aAAzF,UAGL,yBAAKF,MAAO,CAAC+G,UAAW,MAAOK,WAAY,QACzC,kBAAC,KAAD,CACCqS,SAAS,4EACTC,WAAW,eACXC,UAAWra,KAAKuZ,eAChBe,UAAWta,KAAKyZ,oBAChBc,aAAc,yBAIrB,yBAAK7Z,MAAO,CAACC,MAAO,MAAOmH,WAAY,OACpC,kBAACoS,GAAA,EAAD,KACwC,KAA7Bla,KAAKxD,MAAM0b,cAAyB,yBAAKxX,MAAO,CAACE,MAAO,QAASZ,KAAKxD,MAAM0b,eAAyB,8BACxG,yBAAKxX,MAAO,CAAC+G,UAAW,SAAxB,YACA,kBAACC,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,OAAQlL,KAAK,OAAOiL,SAAU3H,KAAKqY,uBAAwBzb,MAAOoD,KAAKxD,MAAM8b,iBAE3G,yBAAK5X,MAAO,CAAC+G,UAAW,SAAxB,SACA,kBAACC,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,OAAQlL,KAAK,QAAQiL,SAAU3H,KAAKyY,oBAAqB7b,MAAOoD,KAAKxD,MAAMkc,cAEzG,yBAAKhY,MAAO,CAAC+G,UAAW,SAAxB,YACA,kBAACC,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,OAAQlL,KAAK,WAAWiL,SAAU3H,KAAK2Y,uBAAwB/b,MAAOoD,KAAKxD,MAAMoc,iBAEhH,kBAAChQ,EAAA,EAAD,CAAQhK,QAASoB,KAAK0Z,eAAgBhZ,MAAO,CAAC+G,UAAW,MAAOK,WAAY,OAAQlH,MAAM,aAA1F,aAIV,yBAAKF,MAAO,CAACC,MAAO,MAAOmH,WAAY,OACpC,kBAACoS,GAAA,EAAD,KACQ,yBAAKxZ,MAAO,CAAC+G,UAAW,SAAxB,YACA,kBAACC,EAAA,EAAD,CAAOhH,MAAO,CAAEkH,aAAc,OAAQlL,KAAK,UAE5C,kBAACkM,EAAA,EAAD,CAAQhK,QAASoB,KAAKrB,MAAMuC,OAAQR,MAAO,CAAC+G,UAAW,MAAOK,WAAY,OAAQlH,MAAM,aAAxF,iBAKV,yBAAKc,IAAK,+BACTC,IAAI,GAAGjB,MAAO,CAACC,MAAO,MAAOyB,UAAW,wBAAyByG,UAAW,mB,GAtalE/H,aA+bRC,gBAfS,SAAAvE,GACpB,MAAO,CACHnC,WAAYmC,EAAMnC,WAClBsY,SAAUnW,EAAMpB,UAChBG,SAAUiB,EAAMjB,SAChBD,YAAakB,EAAMlB,gBAIA,SAAA0F,GACvB,MAAO,CACHiY,YAAa,SAACuB,EAAWC,EAAW7d,GAAvB,OAAiCoE,EAAS,CAACtE,KhBrapC,egBqaoE8B,QAASgc,EAAW/b,YAAagc,EAAW9d,IAAKC,QAIlImE,CAA6CiX,I,UCvbtD0C,G,kDAEF,aAAe,IAAD,8BACZ,gBAQJC,eAAiB,WAEf,EAAK1b,SAAS,CACZ2b,aAAa,KAZD,EAgBhB5D,WAAa,WAEX,EAAK/X,SAAS,CACZ2b,aAAa,KAnBD,EAyJdC,4BAA8B,SAAC1X,GAiB7B,IAfA,IAAI2X,EACJ,CAAC,gBAAiB,EAAE,cAAe,EAAE,SAAY,EAAE,SAAY,EAAE,SAAY,EAC7E,SAAY,EAAE,gBAAiB,EAAE,gBAAiB,EAAE,UAAa,EAAE,QAAW,EAAE,sBAAuB,EAAE,uBAAwB,EAChI,SAAY,EAAE,0BAA2B,EACzC,2BAA4B,EAAE,QAAW,EAAE,YAAa,EACzD,UAAa,EAAE,cAAe,EAAG,QAAW,GAExCC,EACF,CAAC,QAAW,EAAG,cAAiB,EAAG,oBAAqB,EAAG,4BAA6B,EACvF,QAAW,EAAG,yBAA0B,EAAG,yBAA0B,EAAG,SAAY,EACnF,QAAW,EAAG,WAAc,EAAG,SAAY,EAAG,UAAa,EAAG,WAAc,EAAG,WAAc,EAC/F,YAAe,EAAG,iBAAkB,EAAG,WAAc,EAAG,SAAY,EAAG,kBAAmB,EAAG,WAAa,EAAG,MAAQ,EAAG,uBAAuB,GAE7IC,EAAY,GAERrY,EAAI,EAAGA,EAAIQ,EAAK8G,OAAQtH,IAAK,CAEjC,IAAIsY,EAAW,EACXC,EAAY,EAEb/X,EAAKR,GAAG,iBAAiBiH,gBAAiBkR,IAC3CG,GAAYH,EAAiB3X,EAAKR,GAAG,iBAAiBiH,gBAGrDzG,EAAKR,GAAG,iBAAiBiH,gBAAiBkR,IAC3CG,GAAYH,EAAiB3X,EAAKR,GAAG,iBAAiBiH,gBAGrDzG,EAAKR,GAAG,cAAciH,gBAAiBmR,IACxCG,EAAYjK,KAAK+E,IAAIkF,EAAWH,EAAc5X,EAAKR,GAAG,cAAciH,iBAGnEzG,EAAKR,GAAG,cAAciH,gBAAiBmR,IACxCG,EAAYjK,KAAK+E,IAAIkF,EAAWH,EAAc5X,EAAKR,GAAG,cAAciH,iBAGnEzG,EAAKR,GAAG,cAAciH,gBAAiBmR,IACxCG,EAAYjK,KAAK+E,IAAIkF,EAAWH,EAAc5X,EAAKR,GAAG,cAAciH,iBAGtE,IAAI9M,EAAOme,EAAWC,EAElBC,EAAM,EAERA,EADCre,GAAQ,GACH,EACAA,EAAO,IAAMA,EAAO,GACpB,EAEA,EAGRke,EAAUrY,GAAK,CAAC,UAAawY,GAIjC,OAAOH,GAlNK,EAuNdI,kBAAoB,SAACjY,GAkCnB,IAhCA,IAAI2X,EACJ,CAAC,gBAAiB,EAAE,cAAe,EAAE,SAAY,EAAE,SAAY,EAAE,SAAY,EAC7E,SAAY,EAAE,gBAAiB,EAAE,gBAAiB,EAAE,UAAa,EAAE,QAAW,EAAE,sBAAuB,EAAE,uBAAwB,EAChI,SAAY,EAAE,0BAA2B,EACzC,2BAA4B,EAAE,QAAW,EAAE,YAAa,EACxD,UAAa,EAAE,cAAe,EAAG,QAAW,GAMzCO,EACJ,CACI,kBAAmB,EACnB,SAAY,EACZ,oBAAqB,EACrB,QAAW,EACX,qBAAsB,EACtB,UAAa,EACb,sBAAuB,EACvB,YAAe,EACf,0BAA2B,EAC3B,KAAQ,EACR,4BAA6B,EAC7B,kCAAmC,EACnC,kBAAmB,EACnB,MAAS,EACT,qBAAsB,GAGtBC,EAAa,GAET3Y,EAAI,EAAGA,EAAIQ,EAAK8G,OAAQtH,IAAK,CAEjC,IAAIsY,EAAW,EACXM,EAAW,EAEZpY,EAAKR,GAAG,iBAAiBiH,gBAAiBkR,IAC3CG,EAAWhK,KAAK+E,IAAIiF,EAAUH,EAAiB3X,EAAKR,GAAG,iBAAiBiH,iBAGvEzG,EAAKR,GAAG,iBAAiBiH,gBAAiBkR,IAC3CG,EAAWhK,KAAK+E,IAAIiF,EAAUH,EAAiB3X,EAAKR,GAAG,iBAAiBiH,iBAGvEzG,EAAKR,GAAG,cAAciH,gBAAiByR,IACxCE,EAAWtK,KAAK+E,IAAIuF,EAAUF,EAAclY,EAAKR,GAAG,cAAciH,iBAGjEzG,EAAKR,GAAG,cAAciH,gBAAiByR,IACxCE,EAAWtK,KAAK+E,IAAIuF,EAAUF,EAAclY,EAAKR,GAAG,cAAciH,iBAGjEzG,EAAKR,GAAG,cAAciH,gBAAiByR,IACxCE,EAAWtK,KAAK+E,IAAIuF,EAAUF,EAAclY,EAAKR,GAAG,cAAciH,iBAGpE0R,EAAW3Y,GAAK,CAAC,WAAcsY,EAAWM,GAE9C,OAAOD,GApRK,EAuRdE,mBAAqB,SAACpY,GAyFpB,OAvFAA,EAAcA,EAAYhD,KAAI,SAACyC,GAE7B,IAAIuN,EAAQ,EACRqL,EAAa,GAEbC,EAAc7Y,EAAK,0BAEvB,OAAQ6Y,GAEJ,IAAK,UACHA,EAAc,EACd,MACF,IAAK,SACHA,EAAc,EACd,MACF,IAAK,YACFA,EAAc,EACf,MACF,IAAK,WACHA,EAAc,EACd,MACF,IAAK,SACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,QACEA,EAAc,EACdD,GAA0B,EAIhC,IAAIE,EAAY9Y,EAAK,wBAElB+Y,MAAMD,GACPF,GAA0B,EAK1BrL,GAASN,SAAS6L,GAGpB,IAAIE,EAAWhZ,EAAK,wBAEjB+Y,MAAMC,GACPJ,GAA0B,EAI1BrL,GAASN,SAAS+L,GAGpB,IAAIC,EAAWjZ,EAAK,+BAEjB+Y,MAAME,GACPL,GAA0B,EAI1BrL,GAASN,SAASgM,GAGpB,IAAIC,EAAWlZ,EAAI,QAEhB+Y,MAAMG,GACPN,GAA0B,EAI1BrL,GAASN,SAASiM,GAGpB,IAAIC,EAAWnZ,EAAI,WAUnB,OARG+Y,MAAMI,GACPP,GAA0B,EAI1BrL,GAASN,SAASkM,GAGb,CAAC,aAAiB5L,EAAQqL,EAAc,KAAKQ,QAAQ,QA7WlD,EAmXhBC,cAAgB,WACd,EAAKjd,SAAS,CACZ2b,aAAa,KAnXb,EAAKpe,MAAQ,CACX2G,KAAM,GACNyX,aAAa,EACbngB,UAAW,GALD,E,4FA2Bd,8DAAA0hB,EAAA,6DAEM1e,EAAU,IAAIC,QAAQ,2CAA4C,CACxDC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBALlC,SAQuBE,MAAML,GAR7B,cAQMO,EARN,gBAS6BA,EAASoe,OATtC,cASQC,EATR,gBAkBsCve,MAAM,iDAAD,OAlD9B,+CAkD8B,2CAjD1B,2CAkDb,CACEF,QAAS,CACP,eAAgB,sBArBxB,cAkBU0e,EAlBV,iBA0BkCA,EAAoBF,OA1BtD,QAkDI,IAxBMG,EA1BV,OA6BUC,EAAuBD,EAAe,OAGxCE,EAAkB,GAiBhBC,EAAqBF,EAAqB,GACxC7Z,EAAI,EAAGA,EAAI6Z,EAAqBvS,OAAQtH,IAAK,CAGnD,IAFIga,EAAU,GACVC,EAAaJ,EAAqB7Z,GAC9BqO,EAAI,EAAGA,EAAI4L,EAAW3S,OAAQ+G,IACpC2L,EAAQD,EAAmB1L,IAAM4L,EAAW5L,GAE9CyL,EAAgBvf,KAAKyf,GAKvB,IAHIE,EAAa7c,KAAKob,kBAAkBiB,EAAaS,SACjD9B,EAAYhb,KAAK6a,4BAA4BwB,EAAaS,SAC1D1Z,EAAcpD,KAAKwb,mBAAmBiB,GAClC9Z,EAAI,EAAGA,EAAI0Z,EAAaS,QAAQ7S,OAAQtH,IAC1Coa,EAAmB3Z,EAAYT,GAC/Bqa,EAAiB,QACG7K,IAArB4K,IACDC,EAAiBD,EAAgB,aAGnCV,EAAaS,QAAQna,GAArB,2BACO0Z,EAAaS,QAAQna,IAD5B,IAEIsa,YAAaD,EACb1B,WAAYuB,EAAWla,GAAX,WACZqY,UAAWA,EAAUrY,GAAV,YAGjBrE,QAAQC,IAAI8d,EAAaS,SACzB9c,KAAKrB,MAAMue,iBAAiBb,EAAaS,SA5E7C,iD,sFA+EA,WAEE,IAAIK,EAAkBnd,KAAKrB,MAAMwe,gBAIrB1f,EAAU,IAAIC,QAAQ,wDAAyD,CAC7EC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGxBE,MAAML,GAASM,MAAK,SAASC,GACQ,QAA/BA,EAASC,OAAOC,YAChBF,EAASG,OAAOJ,MAAK,SAASI,GAC1B,IAAIkb,EAAcjc,KAAKgB,MAAMD,GACD,YAAxBkb,EAAYhb,UACP,EACP8e,EAAgB9D,EAAY+D,gBAM9B,IAER3f,EAAU,IAAIC,QAAQ,wDAAyD,CACzEC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGxBE,MAAML,GAASM,MAAK,SAASC,GACQ,QAA/BA,EAASC,OAAOC,YAChBF,EAASG,OAAOJ,MAAK,SAASI,GAC1B,IAAIkb,EAAcjc,KAAKgB,MAAMD,GACD,YAAxBkb,EAAYhb,UACP,EACP8e,EAAgB9D,EAAY+D,mB,oBAyOpD,WAEI,OACE,kBAAC,KAAD,KACEpd,KAAKxD,MAAMoe,YAAgB,kBAAC,GAAD,CAAU1Z,OAAQlB,KAAK2a,iBAAyB3a,KAAKrB,MAAMvE,cAQ7E,yBAAKkG,UAAU,eAAc,kBAAC,EAAD,CAAemS,aAAczS,KAAKrB,MAAM0e,sBAChF,kBAAC,GAAD,CAAYnG,kBAAmBlX,KAAKrB,MAAM0e,oBAAqBpG,MAAM,EAAMD,WAAYhX,KAAKgX,WAAYU,UAAU,EAAO4F,MAAOtd,KAAKxD,MAAM/B,UAAWgd,UAAU,EAAM5C,UAAU,KATtE,yBAAKvU,UAAU,SAASI,MAAO,CACvIC,MAAO8F,OAAOC,aAEb,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,MAED,kBAAC,GAAD,CAAYsQ,WAAYhX,KAAKgX,WAAYC,MAAM,EAAOQ,UAAU,EAAMC,UAAU,EAAM4F,MAAOtd,KAAKxD,MAAM/B,UAAWoa,UAAU,U,GAtYvH/T,aAiaHC,gBAhBS,SAAAvE,GACpB,MAAO,CACHpC,cAAeoC,EAAMpC,kBAIF,SAAA4G,GACvB,MAAO,CACHkc,iBAAkB,SAACtgB,GAAD,OAAWoE,EAAS,CAACtE,KjB7ZpB,ciB6ZmDE,MAAOA,KAC7EygB,oBAAqB,kBAAMrc,EAAS,CAACtE,KjBzYR,2BiB0Y7BygB,gBAAkB,SAACvgB,GAAD,OAAWoE,EAAS,CAACtE,KjBtYnB,eiBsYmDC,IAAKC,KAC5Esa,kBAAmB,kBAAMlW,EAAS,CAACtE,KjB/Zb,uBiBoafqE,CAA6C2Z,ICxaxC6C,QACW,cAA7B9W,OAAO+W,SAASC,UAEe,UAA7BhX,OAAO+W,SAASC,UAEhBhX,OAAO+W,SAASC,SAASC,MACvB,2DCNN,IAAMC,GAAcphB,EACdqhB,GAAQC,YAAYF,IAG1BG,IAASC,OAAO,kBAAC,IAAD,CAAUH,MAAOA,IAAO,kBAAC,GAAD,OAAoB5O,SAASC,eAAe,SDiH9E,kBAAmB+O,WACrBA,UAAUC,cAAcC,MAAMngB,MAAK,SAAAogB,GACjCA,EAAaC,kB","file":"static/js/main.3d41db52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tutorial.261159fa.mp4\";","import * as actionTypes from '../actions';\n\nconst initialState = {\n\n    searchDisplay: false,\n    searchData: [],\n    names: [],\n    params: [],\n\n    listDisplay: false,\n\n    viewCount: 0,\n\n    searchTermDisplay: false,\n    searchTermQuery: '',\n\n    currentFilteredArray: [],\n\n    filter: true,\n    minYear: 1990,\n    maxYear: 2021,\n    venueFilter: 'All',\n    authorFilter: 'All',\n    sourceFilter: 'Both',\n\n    categories: ['Function', 'BodyZones', 'Fabrication', 'Material'],\n    functions: ['Storage', 'Breathability', 'Energy Harvesting', 'Feeling/sensation/haptics',\n     'Display', 'Electronic Connections', 'Wireless Communication', 'Movement',\n      'Sensing', 'Protective', 'Cognitive', 'Modularity', 'Emissivity',\n       'Shape changing', 'Aesthetics', 'Gestures', 'Studies/reviews', 'Interfaces', 'Skins', 'Interactions/Control'],\n    bodyZones: ['Head', 'Chest', 'Pelvic Region', 'Arms', 'Legs',\n    'Wrist and Hand', 'Back', 'Full Body', 'Feet'],\n    fabrication: ['Stitching/Sewing', 'Laser Cutting', '3D Printing',\n     'Layering', 'Printing', 'Sticking', 'Heat Transfer',\n      'Soldering', 'Origami', 'Molding and Casting', 'Pleating and Folding',\n      'Knitting', 'Embroidery and Applique', 'Weaving', 'Machining', 'Painting'],\n    material: ['Lights/lamps', 'Conductive Inks', 'Polymers', 'Molding Materials',\n    'Threads', 'Conductive Threads','Adhesives', 'Paper and Cardboard', 'Electronics',\n    'Textile and Composites', 'Clips/Velcro/pins/zippers', 'Bio-materials/organic materials',\n    'Regular Inks', 'Metal', 'Shape Memory Alloy'],\n\n    arrFunc: [],\n    arrBod: [],\n    arrFab: [],\n    arrMat: [],\n\n    selFunction: '',\n    selBodyZones: '',\n    selFabrication: '',\n    selMaterial: '',\n\n    showFunc: false,\n    showBod: false,\n    showFab: false,\n    showMat: false,\n\n    bookMarks: [],\n    viewBookmarks: false,\n\n    isLoggedIn: false,\n};\n\nconst reducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case actionTypes.SELECT_FUNCTION:\n            return {\n                ...state,\n                selFunction: action.val\n            }\n        case actionTypes.SELECT_BODYZONES:\n            return {\n                ...state,\n                selBodyZones: action.val\n            }\n        case actionTypes.SELECT_FABRICATION:\n            return {\n                ...state,\n                selFabrication: action.val\n            }\n        case actionTypes.SELECT_MATERIAL:\n             return {\n                 ...state,\n                 selMaterial: action.val\n             }\n        case actionTypes.SHOW_FUNC:\n            return {\n              ...state,\n              showFunc: !(state.showFunc)\n            }\n        case actionTypes.SHOW_BOD:\n            return {\n                ...state,\n                showBod: !(state.showBod)\n            }\n        case actionTypes.SHOW_FAB:\n           return {\n               ...state,\n               showFab: !(state.showFab)\n           }\n        case actionTypes.SHOW_MAT:\n           return {\n               ...state,\n               showMat: !(state.showMat)\n           }\n\n        case actionTypes.PRE_SELECT_FUNC:\n           return {\n                ...state,\n                arrFunc: [...action.value]\n           }\n\n        case actionTypes.PRE_SELECT_BOD:\n\n           return {\n                ...state,\n                arrBod: [...action.value]\n           }\n\n        case actionTypes.PRE_SELECT_FAB:\n           return {\n                ...state,\n                arrFab: [...action.value]\n           }\n\n        case actionTypes.PRE_SELECT_MAT:\n           return {\n                ...state,\n                arrMat: [...action.value]\n           }\n        case actionTypes.UPDATE_DATA:\n          return {\n            ...state,\n            searchData: [...action.value]\n          }\n          case actionTypes.SEARCH_DISPLAY:\n            return {\n              ...state,\n              searchDisplay: true,\n            }\n\n          case actionTypes.REMOVE_SEARCH_DISPLAY:\n          return {\n            ...state,\n            searchDisplay: false,\n            searchTermDisplay: false,\n          }\n\n          case actionTypes.UPDATE_QUERY:\n            return {\n              ...state,\n              names: [...action.names],\n              params: [...action.params]\n            }\n          case actionTypes.FILTER_DATA:\n            return {\n              ...state,\n              filter: true,\n            }\n          case actionTypes.FILTER_YEAR:\n            return {\n              ...state,\n              minYear: action.minYear,\n              maxYear: action.maxYear,\n            }\n          case actionTypes.FILTER_VENUE:\n            return {\n              ...state,\n              venueFilter: action.val,\n            }\n          case actionTypes.FILTER_AUTHOR:\n            return {\n              ...state,\n              authorFilter: action.val,\n            }\n          case actionTypes.FILTER_SOURCE:\n            return {\n              ...state,\n              sourceFilter: action.val,\n            }\n          case actionTypes.TOGGLE_DISPLAY:\n            return {\n              ...state,\n              listView: (!state.listView),\n            }\n          case actionTypes.SEARCH_TERM_DISPLAY:\n            return  {\n              ...state,\n              searchTermDisplay: true,\n            }\n          case actionTypes.SEARCH_TERM_QUERY:\n            return {\n              ...state,\n              searchTermQuery: action.val,\n            }\n          case actionTypes.UPDATE_BOOKMARKS:\n\n              let temp = [...state.bookMarks];\n\n              var index = temp.indexOf(action.val);\n\n              if (index > -1) {\n                 temp.splice(index, 1);\n              }\n\n              else {\n                temp.push(action.val);\n              }\n\n              let jsonToSend = JSON.stringify({\n                   username: state.username,\n                   password: state.password,\n                   bookmarks: temp\n               })\n\n              var request = new Request('https://chimerabackend.herokuapp.com/api/editPreferences/', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: jsonToSend\n                  });\n                  fetch(request).then(function(response){\n\n                     if(response.status.toString() === '200') {\n                        response.text().then(function(text) {\n\n                            var objReceived = JSON.parse(text);\n                            if (objReceived.message === 'SUCCESS') {\n\n                               console.log(\"Updated\");\n                            }\n\n                        })\n                      }\n                  })\n\n              return {\n                ...state,\n                bookMarks: temp,\n              }\n\n          case actionTypes.VIEW_BOOKMARKS: {\n\n            return {\n              ...state,\n              viewBookmarks: (!state.viewBookmarks),\n            }\n\n          }\n\n          case actionTypes.AUTH_SUCCESS: {\n\n            console.log(action);\n            return {\n              ...state,\n              isLoggedIn: true,\n              username: action.valName,\n              password: action.valPassword,\n              bookMarks: action.val\n            }\n          }\n\n          case actionTypes.AUTH_FAILURE: {\n\n            return {\n              ...state,\n              isLoggedIn: false,\n              arrFunc: [],\n              arrBod: [],\n              arrFab: [],\n              arrMat: [],\n\n              selFunction: '',\n              selBodyZones: '',\n              selFabrication: '',\n              selMaterial: '',\n\n              showFunc: false,\n              showBod: false,\n              showFab: false,\n              showMat: false,\n\n              bookMarks: [],\n              viewBookmarks: false,\n            }\n          }\n\n          case actionTypes.STORE_FILTERED_ARRAY: {\n\n            return {\n              ...state,\n              currentFilteredArray: action.val,\n            }\n          }\n\n          case actionTypes.VIEW_COUNTER: {\n\n            return {\n              ...state,\n              viewCount: action.val,\n            }\n          }\n    }\n    return state;\n};\n\nexport default reducer;\n","export const SELECT_FUNCTION = 'SELECT_FUNCTION';\nexport const SELECT_BODYZONES = 'SELECT_BODYZONES';\nexport const SELECT_FABRICATION = 'SELECT_FABRICATION';\nexport const SELECT_MATERIAL = 'SELECT_MATERIAL';\n\nexport const SHOW_FUNC = 'SHOW_FUNC';\nexport const SHOW_BOD = 'SHOW_BOD';\nexport const SHOW_FAB = 'SHOW_FAB';\nexport const SHOW_MAT = 'SHOW_MAT';\n\nexport const PRE_SELECT_FUNC = 'PRE_SELECT_FUNC';\nexport const PRE_SELECT_BOD = 'PRE_SELECT_BOD';\nexport const PRE_SELECT_FAB = 'PRE_SELECT_FAB';\nexport const PRE_SELECT_MAT = 'PRE_SELECT_MAT';\n\nexport const UPDATE_DATA = 'UPDATE_DATA';\nexport const SEARCH_DISPLAY = 'SEARCH_DISPLAY';\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\n\nexport const FILTER_DATA = 'FILTER_DATA';\nexport const FILTER_YEAR = 'FILTER_YEAR';\nexport const FILTER_VENUE = 'FILTER_VENUE';\nexport const FILTER_AUTHOR = 'FILTER_AUTHOR';\nexport const FILTER_SOURCE = 'FILTER_SOURCE';\n\nexport const TOGGLE_DISPLAY = 'TOGGLE_DISPLAY';\n\nexport const SEARCH_TERM_DISPLAY = 'SEARCH_TERM_DISPLAY';\nexport const SEARCH_TERM_QUERY = 'SEARCH_TERM_QUERY';\n\nexport const UPDATE_BOOKMARKS = 'UPDATE_BOOKMARKS';\nexport const VIEW_BOOKMARKS = 'VIEW_BOOKMARKS';\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\n\nexport const REMOVE_SEARCH_DISPLAY = 'REMOVE_SEARCH_DISPLAY';\n\nexport const STORE_FILTERED_ARRAY = 'STORE_FILTERED_ARRAY';\n\nexport const VIEW_COUNTER = 'VIEW_COUNTER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPanePopoverTab.css';\nimport { Button, CustomInput, Form, FormGroup, Label } from 'reactstrap';\nimport { PopoverHeader } from 'reactstrap';\nimport * as actionTypes from '../store/actions';\n\n\nclass LeftPanePopoverTab extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n         listArr: this.props.selArr,\n         curInp: this.props.selArr[0],\n        };\n    }\n\n    onClick = (subtype) => {\n\n\n        let tempArr = [];\n\n        if(this.state.listArr.includes(subtype)) {\n\n            tempArr = [];\n        }\n\n        else {\n            tempArr.push(subtype);\n        }\n\n        this.setState({\n\n            listArr: tempArr,\n        });\n\n        this.onSelect(tempArr);\n        this.onSelectSubType(subtype, this.props.type);\n\n\n    }\n\n\n    onSelect = (tempArr) => {\n\n            //this.props.types and this.state.listArr\n            let type = this.props.type;\n\n             if(type === 'Function') {\n\n                 this.props.onSelFunction(tempArr);\n             }\n             else if(type === 'BodyZones') {\n                 this.props.onSelBodyZones(this.state.listArr);\n             }\n             else if(type === 'Fabrication') {\n                 this.props.onSelFabrication(tempArr);\n             }\n             else {\n                 this.props.onSelMaterial(tempArr);\n             }\n\n             //this.props.toggle();\n    }\n\n    onSelectSubType = (input, type) => {\n\n        if(input === this.state.curInp)\n          input = '';\n        if(type == 'Function') {\n\n            this.setState({\n               curInp: input,\n            });\n\n          console.log(input);\n        this.props.onSelectFunction(input);\n        }\n        else if(type == 'BodyZones') {\n\n            this.props.onSelectBodyZones(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else if(type == 'Fabrication') {\n\n            this.props.onSelectFabrication(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else {\n            this.props.onSelectMaterial(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n    };\n\n\n    render() {\n\n            let inp = this.props.subtypes;\n\n            inp = inp.sort();\n\n            let index = inp.indexOf(\"All \" + this.props.type + \"s\");\n            if (index > -1) {\n               inp.splice(index, 1);\n            }\n            inp.unshift(\"All \" + this.props.type + \"s\");\n\n            let selArr = this.state.listArr;\n            inp = inp.map((input) => {\n\n                return (\n\n                    <div key={this.props.key}>\n                     {(selArr.includes(input)) ? (\n                       <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBodySelected'\n                          name=\"customRadio\"\n\n                          id={input}\n                          label={input}>{input}</div>\n                        ) : (\n                          <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBody'\n                          name=\"customRadio\" key={input} id={input}\n                                    label={input}>{input}</div>\n                        )}\n                     </div>\n\n\n                );\n            }\n            )\n            return (\n                <div>\n                        <div style={{width: '100%', color: \"white\", backgroundColor: \"black\"}}>\n                          {inp}\n                        </div>\n              </div>\n\n\n            );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelFunction: (value) => dispatch({type: actionTypes.PRE_SELECT_FUNC, value: value}),\n        onSelBodyZones: (value) => dispatch({type: actionTypes.PRE_SELECT_BOD, value: value}),\n        onSelFabrication: (value) => dispatch({type: actionTypes.PRE_SELECT_FAB, value: value}),\n        onSelMaterial: (value) => dispatch({type: actionTypes.PRE_SELECT_MAT, value: value}),\n\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\n\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(LeftPanePopoverTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPaneTab.css'\n\nimport LeftPanePopoverTab from './LeftPanePopoverTab';\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nclass LeftPaneTab extends Component {\n\n    constructor(props) {\n       super(props);\n\n\n\n       this.state = {\n         popoverFunc: false,\n         popoverBod: false,\n         popoverFab: false,\n         popoverMat: false,\n         popoverOpen: false,\n       };\n\n    }\n\n     toggle = (name) => {\n       this.setState({\n         popoverOpen: !this.state.popoverOpen\n       });\n     }\n\n\n   render() {\n\n\n            let type = this.props.name;\n\n            let arr = [];\n            let selArr = [];\n\n            if(type === 'Function') {\n                arr = this.props.functions;\n                selArr = this.props.arrFunc;\n            }\n            else if(type === 'BodyZones') {\n                arr = this.props.bodyZones;\n                selArr = this.props.arrBod;\n            }\n            else if(type === 'Fabrication') {\n                arr = this.props.fabrication;\n                selArr = this.props.arrFab;\n            }\n            else {\n                arr = this.props.material;\n                selArr = this.props.arrMat;\n            }\n\n            let backgroundCol = \"rgb(172, 216, 206)\";\n            let borderCol = \"rgb(110, 169, 155)\";\n            let myVal = \"funcColor\";\n\n            if(this.props.name === \"Material\") {\n                backgroundCol = \"rgb(254, 205, 102)\";\n                borderCol = \"rgb(254, 172, 0)\";\n                myVal = \"matColor\";\n            }\n\n            else if(this.props.name === \"Fabrication\") {\n              backgroundCol = \"rgb(133, 194, 219)\";\n              borderCol = \"rgb(0, 181, 254)\";\n              myVal = \"fabColor\";\n            }\n\n\n\n            //console.log(store.getState());\n            return (\n\n             <div id={'Popover-'+this.props.name} className=\"overallpop\">\n\n                 <div className={myVal}>{this.props\n                 .name}\n                 <img id=\"image\" src={\"ImageDatabase/Icons/\" + this.props.name + \".png\"}\n                  alt=\"\" className=\"imgStyle\"/>\n                 </div>\n\n\n                 \n\n                         <UncontrolledPopover style={{ backgroundColor: \"black\"}} hideArrow={true} modifiers={{offset: '-5vw'}} trigger=\"legacy\" target={'Popover-'\n                         +\n\n                         this\n                         .props\n                         .name}>\n\n            \n                               <PopoverBody style={{padding: '0', color: \"#A7AFBA\", backgroundColor: \"black\", transform: \"translateX(-4.8%)\"}}><LeftPanePopoverTab\n                                                        type={this.props.name}\n                                                        subtypes={arr}\n                                                         selArr={selArr}\n                                                         toggle={this.toggle}\n                                                         key={this.props.key}/>\n                          </PopoverBody>\n\n                         </UncontrolledPopover>\n\n            </div>\n\n        );\n   }\n}\n\nconst mapStateToProps = state => {\n    return {\n        functions: state.functions,\n        bodyZones: state.bodyZones,\n        fabrication: state.fabrication,\n        material: state.material,\n\n        showFunc: state.showFunc,\n        showBod: state.showBod,\n        showFab: state.showFab,\n        showMat: state.showMat,\n\n        arrFunc: state.arrFunc,\n        arrBod: state.arrBod,\n        arrFab: state.arrFab,\n        arrMat: state.arrMat,\n    }\n};\n\nexport default connect(mapStateToProps)(LeftPaneTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './leftPane.css'\nimport LeftPaneTab from './LeftPaneTab';\n\nimport * as actionTypes from '../store/actions';\n\nclass LeftPane extends Component {\n\n    onClick = (type) => {\n\n\n\n         if(type === 'Function') {\n\n             this.props.onShowFunction();\n         }\n         else if(type === 'BodyZones') {\n             this.props.onShowBodyZones();\n         }\n         else if(type === 'Fabrication') {\n             this.props.onShowFabrication();\n         }\n         else {\n             this.props.onShowMaterial();\n         }\n    };\n\n    render() {\n\n           let listItems = '';\n           let i = 0;\n\n           let tempList = this.props.categories;\n           tempList = tempList.filter((item) => {\n             return item !== 'BodyZones'\n           })\n           listItems = tempList.map((listItem) => {\n                return (\n                    <LeftPaneTab key={i++} name={listItem} clicked={this.onClick} />\n                )\n            });\n\n            return (\n\n             <div className=\"leftPaneBody\">\n                {listItems}\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        categories: state.categories,\n        searchData: state.searchData\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onShowFunction: () => dispatch({type: actionTypes.SHOW_FUNC}),\n        onShowBodyZones: () => dispatch({type: actionTypes.SHOW_BOD}),\n        onShowFabrication: () => dispatch({type: actionTypes.SHOW_FAB}),\n        onShowMaterial: () => dispatch({type: actionTypes.SHOW_MAT}),\n\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPane);\n","/* global gapi */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions';\nimport { Form, FormGroup, Label, Input, FormText, Button } from 'reactstrap';\nimport { Dropdown } from 'semantic-ui-react'\nimport ImageMapper from 'react-image-mapper';\nimport './contributePage.css';\n\n//import gapi from 'gapi-client';\n\nclass ContributePage extends Component {\n\n/*  componentDidMount() {\n\n  gapi.load('client:auth2', () => {\n    gapi.client.init({\n      discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n      apiKey: 'AIzaSyBOoFBxxw4w3hphPBGb_P4nKriNBPFf_n4',\n      clientId: '1030014197436-1oftnoda9j1qk7qgv0cpjbc625q1qr2k.apps.googleusercontent.com',\n      scope: 'https://www.googleapis.com/auth/spreadsheets'\n    }).then(function () {\n      console.log('it worked');\n    },function(error) {\n    console.log(error);\n    console.log(\"ERROR\")\n  });\n  });\n}*/\n\n  constructor(props) {\n\n      super(props);\n\n        this.toggleFab = this.toggleFab.bind(this);\n        this.toggleMat = this.toggleMat.bind(this);\n        this.toggleFunc = this.toggleFunc.bind(this);\n\n        this.state = {\n\n                dropdownOpenFab: false,\n                dropdownOpenMat: false,\n                dropdownOpenFunc: false,\n                zone: 'none',\n                title: '',\n                link: '',\n                mainpage: '',\n                year: '',\n                venue: '',\n                fab: '',\n                mat: '',\n                func: '',\n                wearability: '',\n                electronicIntegration: '',\n                maintainence: '',\n                context: '',\n                activity: '',\n                aesthetic: '',\n                resourceCategorization: [],\n                source: '',\n        };\n  }\n\n  onAChange = (event, data) => {\n    this.setState({\n      wearability: data.value,\n    });\n  }\n\n  onBChange = (event, data) => {\n    this.setState({\n      electronicIntegration: data.value,\n    });\n  }\n\n  onCChange = (event, data) => {\n    this.setState({\n      maintainence: data.value,\n    });\n  }\n\n  onDChange = (event, data) => {\n    this.setState({\n      context: data.value,\n    });\n  }\n\n  onEChange = (event, data) => {\n    this.setState({\n      activity: data.value,\n    });\n  }\n\n  onFChange = (event, data) => {\n    this.setState({\n      aesthetic: data.value,\n    });\n  }\n\n  onTitleChange = (event) => {\n\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onLinkChange = (event) => {\n\n    this.setState({\n      link: event.target.value,\n    });\n  }\n\n  onMainpageChange = (event) => {\n\n    this.setState({\n      mainpage: event.target.value,\n    });\n  }\n\n  handleResCatChange = (res) => {\n\n      let index = this.state.resourceCategorization.indexOf(res);\n      let temp = this.state.resourceCategorization;\n      if (index > -1) {\n         temp.splice(index, 1);\n      }\n\n      else {\n        temp.unshift(res);\n      }\n\n      this.setState({\n        resourceCategorization: temp,\n      });\n  }\n\n  handleSourceChange = (source) => {\n\n    if(this.state.source === '' || this.state.source === 'Both') {\n      this.setState({\n        source: source,\n      });\n    }\n\n    else if(this.state.source === source) {\n      this.setState({\n        source: 'Both',\n      });\n    }\n\n    else {\n\n      if(this.state.source !== source) {\n        this.setState({\n          source: source,\n        });\n      }\n\n      else {\n        this.setState({\n          source: 'Both',\n        });\n      }\n    }\n  }\n\n  onYearChange = (event) => {\n\n    this.setState({\n      year: event.target.value,\n    });\n  }\n\n  onVenueChange = (event) => {\n\n    this.setState({\n      venue: event.target.value,\n    });\n  }\n\n  onFabChange = (event, data) => {\n    this.setState({\n      fab: data.value.toString(),\n    });\n  }\n\n  onMatChange = (event, data) => {\n    this.setState({\n      mat: data.value.toString(),\n    });\n  }\n\n  onFuncChange = (event, data) => {\n    this.setState({\n      func: data.value.toString(),\n    });\n  }\n\n\n\n  handleClicks2 = (area) => {\n    if (this.clickTimeout !== null) {\n      this.doubleClicked(\"Full Body\")\n      clearTimeout(this.clickTimeout)\n      this.clickTimeout = null\n    } else {\n\n      this.clickTimeout = setTimeout(()=>{\n      this.clicked(area)\n      clearTimeout(this.clickTimeout)\n        this.clickTimeout = null\n      }, 225)\n    }\n  }\n\n  doubleClicked = (area) => {\n\n    this.setState({\n      zone: area\n    });\n\n  }\n\n  clicked = (area) => {\n\n    if(this.state.zone === 'none') {\n\n      this.setState({\n        zone: area.name\n      });\n\n    }\n\n    else {\n\n      if(area.name != this.state.zone) {\n\n        this.setState({\n          zone: area.name\n        });\n\n\n      }\n\n      else {\n        this.setState({\n          zone: 'none'\n        });\n\n      }\n    }\n  }\n\n  toggleFab() {\n\n    this.setState(prevState => ({\n      dropdownOpenFab: !prevState.dropdownOpenFab,\n    }));\n }\n\n toggleMat() {\n\n   this.setState(prevState => ({\n     dropdownOpenMat: !prevState.dropdownOpenMat,\n   }));\n }\n\n toggleFunc() {\n\n   this.setState(prevState => ({\n     dropdownOpenFunc: !prevState.dropdownOpenFunc,\n   }));\n}\n\nhandleSubmit = () => {\n\n      let temp = Object.assign({}, this.state.resourceCategorization);\n      let tempResCat = temp.toString();\n\n      let arr = [];\n\n      arr.push(this.state.title);\n      arr.push(this.state.link);\n      arr.push(this.state.mainpage);\n      arr.push(this.state.year);\n      arr.push(this.state.venue);\n      arr.push(this.state.fab);\n      arr.push(this.state.mat);\n      arr.push(this.state.func);\n      arr.push(this.state.zone);\n      arr.push(this.state.wearability);\n      arr.push(this.state.electronicIntegration);\n      arr.push(this.state.maintainence);\n      arr.push(this.state.context);\n      arr.push(this.state.activity);\n      arr.push(this.state.aesthetic);\n      arr.push(this.state.source);\n      arr.push(this.state.tempResat);\n\n      var body = {\n      values: arr\n      };\n\n    /*\n    gapi.client.sheets.spreadsheets.values.append({\n     spreadsheetId: '1yYtQWLapVdWpoLk7lQ1_dyMn-Nc2IXOHNvHJNna62Kc',\n     valueInputOption: 'USER_ENTERED',\n     range: \"Sheet1!A1:R1\",\n     resource: body\n  }).then((response) => {\n    var result = response.result;\n    console.log(`${result.updates.updatedCells} cells appended.`)\n  }, (error) => {\n    console.log(error);\n  });\n  */\n\n\n\n\n/*\n      gapi.client.sheets.spreadsheets.values.append({\n       spreadsheetId: '1yYtQWLapVdWpoLk7lQ1_dyMn-Nc2IXOHNvHJNna62Kc',\n       valueInputOption: 'USER_ENTERED',\n       resource: body\n    }).then((response) => {\n      var result = response.result;\n      console.log(`${result.updates.updatedCells} cells appended.`)\n    });\n\n\n    gapi.client.sheets.spreadsheets.values.append({\n   spreadsheetId: spreadsheetId,\n   range: range,\n   valueInputOption: valueInputOption,\n   resource: body\n}).then((response) => {\n  var result = response.result;\n  console.log(`${result.updates.updatedCells} cells appended.`)\n});\n*/\n\n\n  }\n\n  render() {\n\n    let img = \"ImageDatabase/HumanBody/Androgynous.png\";\n\n    if(this.state.zone === 'Full Body')\n      img = \"ImageDatabase/HumanBody/Androgynous_fullbody.png\";\n\n    else if(this.state.zone === 'Head')\n      img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\n\n    else if(this.state.zone === 'Chest')\n      img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\n\n    else if(this.state.zone === 'Back')\n      img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\n\n    else if(this.state.zone === 'Pelvic Region')\n      img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\n\n    else if(this.state.zone === 'Legs')\n      img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\n\n    else if(this.state.zone === 'Feet')\n      img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\n\n    else if(this.state.zone === 'Arms')\n      img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\n\n    else if(this.state.zone === 'Wrist and Hand')\n      img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\n\n\n    let w = window.innerWidth / 1280;\n    let h = window.innerHeight / 610;\n\n    let myMap2 = {\n        name: \"my-map2\",\n        areas: [\n        {name: \"Head\", shape: \"rect\", coords: [93 * w, 0 * h, 133 * w, 57 * h], fillColor: \"transparent\"},\n        {name: \"Chest\", shape: \"rect\", coords: [83 * w, 60 * h, 113 * w, 180 * h], fillColor: \"transparent\"},\n        {name: \"Back\", shape: \"rect\", coords: [113 * w, 60 * h, 143 * w, 180 * h], fillColor: \"transparent\"},\n        {name: \"Pelvic Region\", shape: \"rect\", coords: [73 * w, 168 * h, 153 * w, 214 * h], fillColor: \"transparent\"},\n        {name: \"Legs\", shape: \"rect\", coords: [73 * w, 214 * h, 153 * w, 368 * h], fillColor: \"transparent\"},\n        {name: \"Feet\", shape: \"rect\", coords: [58 * w, 368 * h, 148 * w, 400 * h], fillColor: \"transparent\"},\n\n        {name: \"Arms\", shape: \"rect\", coords: [43 * w, 67 * h, 83 * w, 174 * h], fillColor: \"transparent\"},\n        {name: \"Arms\", shape: \"rect\", coords: [143 * w, 67 * h, 171 * w, 170 * h], fillColor: \"transparent\"},\n\n        {name: \"Wrist and Hand\", shape: \"rect\", coords: [28 * w, 174 * h, 63 * w, 215 * h], fillColor: \"transparent\"},\n        {name: \"Wrist and Hand\", shape: \"rect\", coords: [158 * w, 174 * h, 193 * w, 215 * h], fillColor: \"transparent\"}\n        ]\n    }\n\n\n\n    const fabList = this.props.fabricationList.map((item) => {\n\n        let temp = { key: item, text: item, value: item};\n        return temp;\n    });\n\n    const matList = this.props.materialList.map((item) => {\n\n        let temp = { key: item, text: item, value: item};\n        return temp;\n    });\n\n    const numList = [\n                        {key:1, text:1, value: 1},\n                        {key:3, text:3, value: 3},\n                        {key:9, text:9, value: 9}\n                    ]\n\n    const funcList = this.props.functionList.map((item) => {\n\n        let temp = { key: item, text: item, value: item};\n        return temp;\n    });\n\n    return (\n\n      <div className=\"contributeSplit\">\n\n          <div className=\"contributeForm\">\n\n                <div style={{height: \"29%\", marginTop: \"2%\"}}>\n                    <div style={{height: \"40%\"}}>\n                        <div>Resource Title</div>\n                        <Input value={this.state.title} onChange={(event) => this.onTitleChange(event)} style={{ borderRadius: \"0px\", padding: \"0\", height: \"40%\"}} type=\"text\"/>\n                    </div>\n\n                    <div style={{display: \"flex\", marginTop: \"1%\"}}>\n\n                        <div style={{width: \"49%\"}}>\n                            <div>Resource Link</div>\n                            <Input value={this.state.link} onChange={(event) => this.onLinkChange(event)} style={{ borderRadius: \"0px\", padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                        <div style={{width: \"49%\", marginLeft: \"2%\"}}>\n                            <div>Resource Main Page</div>\n                            <Input value={this.state.mainpage} onChange={(event) => this.onMainpageChange(event)} style={{ borderRadius: \"0px\",  padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                    </div>\n\n                    <div style={{display: \"flex\", marginTop: \"1%\"}}>\n\n                        <div style={{width: \"49%\"}}>\n                            <div>Year</div>\n                            <Input value={this.state.year} onChange={(event) => this.onYearChange(event)} style={{ borderRadius: \"0px\",  padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                        <div style={{width: \"49%\", marginLeft: \"2%\"}}>\n                            <div>Venue</div>\n                            <Input value={this.state.venue} onChange={(event) => this.onVenueChange(event)} style={{ borderRadius: \"0px\",  padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                    </div>\n                  </div>\n\n                  <div style={{height: \"45%\", borderTop: \"solid\", paddingTop: \"2%\", borderWidth: \"thick\", marginTop: \"5%\", display: \"flex\", textAlign: \"center\"}}>\n\n                    <div style={{width: \"45%\"}}>\n                              <div style={{height: \"30%\", marginTop: \"2%\"}}>\n                                  <div>Fabrication (Pick up to 2 that apply)</div>\n                                  <Dropdown onChange={this.onFabChange} style={{padding: \"0\", minHeight: \"1%\"}} placeholder='Fabrication' fluid multiple selection options={fabList} />\n                              </div>\n\n                              <div style={{height: \"30%\", marginTop: \"3%\"}}>\n                                  <div>Material (Pick up to 3 that apply)</div>\n                                  <Dropdown onChange={this.onMatChange} style={{padding: \"0\", minHeight: \"1%\"}} placeholder='Material' fluid multiple selection options={matList} />\n                              </div>\n\n                              <div style={{height: \"30%\", marginTop: \"3%\"}}>\n                                  <div>Function (Pick up to 3 that apply)</div>\n                                  <Dropdown onChange={this.onFuncChange} style={{padding: \"0\", minHeight: \"1%\"}} placeholder='Function' fluid multiple selection options={funcList} />\n                              </div>\n                    </div>\n                    <div style={{marginLeft: \"5%\", width: \"50%\", borderLeft: \"solid\", borderWidth: \"thick\"}}>\n\n\n                            <div style={{width: \"100%\", height: \"15%\", marginTop: \"1%\", marginLeft: \"3%\"}}>\n                                <div>Source (Select all that apply)</div>\n                                <div style={{display: \"flex\", height: \"100%\", fontSize: \"105%\"}}>\n                                    {(this.state.source === \"Engineering\") ? (<Button onClick={() => this.handleSourceChange('Engineering')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", fontSize: \"100%\", color: \"black\", width: \"47%\"}}>Engineering</Button>) : (<Button onClick={() => this.handleSourceChange('Engineering')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Engineering</Button>)}\n                                    {(this.state.source === \"Fashion\") ? (<Button onClick={() => this.handleSourceChange('Fashion')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\",fontSize: \"100%\"}}>Fashion</Button>) : (<Button onClick={() => this.handleSourceChange('Fashion')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\", fontSize: \"100%\"}}>Fashion</Button>)}\n                                </div>\n                            </div>\n\n                            <div style={{width: \"100%\", height: \"65%\", marginTop: \"12%\", marginLeft: \"3%\"}}>\n                                <div>Resource Categorization (Select all that apply)</div>\n                                <div style={{display: \"flex\",  height:\"25%\",fontSize: \"105%\"}}>\n                                      {(this.state.resourceCategorization.includes(\"Tutorials\")) ? (<Button onClick={() => this.handleResCatChange('Tutorials')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Tutorials</Button>) : (<Button onClick={() => this.handleResCatChange('Tutorials')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Tutorials</Button>)}\n                                      {(this.state.resourceCategorization.includes(\"Research\")) ? (<Button onClick={() => this.handleResCatChange('Research')} style={{backgroundColor: \"#5a6268\",  marginLeft: \"6%\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Research</Button>) : (<Button onClick={() => this.handleResCatChange('Research')} style={{backgroundColor: \"white\",  marginLeft: \"6%\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Research</Button>)}\n\n                                </div>\n                                <div style={{display: \"flex\", marginTop: \"1%\", height:\"25%\", fontSize: \"105%\"}}>\n                                    {(this.state.resourceCategorization.includes(\"Patent\")) ? (<Button onClick={() => this.handleResCatChange('Patent')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Patent</Button>) : (<Button onClick={() => this.handleResCatChange('Patent')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Patent</Button>)}\n                                    {(this.state.resourceCategorization.includes(\"Design Concept\")) ? (<Button onClick={() => this.handleResCatChange('Design Concept')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\", fontSize: \"100%\"}}>Design Concept</Button>) : (<Button onClick={() => this.handleResCatChange('Design Concept')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\", fontSize: \"100%\"}}>Design Concept</Button>)}\n                                </div>\n                                <div style={{display: \"flex\", marginTop: \"1%\", height:\"25%\", fontSize: \"105%\"}}>\n                                    {(this.state.resourceCategorization.includes(\"Aesthetics\")) ? (<Button onClick={() => this.handleResCatChange('Aesthetics')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Aesthetic</Button>) : (<Button onClick={() => this.handleResCatChange('Aesthetics')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Aesthetic</Button>)}\n                                </div>\n                            </div>\n\n                    </div>\n\n                </div>\n\n                <img src={\"ImageDatabase/Icons/Home.png\"}\n                 alt=\"\" style={{width: '30%', objectFit: \"cover\", marginLeft: \"40%\", marginTop: \"2%\"}}/>\n\n\n\n                  {/*<div style={{display: \"flex\", borderTop: \"solid\", marginTop: \"0.75%\"}}>\n\n                      <div style={{width: \"49%\"}}>\n                          <div>Wearability Rating (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onAChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                      <div style={{width: \"49%\", marginLeft: \"2%\"}}>\n                          <div>Electronic Integration (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onBChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                  </div>\n\n                  <div style={{display: \"flex\"}}>\n\n                      <div style={{width: \"49%\", marginTop: \"1.5%\"}}>\n                          <div style={{fontSize: \"97.5%\"}}>Maintainence Requirement (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onCChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                      <div style={{width: \"49%\", marginLeft: \"2%\", marginTop: \"1.5%\"}}>\n                          <div>Context (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onDChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                  </div>\n\n                  <div style={{display: \"flex\"}}>\n\n                      <div style={{width: \"49%\", marginTop: \"1.5%\"}}>\n                          <div>Activity Obstruction (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onEChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                      <div style={{width: \"49%\", marginLeft: \"2%\", marginTop: \"1.5%\"}}>\n                          <div>Aesthetic Consideration (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onFChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                  </div>*/}\n\n\n\n          </div>\n\n\n          <div className=\"contributeBody\">\n            <div  style={{transform: \"translate(40%, 15%)\", width: \"50%\"}}>\n            <ImageMapper src={img} map={myMap2} width={265 * w} height={400 * h}\n               onClick={area => this.handleClicks2(area)}\n             />\n             <div style={{ fontSize: \"smaller\", marginLeft: \"26%\"}}><b>(</b>DOUBLE CLICK FOR</div>\n             <div style={{ fontSize: \"smaller\", marginLeft: \"25%\"}}>FULL BODY SELECTION<b>)</b></div>\n            </div>\n\n             <Button size=\"lg\" onClick={() => this.handleSubmit()} style={{marginTop: \"14%\", marginLeft: \"34%\", textAlign: \"center\"}} color=\"secondary\">Submit</Button>{' '}\n          </div>\n\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n        fabricationList: state.fabrication,\n        materialList: state.material,\n        functionList: state.functions,\n    }\n};\n\nexport default connect(mapStateToProps)(ContributePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './matrix.css'\nimport './matrixSVG.css'\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport ContributePage from './ContributePage';\nimport './bodyZones.css'\nimport Tabletop from 'tabletop';\n\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\n\nimport * as actionTypes from '.././store/actions';\n\nconst SHEET_ID = '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc';\nconst ACCESS_TOKEN = 'AIzaSyBhtelk0uYpfhyFPHF6VRx9_V7AgFHTsNk';\n\nclass Matrix extends Component {\n\n  constructor(props) {\n\n    super(props);\n\n      this.state = {\n        zone: 'none',\n        modal: false,\n        modal2: false,\n        modal3: false,\n        nameitems: [],\n      };\n}\n    onClick = (name_array, bool_param, query_param_array) => {\n\n        if(bool_param) {\n\n          this.props.updateQuery(name_array, query_param_array);\n          this.props.toggleDisplay();\n        }\n    };\n    toggle = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    }\n  \n    toggle2 = () => {\n      this.setState(prevState => ({\n        modal2: !prevState.modal2\n      }));\n    }\n    toggle3 = () => {\n      this.setState(prevState => ({\n        modal3: !prevState.modal3\n      }));\n    }\n    /*\n\n      For every hexagon:\n\n        1) When clickable:\n\n            For that specific query, determine how many entries are there in the database.\n\n            For the 4 base types\n\n\n        2) When not clickable:\n\n              For all fifteen hexagons I need to calculate number of corresponding inputs.\n              Basically like for function, check if entry has X in any of func1-3. look over every entry and maintain\n              a boolean for all 4 parameters. and then increae counts depending on either of the 15 cases\n              For function + material, check both similars\n    */\n\n    render() {\n      const namefinalitems = [];\n      let sheet1Data = this.props.searchData\n      let names = [];\n      for(let i = 0; i < sheet1Data.length; i++) {\n        names.push(\"<h4>&nbsp;&nbsp;&nbsp;&nbsp;\"+sheet1Data[i][\"Reference Name\"] +\"</h4>\"+ \"<h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\n        + sheet1Data[i][\"AUTHORS\"] + \"</h6>\")\n      }\n      \n\n            let filterArr = this.props.searchData;\n            for (const [index, value] of names.entries()) {\n              namefinalitems.push(<li style={{padding: \"5px 5px\"}} key={index}><span dangerouslySetInnerHTML={{__html:value}}></span></li>)\n            }\n            if(this.props.filter) {\n\n              filterArr = filterArr.filter(this.filterYear);\n              filterArr = filterArr.filter(this.filterVenue);\n              filterArr = filterArr.filter(this.filterSource);\n            }\n\n            let name_array = [];\n            name_array[0] = 'Function';\n            name_array[1] = 'BodyZones';\n            name_array[2] = 'Fabrication';\n            name_array[3] = 'Material'\n\n            let bool_array = [];\n            bool_array.push(false);\n            bool_array.push(false);\n            bool_array.push(false);\n            bool_array.push(false);\n\n            if(this.props.selFunction !== '') {\n                bool_array[0] = true;\n                name_array[0] = this.props.selFunction;\n              }\n\n            if(this.props.selBodyZones !== '') {\n                bool_array[1] = true;\n                name_array[1] = this.props.selBodyZones;\n            }\n\n            if(this.props.selFabrication !== '') {\n                bool_array[2] = true;\n                name_array[2] = this.props.selFabrication;\n            }\n\n            if(this.props.selMaterial !== '') {\n                bool_array[3] = true;\n                name_array[3] = this.props.selMaterial;\n            }\n\n            let funcCount = filterArr.filter((item) => {\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n            });\n            funcCount = funcCount.length;\n\n            if(bool_array[0] && !name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              let curFuncCount = filterArr.filter((item) => {\n                return item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n              });\n              funcCount = curFuncCount.length;\n            }\n\n            let fabCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            fabCount = fabCount.length;\n\n            if(bool_array[2] && !name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              let curFabCount = filterArr.filter((item) => {\n                return item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n              });\n              fabCount = curFabCount.length;\n            }\n\n            let matCount = filterArr.filter((item) => {\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matCount = matCount.length;\n\n            if(bool_array[3]  && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              let curMatCount = filterArr.filter((item) => {\n                return item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n              });\n              matCount = curMatCount.length;\n            }\n\n            let bodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            bodCount = bodCount.length;\n\n            if(bool_array[1]) {\n\n              let curBodCount = filterArr.filter((item) => {\n                return item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n              });\n              bodCount = curBodCount.length;\n            }\n\n            /*\n              For twos, take 2 bool arrays\n            */\n\n            let funcBodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n            });\n            funcBodCount = funcBodCount.length;\n\n            if(bool_array[0] && bool_array[1] && !name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              let curFuncBodCount = filterArr.filter((item) => {\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n              });\n              funcBodCount = curFuncBodCount.length;\n            }\n\n\n\n            let matBodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matBodCount = matBodCount.length;\n\n            if(bool_array[1] && bool_array[3] && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              let curMatBodCount = filterArr.filter((item) => {\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n              });\n              matBodCount = curMatBodCount.length;\n            }\n\n            let fabBodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            fabBodCount = fabBodCount.length;\n\n            if(bool_array[1] && bool_array[2] && !name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              let curFabBodCount = filterArr.filter((item) => {\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\n              });\n              fabBodCount = curFabBodCount.length;\n            }\n\n\n\n            let fabFuncCount = filterArr.filter((item) => {\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            fabFuncCount = fabFuncCount.length;\n\n            if(name_array[0].toLowerCase().trim().includes('all functions') && !name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[0] && bool_array[2]) {\n                let curFabFuncCount = filterArr.filter((item) => {\n                  return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\n                  (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                });\n                fabFuncCount = curFabFuncCount.length;\n              }\n            }\n\n            else if(!name_array[0].toLowerCase().trim().includes('all functions') && name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[0] && bool_array[2]) {\n                let curFabFuncCount = filterArr.filter((item) => {\n                  return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\") &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n                });\n                fabFuncCount = curFabFuncCount.length;\n              }\n            }\n\n            else {\n\n              if(bool_array[0] && bool_array[2]) {\n                let curFabFuncCount = filterArr.filter((item) => {\n                  return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n              \n                });\n                fabFuncCount = curFabFuncCount.length;\n              }\n            }\n\n\n\n            let matFuncCount = filterArr.filter((item) => {\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matFuncCount = matFuncCount.length;\n\n            if(name_array[0].toLowerCase().trim().includes('all functions') && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[0] && bool_array[3]) {\n                let curMatFuncCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                });\n                matFuncCount = curMatFuncCount.length;\n              }\n            }\n\n            else if(!name_array[0].toLowerCase().trim().includes('all functions') && name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[0] && bool_array[3]) {\n                let curMatFuncCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\") &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n                });\n                matFuncCount = curMatFuncCount.length;\n              }\n            }\n\n            else {\n\n              if(bool_array[0] && bool_array[3]) {\n                let curMatFuncCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n                });\n                matFuncCount = curMatFuncCount.length;\n              }\n            }\n\n\n\n\n\n            let matFabCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matFabCount = matFabCount.length;\n\n            if(name_array[2].toLowerCase().trim().includes('all fabrications') && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3]) {\n                let curMatFabCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                });\n                matFabCount = curMatFabCount.length;\n              }\n            }\n\n            else if(!name_array[2].toLowerCase().trim().includes('all fabrications') && name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3]) {\n                let curMatFabCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\") &&\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\n                });\n                matFabCount = curMatFabCount.length;\n              }\n            }\n\n            else {\n              if(bool_array[2] && bool_array[3]) {\n                let curMatFabCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\n                });\n                matFabCount = curMatFabCount.length;\n              }\n            }\n\n\n\n\n            let matFabFuncCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n            });\n            matFabFuncCount = matFabFuncCount.length;\n\n            let curMatFabFuncCount = filterArr;\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[0]) {\n                  curMatFabFuncCount = curMatFabFuncCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                matFabFuncCount = curMatFabFuncCount.length;\n              }\n            }\n\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[0]) {\n                curMatFabFuncCount = curMatFabFuncCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                matFabFuncCount = curMatFabFuncCount.length;\n              }\n            }\n            console.log(matFabFuncCount);\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[0]) {\n                curMatFabFuncCount = curMatFabFuncCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                matFabFuncCount = curMatFabFuncCount.length;\n              }\n            }\n            console.log(matFabFuncCount);\n\n\n\n\n\n            let matFabBodCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            matFabBodCount = matFabBodCount.length;\n\n            let curMatFabBodCount = filterArr;\n\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[1]) {\n                 curMatFabBodCount = curMatFabBodCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                matFabBodCount = curMatFabBodCount.length;\n              }\n            }\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[1]) {\n                  curMatFabBodCount = curMatFabBodCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                matFabBodCount = curMatFabBodCount.length;\n              }\n            }\n\n            if(bool_array[2] && bool_array[3] && bool_array[1]) {\n              curMatFabBodCount = curMatFabBodCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n\n              });\n              matFabBodCount = curMatFabBodCount.length;\n            }\n\n\n\n            let funcFabBodCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            funcFabBodCount = funcFabBodCount.length;\n              let curFuncFabBodCount = filterArr;\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[2] && bool_array[0] && bool_array[1]) {\n                 curFuncFabBodCount = curFuncFabBodCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                funcFabBodCount = curFuncFabBodCount.length;\n              }\n            }\n\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[2] && bool_array[0] && bool_array[1]) {\n                curFuncFabBodCount = curFuncFabBodCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                funcFabBodCount = curFuncFabBodCount.length;\n              }\n            }\n\n\n            if(bool_array[2] && bool_array[0] && bool_array[1]) {\n                curFuncFabBodCount = curFuncFabBodCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n              });\n\n              funcFabBodCount = curFuncFabBodCount.length;\n            }\n\n\n\n\n            let funcMatBodCount = filterArr.filter((item) => {\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            funcMatBodCount = funcMatBodCount.length;\n\n            let curFuncMatBodCount = filterArr;\n\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1]) {\n                 curFuncMatBodCount = curFuncMatBodCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                funcMatBodCount = curFuncMatBodCount.length;\n              }\n            }\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[0] && bool_array[3] && bool_array[1]) {\n                  curFuncMatBodCount = curFuncMatBodCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                funcMatBodCount = curFuncMatBodCount.length;\n              }\n            }\n\n            if(bool_array[3] && bool_array[0] && bool_array[1]) {\n                curFuncMatBodCount = curFuncMatBodCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n\n              });\n              funcMatBodCount = curFuncMatBodCount.length;\n            }\n\n            let allCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            allCount = allCount.length;\n            let curAllCount = filterArr;\n\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n                  curAllCount = curAllCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                  allCount = curAllCount.length;\n              }\n            }\n\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n                  curAllCount = curAllCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                allCount = curAllCount.length;\n              }\n            }\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n                  curAllCount = curAllCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                allCount = curAllCount.length;\n              }\n            }\n\n            if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n              curAllCount = curAllCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n              });\n              allCount = curAllCount.length;\n            }\n\n            let w_f = window.innerWidth / 1280;\n\n            if(w_f < 0.7)\n              w_f = 0.7\n            else if(w_f > 1.3)\n              w_f = 1.3\n\n            let h_f = window.innerHeight / 1280;\n\n\n            if(h_f < 0.9)\n              h_f = 0.9\n            else if(h_f > 1.1)\n              h_f = 1.1\n\n\n            let w = window.innerWidth * 0.6 * w_f\n            let h = window.innerHeight * 0.85 * h_f\n\n\n            const hexagonSize = { x: 12.5, y:  12.5};\n            const closeBtn = <Button size=\"sm\" onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\n        const closeBtn2 = <Button onClick={this.toggle2} color=\"secondary\">{\"Close (X)\"}</Button>\n        const closeBtn3 = <Button onClick={this.toggle3} color=\"secondary\">{\"Close (X)\"}</Button>\n           \n            return (\n\n            \n             <div className=\"matrixBody\">\n             {\n               \n               console.log()\n             }\n             <div style={{paddingLeft:\"50%\",height: \"10%\", display: \"flex\", color: \"white\", marginRight:\"-2%\"}}>\n\n<div className=\"contact\" style={{marginTop: \"4%\", fontSize: \"125%\"}} onClick={this.toggle3}>DATASET</div>\n<Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal3} toggle={this.toggle3}>\n  <ModalHeader close={closeBtn3} style={{backgroundColor: \"black\", color: \"white\", height: \"12%\"}} toggle={this.toggle3}>\n  <h2>CHIMERA</h2>Dataset</ModalHeader>\n\n  <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\", height: \"90%\", width: \"100%\"}}>\n\n  <div style={{display: \"flex\"}}>\n      <div style={{width: \"100%\", marginLeft: \"1%\", color: \"white\"}}>\n        <ol>{namefinalitems} </ol> \n      </div>\n\n     \n  </div>\n  </ModalBody>\n</Modal>\n<div className=\"contribute\" style={{marginTop: \"4%\", marginLeft:\"8%\", fontSize: \"125%\"}} onClick={this.toggle}>CONTRIBUTE</div>\n<Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal} toggle={this.toggle}>\n  <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\", height: \"8%\", padding: \"0.5rem 0.5rem\"}} toggle={this.toggle}>CONTRIBUTE</ModalHeader>\n\n  <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\", height: \"90%\", width: \"100%\"}}>\n\n        <ContributePage />\n\n  </ModalBody>\n</Modal>\n\n<div className=\"contact\" style={{marginTop: \"4%\", marginLeft: \"8%\", fontSize: \"125%\"}} onClick={this.toggle2}>CONTACT US</div>\n<Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal2} toggle={this.toggle2}>\n  <ModalHeader close={closeBtn2} style={{backgroundColor: \"black\", color: \"white\", height: \"10%\"}} toggle={this.toggle2}>Contact Us</ModalHeader>\n\n  <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\", height: \"90%\", width: \"100%\"}}>\n\n  <div style={{display: \"flex\"}}>\n      <div style={{width: \"47%\", marginLeft: \"1%\", color: \"white\"}}>\n\n        <h3>Contact Us</h3>\n        <div>Name</div>\n        <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"10%\"}} type=\"text\"/>\n        <div>Email Address</div>\n        <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"10%\"}} type=\"text\"/>\n        <div>Subject</div>\n        <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"10%\"}} type=\"text\"/>\n        <div>Message</div>\n        <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"50%\"}} type=\"text\"/>\n\n      </div>\n\n      <div style={{width: \"47%\", marginLeft: \"5%\", color: \"white\"}}>\n\n      <h3>Project Contributors</h3>\n      </div>\n  </div>\n  </ModalBody>\n</Modal>\n\n\n</div>\n             <div className=\"matrixSVG\">\n                        <HexGrid width={760 * w_f} height={window.innerHeight * 0.87} viewBox={\"-49 -56 100 100\"}>\n                        <Layout size={hexagonSize} flat={true} spacing={1.05} origin={{ x: 0, y: 0 }}>\n                                  <linearGradient id=\"gall\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"33%\" stop-color=\"#E94555\" />\n                                      <stop offset=\"66%\" stop-color=\"#3E9FC6\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n                                    {(bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3]) ? ((allCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gall)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" font-size=\"1em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" font-size=\"1em\"fill=\"black\">+ \n                                    {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" font-size=\"1em\" fill=\"black\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" font-size=\"1em\" fill=\"black\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">{\"(\" + allCount + \")\"}</tspan></text></Hexagon>) : (<Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={0} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>)) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-2em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\">\n                                   </tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n                                   \n                                   <linearGradient id=\"gbodfab\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#E94555\" />\n                                      <stop offset=\"100%\" stop-color=\"#3E9FC6\" />\n                                    </linearGradient>\n                                   {(bool_array[1] && bool_array[2]) ? ((fabBodCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gbodfab)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"black\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[2]}</tspan><tspan fill=\"black\" x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                     <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={0} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                   )) :\n                                    (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n\n                                    <linearGradient id=\"gfuncmat\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n                                  {(bool_array[0] && bool_array[3]) ? ((matFuncCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gfuncmat)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text></Hexagon>) : (\n                                    <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={0} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                  )) :\n                                   (<Hexagon cellStyle={{fill: \"black\", stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n                                    \n                                    <linearGradient id=\"gmatfab\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#3E9FC6\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n                                   {(bool_array[2] && bool_array[3]) ? ((matFabCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gmatfab)\",stroke:\"black\"}} onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={1} r={-2} s={0}> <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"black\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text></Hexagon>) : (\n                                     <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={1} r={-2} s={0}> <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                   )) :\n                                    (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={1} r={-2} s={0}> <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n\n                                    <linearGradient id=\"gfuncbod\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"100%\" stop-color=\"#E94555\" />\n                                    </linearGradient>\n                                    {(bool_array[0] && bool_array[1]) ? ((funcBodCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gfuncbod)\", stroke:\"black\"}} onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[1]}</tspan><tspan fill=\"black\" x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                      <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={-1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                    )) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n\n                                    <linearGradient id=\"gbodmat\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#E94555\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n                                    {(bool_array[1] && bool_array[3]) ? ((matBodCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gbodmat)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={2} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"black\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                      <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={2} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                    )) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={2} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n                                     \n                                    \n                                    <linearGradient id=\"gfuncfab\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"100%\" stop-color=\"#3E9FC6\" />\n                                    </linearGradient>\n\n                                     {(bool_array[0] && bool_array[2]) ? ((fabFuncCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gfuncfab)\",stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-2} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[2]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text></Hexagon>) : (\n                                       <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={-2} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                     )) :\n                                      (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-2} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n\n                                     <linearGradient id=\"gfuncbodmat\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"50%\" stop-color=\"#E94555\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n\n                                   {(bool_array[0] && bool_array[1] && bool_array[3]) ? ((funcMatBodCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gfuncbodmat)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>  </Hexagon>) : (\n                                     <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={-1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>  </Hexagon>\n                                   )) :\n                                    (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text>  </Hexagon>)}\n\n                                    <linearGradient id=\"gbodmatfab\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#E94555\" />\n                                      <stop offset=\"50%\" stop-color=\"#3E9FC6\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n                                      {(bool_array[1] && bool_array[2] && bool_array[3]) ? ((matFabBodCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gbodmatfab)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"black\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                        <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                      )) :\n                                       (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n\n                                      <linearGradient id=\"gfuncbodfab\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"50%\" stop-color=\"#E94555\" />\n                                      <stop offset=\"100%\" stop-color=\"#3E9FC6\" />\n                                    </linearGradient>\n\n                                     {(bool_array[0] && bool_array[1] && bool_array[2]) ? ((funcFabBodCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gfuncbodfab)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[2]}</tspan><tspan fill = \"black\"x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                       <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={-1} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                     )) :\n                                      (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n\n\n                                    <linearGradient id=\"gfuncmatfab\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                      <stop offset=\"0%\" stop-color=\"#71BDAB\" />\n                                      <stop offset=\"50%\" stop-color=\"#3E9FC6\" />\n                                      <stop offset=\"100%\" stop-color=\"#FDA901\" />\n                                    </linearGradient>\n\n                                    {(bool_array[0] && bool_array[2] && bool_array[3]) ? ((matFabFuncCount !== 0) ? (<Hexagon cellStyle={{fill: \"url(#gfuncmatfab)\", stroke:\"black\"}}onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"black\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"black\">+ {name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text></Hexagon>) : (\n                                      <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                    )) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"\"}</tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan><tspan x=\"0\" dy=\"1.2em\"></tspan></text></Hexagon>)}\n                                      \n                                {(bool_array[2])? ((fabCount !== 0) ? (<Hexagon cellStyle={{fill: \"rgb(62,159,198)\",stroke: \"rgb(37, 96, 120)\"}}onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={-2} r={2} s={0}>\n                                    <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" font-size=\"1.3em\"fill=\"black\">{name_array[2]}</tspan><tspan x=\"0\" fill=\"black\"dy=\"1.2em\">{\"(\" + fabCount + \")\"}</tspan></text>\n                               </Hexagon>) : (\n                                 <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={-2} r={2} s={0}>\n                                     <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                                </Hexagon>\n                               )) : (<Hexagon cellStyle={{stroke: \"rgb(62, 159, 198)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={-2} r={2} s={0}>\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" font-size=\"1.5em\"fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan></text>\n                              </Hexagon>)}\n                              \n\n                              {(bool_array[3]) ? ((matCount !== 0) ? (<Hexagon cellStyle={{fill: \"rgb(253,169,1)\", stroke: \"rgb(156,110,19)\"}}onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\n                                <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" font-size=\"1.3em\"fill=\"black\">{name_array[3]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + matCount + \")\"}</tspan></text>\n                               </Hexagon>) : (\n                                 <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={2} r={-2} s={0}>\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                                  </Hexagon>\n                               )) : (<Hexagon cellStyle={{stroke: \"rgb(253, 169, 1)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\n                                 <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" font-size=\"1.5em\"fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan></text>\n\n                                </Hexagon>)}\n\n\n\n\n                            {(bool_array[0]) ? ((funcCount !== 0) ? (<Hexagon cellStyle={{fill:\"rgb(113,189,171)\", stroke: \"rgb(72, 122, 110)\"}}onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" font-size=\"1.3em\" fill=\"black\">{name_array[0]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + funcCount + \")\"}</tspan></text>\n                           </Hexagon>) : (\n                             <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={-2} r={0} s={0}>\n                               <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                            </Hexagon>\n                           )) : (<Hexagon cellStyle={{stroke: \"rgb(113, 189, 171)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\n                             <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan font-size=\"1.5em\" x=\"0\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan></text>\n                          </Hexagon>)}\n\n\n\n\n                          {(bool_array[1]) ? ((bodCount !== 0) ? (<Hexagon cellStyle={{fill:\"rgb(233,69,85)\", stroke: \"rgb(230, 49, 45)\"}}onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={2} r={0} s={0}>\n                          <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" font-size=\"1.3em\"fill=\"black\">{name_array[1]}</tspan><tspan fill=\"black\"x=\"0\" dy=\"1.2em\">{\"(\" + bodCount + \")\"}</tspan></text>\n                         </Hexagon>) : (\n                           <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={2} r={0} s={0}>\n                           <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                          </Hexagon>\n                         )) : (<Hexagon cellStyle={{stroke: \"rgb(233, 69, 85)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={2} r={0} s={0}>\n                         <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan font-size=\"1.5em\"x=\"0\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan></text>\n                        </Hexagon>)}\n\n\n                                {/*<Hexagon q={0} r={2} s={0} stroke=\"green\" fill=\"purple\"/>\n                               <Hexagon q={0} r={-2} s={0} stroke=\"green\" fill=\"purple\"/>\n\n\n                               <Hexagon q={1} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={1} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                               <Hexagon q={-1} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={-1} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\n\n\n                               <Hexagon q={-2} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={-2} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                               <Hexagon q={2} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={2} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                              <Hexagon q={-3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                              <Hexagon q={3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\n\n\n                              <Hexagon q={-4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                              <Hexagon q={4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\n                              */}\n\n\n          </Layout>\n        </HexGrid>\n                </div>\n            </div>\n        );\n    }\n\n    filterYear = (item) => {\n\n      if(item[\"Year\"] === \"\")\n        return true\n\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\n    }\n\n    filterVenue = (item) => {\n\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"].toLowerCase() === this.props.venue.toLowerCase())\n    }\n\n    filterSource = (item) => {\n\n      if(item[\"Source\"] === \"\" || item[\"Source\"] === \"Both\")\n        return true\n\n      return (this.props.source === 'Both' || item[\"Source\"].toLowerCase() === this.props.source.toLowerCase())\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        selFunction: state.selFunction,\n        selBodyZones: state.selBodyZones,\n        selFabrication: state.selFabrication,\n        selMaterial: state.selMaterial,\n        searchData: state.searchData,\n\n        filter: state.filter,\n        minYear: state.minYear,\n        maxYear: state.maxYear,\n        venue: state.venueFilter,\n        source: state.sourceFilter,\n\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\n        updateQuery: (name_array, query_param) => dispatch({type: actionTypes.UPDATE_QUERY, names: name_array, params: query_param})\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPaneModalTab.css';\nimport { CustomInput, Form, FormGroup, Label } from 'reactstrap';\nimport * as actionTypes from '../store/actions';\n\n\nclass LeftPaneModalTab extends Component {\n\n\n    constructor(props) {\n       super(props);\n\n       this.state = {\n         curInput: '',\n       };\n    }\n\n    onSelect = (input, type) => {\n        if(type == 'Function') {\n\n            this.setState({\n               curInp: input,\n            });\n\n\n\n            this.props.onSelectFunction(input);\n        }\n        else if(type == 'BodyZones') {\n\n            this.props.onSelectBodyZones(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else if(type == 'Fabrication') {\n            this.props.onSelectFabrication(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else {\n            this.props.onSelectMaterial(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n    };\n\n    /*\n        Use state to save current input.\n        Use conditional rendering to render the selected input differently\n    */\n\n    render() {\n            let inp = '';\n            let curInp = this.state.curInp;\n\n            inp = this.props.subtypes.map((input) => {\n\n                return (          \n                    <div className=\"rotate13\">\n                        {input}\n                    </div>\n\n                );\n            }\n\n            )\n            return (\n\n            <div className='leftPaneModalTabBody'>\n                  {inp}\n            </div>\n            );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\n\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(LeftPaneModalTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPane.css'\nimport LeftPaneModalTab from './LeftPaneModalTab';\n\nimport { Button, Fade } from 'reactstrap';\n\nclass LeftPaneModal extends Component {\n\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n         listArr: this.props.selArr,\n        };\n    }\n\n    render() {\n\n            let funcModal = <LeftPaneModalTab style={{height: '25%'}}\n                                        type='Function'\n                                        subtypes={this.props.functions} />;\n\n            let bodyModal = <LeftPaneModalTab style={{height: '25%'}}\n             type='BodyZones'\n            subtypes={this.props.bodyZones} />;\n\n            let fabModal =  <LeftPaneModalTab style={{height: '25%'}}\n            type='Fabrication'\n            subtypes={this.props.fabrication} />;\n\n            let matModal = <LeftPaneModalTab style={{height: '25%'}}\n            type='Material'\n            subtypes={this.props.material} />;\n\n            return (\n\n\n            <div className=\"leftPaneModal\">\n\n                   {/*funcModal*/}\n                   {/*fabModal*/}\n                   {/*matModal*/}\n            </div>\n\n            );\n    }\n}\n\nconst mapStateToProps = state => {\n\n    console.log(state.arrFunc);\n    return {\n        functions: state.arrFunc,\n        bodyZones: state.arrBod,\n        fabrication: state.arrFab,\n        material: state.arrMat,\n\n    }\n};\n\nexport default connect(mapStateToProps)(LeftPaneModal);\n","import React, { Component } from 'react';\n\nimport { CardImg, CardBody,\n CardSubtitle } from 'reactstrap';\n\n import HorizontalScroll from 'react-scroll-horizontal'\n\n import * as actionTypes from '.././store/actions';\n import { connect } from 'react-redux';\n\nimport './searchDisplay.css'\n\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Tooltip } from 'reactstrap';\n\nclass SearchDisplayTab extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltipOpenCost: false,\n      tooltipOpenImp: false,\n      tooltipOpenWear: false,\n    };\n\n    this.toggleImp = this.toggleImp.bind(this);\n    this.toggleCost = this.toggleCost.bind(this);\n    this.toggleWear = this.toggleWear.bind(this);\n\n  }\n\n  toggleCost = () => {\n    this.setState({\n      tooltipOpenCost: !this.state.tooltipOpenCost\n    });\n  }\n\n  toggleImp = () => {\n    this.setState({\n      tooltipOpenImp: !this.state.tooltipOpenImp\n    });\n  }\n\n  toggleWear = () => {\n    this.setState({\n      tooltipOpenWear: !this.state.tooltipOpenWear\n    });\n  }\n\n  updateBookmark = (name) => {\n\n    let temp = name.substring(10);\n    console.log(temp);\n    this.props.updateBookmark(temp);\n\n  }\n\n  componentDidMount() {\n\n  let item1 = document.getElementById(\"scroller0\");\n  let item2 = document.getElementById(\"scroller1\");\n  let item3 = document.getElementById(\"scroller2\");\n  let item4 = document.getElementById(\"scroller3\");\n  let item5 = document.getElementById(\"scroller4\");\n\n  window.addEventListener('wheel', function(e) {\n\n      if(e.deltaX !== 0) {\n\n          if(e.y < item1.getBoundingClientRect().bottom) {\n            item1.scrollLeft += e.deltaX;\n\n          }\n\n          else if(e.y < item2.getBoundingClientRect().bottom) {\n     item2.scrollLeft += e.deltaX;\n\n          }\n\n          else if(e.y < item3.getBoundingClientRect().bottom) {\n          item3.scrollLeft += e.deltaX;;\n\n          }\n\n          else if(e.y < item4.getBoundingClientRect().bottom) {\n            item4.scrollLeft += e.deltaX;\n\n          }\n\n          else if(e.y < item5.getBoundingClientRect().bottom) {\n            item5.scrollLeft += e.deltaX;\n\n          }\n\n      }\n\n      else if(e.y < item1.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item1.scrollLeft += 100;\n        else item1.scrollLeft -= 100;\n      }\n\n      else if(e.y < item2.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item2.scrollLeft += 100;\n        else item2.scrollLeft -= 100;\n      }\n\n      else if(e.y < item3.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item3.scrollLeft += 100;\n        else item3.scrollLeft -= 100;\n      }\n\n      else if(e.y < item4.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item4.scrollLeft += 100;\n        else item4.scrollLeft -= 100;\n      }\n\n      else if(e.y < item5.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item5.scrollLeft += 100;\n        else item5.scrollLeft -= 100;\n      }\n\n    });\n\n  }\n\n  render() {\n\n    let inp = '';\n\n    let i = 0;\n    let j = 0;\n\n    if(this.props.type === 'Research')\n      j = 1;\n    else if(this.props.type === 'Tutorial')\n      j = 2;\n    else if(this.props.type === 'Aesthetic Approach')\n      j = 3;\n    else if(this.props.type === 'Design Concepts')\n      j = 4\n\n    inp = this.props.arr.map((input) => {\n\n      i++;\n      let check = this.props.bookMarks.includes(input[\"Reference Link\"].substring(10));\n\n\n      let wearToken = \"nwear1\";\n      if(parseInt(input[\"Wearability\"]) <= 10)\n        wearToken = \"nwear1\";\n      else if(parseInt(input[\"Wearability\"]) <= 20)\n        wearToken = \"nwear2\";\n      else if(parseInt(input[\"Wearability\"]) <= 50)\n        wearToken = \"nwear3\";\n      else if(parseInt(input[\"Wearability\"]) <= 70)\n        wearToken = \"nwear4\";\n      else if(parseInt(input[\"Wearability\"]) <= 100)\n        wearToken = \"nwear5\";\n\n      let costToken = \"$$\"\n\n      if(parseInt(input[\"costMetric\"]) > 17)\n        costToken = \"$$$\";\n      else if(parseInt(input[\"costMetric\"]) >= 6)\n        costToken = \"$$\";\n      else\n        costToken = \"$\";\n\n\n      let col = \"green\";\n\n      if(parseInt(input[\"impMetric\"]) === 3)\n        col = \"red\";\n      else if(parseInt(input[\"impMetric\"]) === 2)\n        col = \"yellow\";\n\n\n      return (\n\n        <div className=\"itemStyle\">\n\n          <div className=\"bgimg\">\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\n          \n            <img id=\"image\" src={\"https://chimeraimages.s3.us-east-2.amazonaws.com/\" + input[\"PIC ID\"] + \".jpg\"}  onError={(e) => {e.target.error = null; e.target.src = \"https://chimeraimages.s3.us-east-2.amazonaws.com/genericImage.jpg\"}} alt=\"\" style={{height: '20vh', width: '100%', objectFit: 'cover'}}/>\n            </a>\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\n            <div id=\"title\" className=\"centered\">{(input[\"Reference Name\"].length < 40) ? (input[\"Reference Name\"]) : (input[\"Reference Name\"].substring(0, 40) + \"...\")}</div>\n            </a>\n            \n\n            {(this.props.loggedIn) ? (<div id=\"title\" className=\"ticker\"><Input checked={check} onClick={() => this.updateBookmark(input[\"Reference Link\"])} type=\"checkbox\" />{' '}</div>) : (<div/>)}\n\n\n           {/* <div className=\"cost\"><div style={{backgroundColor: \"#f7f7f7\", borderRadius: \"4px\", opacity: \"0.75\", height: '30%', width: '80%'}}><div style={{ height: \"100%\", fontSize: \"100%\"}}>{costToken}</div></div>\n            <div class=\"tooltipCost\">\n                        COST LEVEl:\n                        Relationship between materials and the\n                        fabrication technique implemented in\n                        each work.\n            </div>\n\n      </div>*/}\n\n           {/* <div className=\"imp\">\n                  <div style={{height: '30%', width: '75%', backgroundColor: col }}>\n            </div>\n            <div class=\"tooltipImp\">\n                  IMPLEMENTATION LEVEL:\n                  This metric takes into consideration\n                  the time taken to implement the functionalities\n                  mentioned in each resource (i.e. function,\n                  coding requirements, etc.).\n                  It is scaled on a red, yellow, green ranking\n                  system from longest to shortest implementation\n                  time respectively.\"\n            </div>\n\n                  </div>*/}\n\n           {/* <div className=\"wear\">\n                             <img src={\"ImageDatabase/Icons/\" + wearToken + \".png\"}\n                              alt=\"\" style={{width: '85%', objectFit: \"cover\", transform: \"translate(-50%, 5%)\", position: \"absolute\"}} />\n                  <div class=\"tooltipWear\">\n                    WEARABILITY LEVEL:\n                    Five levels of wearability were defined using\n                    principles such as:\n                    Attachment to the Body, Maintainance required\n                    Activity obstruction, System integration\n                    Context application, Aesthetics consideration\n                  </div>\n                </div>*/}\n\n\n          </div>\n        </div>\n\n      )\n\n    });\n\n\n    return (\n      <div className=\"searchStore\">\n\n        <div className=\"leftPaneSearch\">\n            <div className=\"rotate1\">{this.props.type}</div>\n        </div>\n\n        <div className=\"searchTabContent\">\n\n          <div id={\"scroller\" + this.props.count} className=\"scrollStyle\" style={{display: 'flex', height: \"100%\", flexWrap: \"nowrap\"}}>\n            {inp}\n          </div>\n\n        </div>\n\n    </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateBookmark: (value) => dispatch({type: actionTypes.UPDATE_BOOKMARKS, val: value.toString(0,20)}),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        bookMarks: state.bookMarks,\n\n        loggedIn: state.isLoggedIn,\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './searchDisplay.css'\nimport SearchDisplayTab from './SearchDisplayTab'\nimport ListDisplayTab from './ListDisplayTab'\n\nimport { Table } from 'reactstrap';\n\nimport * as actionTypes from '../store/actions';\n\nclass SearchDisplay extends Component {\n\n\n  /*\n    Have a list view control variable in state\n  */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n          filterData: [],\n          research: [],\n          tutorials: [],\n          aesthetics: [],\n          concepts: [],\n          listView: false,\n        };\n    }\n\n    filterFunc = (item) => {\n\n      if(this.props.names[0].toLowerCase().trim().includes(\"all functions\"))\n        return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\");\n\n      return (item[\"Function 1\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 2\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 3\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()))\n    }\n\n    filterBod = (item) => {\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 2\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 3\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()))\n    }\n\n    filterFab = (item) => {\n\n      if(this.props.names[2].toLowerCase().trim().includes(\"all fabrications\"))\n        return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\");\n\n      return (item[\"Fabrication 1\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()) || item[\"Fabrication 2\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()))\n    }\n\n    filterMat = (item) => {\n\n      if(this.props.names[3].toLowerCase().trim().includes(\"all material\"))\n        return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\");\n\n      return (item[\"Material 1\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 2\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 3\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()))\n    }\n\n    filterYear = (item) => {\n\n      if(item[\"Year\"] === \"\")\n        return true\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\n    }\n\n    filterVenue = (item) => {\n\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"].toLowerCase() === this.props.venue.toLowerCase())\n    }\n\n    filterAuthor = (item) => {\n      let authors = \"\"\n      if(\"AUTHORS\" in item) {\n        authors = item[\"AUTHORS\"]\n      }\n\n      return (this.props.author === 'All' || authors.toLowerCase().includes(this.props.venue.toLowerCase()))\n    }\n\n    filterSource = (item) => {\n\n            if(item[\"Source\"] === \"\" || item[\"Source\"] === \"Both\")\n              return true\n\n            return (this.props.source === 'Both' || item[\"Source\"].toLowerCase() === this.props.source.toLowerCase())\n    }\n\n    shuffleArray = (array) => {\n      for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(this.random(i) * (i + 1));\n          [array[i], array[j]] = [array[j], array[i]];\n      }\n\n      return array;\n    }\n\n    random = (seed) => {\n      var x = Math.sin(seed++) * 10000;\n      return x - Math.floor(x);\n    }\n\n    render() {\n\n            let filterArr = this.props.allData;\n\n            if(!this.props.viewBookmarks) {\n                  if(!this.props.searchDisplay) {\n\n\n                          // if(this.props.filter) {\n\n                          //   filterArr = filterArr.filter(this.filterYear);\n                          //   filterArr = filterArr.filter(this.filterVenue);\n                          //   filterArr = filterArr.filter(this.filterAuthor);\n                          //   filterArr = filterArr.filter(this.filterSource);\n                          // }\n                            console.log(filterArr);\n\n                          if(this.props.params.includes('Function')) {\n                             filterArr = filterArr.filter(this.filterFunc);\n                          }\n\n                          if(this.props.params.includes('BodyZones')) {\n                             filterArr = filterArr.filter(this.filterBod);\n                          }\n                          if(this.props.params.includes('Fabrication')) {\n                             filterArr = filterArr.filter(this.filterFab);\n                          }\n                          if(this.props.params.includes('Material')) {\n                             filterArr = filterArr.filter(this.filterMat);\n                          }\n                }\n\n                else {\n\n                    filterArr = filterArr.filter((item) => {\n                      return item[\"Reference Name\"].toLowerCase().includes(this.props.searchQuery.toLowerCase());\n                  });\n                }\n\n\n          }\n\n\n          else {\n\n            filterArr = filterArr.filter((item) => {\n\n              return this.props.bookMarks.includes(item[\"Reference Link\"].substring(10));\n            });\n\n          }\n\n          this.props.filteredArrayUpdate(filterArr);\n\n          let researchArr = [];\n          let tutorialsArr = [];\n          let aestheticsArr = [];\n          let conceptsArr = [];\n          let patentsArr = [];\n\n          researchArr = filterArr.filter((item) => {\n            if(item[\"Research\"] === undefined)\n              return false\n            return Math.random() > 0.4\n            //return item[\"Research\"].trim() === 'x'\n          });\n\n          tutorialsArr = filterArr.filter((item) => {\n            if(item[\"Tutorial\"] === undefined)\n              return false\n            return Math.random() > 0.4\n              //return item[\"Tutorial\"].trim() === 'x'\n          });\n\n          aestheticsArr = filterArr.filter((item) => {\n            if(item[\"Aesthetic Approach\"] === undefined)\n              return false\n            return Math.random() > 0.7\n              // return item[\"Aesthetic Approach\"].trim() === 'x'\n          });\n\n          conceptsArr = filterArr.filter((item) => {\n            if(item[\"Design Concepts\"] === undefined)\n              return false\n            return Math.random() > 0.7\n              //return item[\"Design Concepts\"].trim() === 'x'\n          });\n\n          patentsArr = filterArr.filter((item) => {\n            if(item[\"Patents\"] === undefined)\n              return false\n            return Math.random() > 0.7\n              // return item[\"Patents\"].trim() === 'x'\n          });\n\n\n          let listView = this.props.listView;\n          let i = 1;\n          let listContents = filterArr.map((item) => {\n            return (\n              <tr>\n                <th scope=\"row\">{i++}</th>\n                <td>{item[\"Reference Name\"]}</td>\n                <td>{item[\"Reference Link\"]}</td>\n              </tr>\n            )\n          })\n\n          let corLabel = \"Pinned/Bookmarks\";\n\n          if(!this.props.viewBookmarks) {\n\n            corLabel = \"\";\n            if(this.props.params.includes('Function'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[0];\n              else {\n                corLabel = corLabel + ' + ' + this.props.names[0];\n              }\n\n            if(this.props.params.includes('BodyZones'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[1];\n              else {\n                corLabel = corLabel + ' + ' + this.props.names[1];\n              }\n\n            if(this.props.params.includes('Fabrication'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[2];\n              else {\n                corLabel = corLabel + ' + '  + this.props.names[2];\n              }\n\n            if(this.props.params.includes('Material'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[3];\n              else {\n                corLabel = corLabel + ' + ' + this.props.names[3];\n              }\n          }\n\n\n          return (\n\n            <div style={{width: \"92.5%\"}}>\n              {(listView) ? (<div className=\"listSearch\">\n                    <Table striped>\n                    <thead>\n                      <th>#</th>\n                      <th>Reference Name</th>\n                      <th>Link</th>\n                    </thead>\n                    <tbody>\n                      {listContents}\n                    </tbody>\n                  </Table>\n              </div>\n             ) : (\n               <div className=\"layoutSearch\">\n                     <div className=\"bottomBar\">\n                       <div onClick={this.props.backToSearch}className=\"backLabel\">\n                           <div style={{ height: \"50%\",fontSize: \"100%\", padding: \"1% 0\"}}>{\"<- Go Back to Search\"}</div>\n                       </div>\n                       <div className=\"corLabel\">\n                           <div style={{height: \"50%\", fontSize: \"120%\", padding: \"1% 0\"}}>{corLabel}</div>\n                       </div>\n                     </div>\n                     <SearchDisplayTab count=\"0\" type='Research' arr={this.shuffleArray(researchArr)}/>\n                     <SearchDisplayTab count=\"1\" type='Tutorials' arr={this.shuffleArray(tutorialsArr)}/>\n                     <SearchDisplayTab count=\"2\" type='Aesthetics' arr={this.shuffleArray(aestheticsArr)}/>\n                     <SearchDisplayTab count=\"3\" type='Concepts' arr={this.shuffleArray(conceptsArr)}/>\n                    <SearchDisplayTab count=\"4\" type='Patents' arr={this.shuffleArray(patentsArr)}/>\n\n             </div>)}\n             </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        allData: state.searchData,\n        names: state.names,\n        params: state.params,\n\n        filter: state.filter,\n        minYear: state.minYear,\n        maxYear: state.maxYear,\n        venue: state.venueFilter,\n        source: state.sourceFilter,\n\n        listView: state.listView,\n\n        searchDisplay: state.searchTermDisplay,\n        searchQuery: state.searchTermQuery,\n\n        viewBookmarks: state.viewBookmarks,\n        bookMarks: state.bookMarks,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        filteredArrayUpdate: (value) => dispatch({type: actionTypes.STORE_FILTERED_ARRAY, val: value}),\n\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplay);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CardImg, CardBody,\n CardSubtitle } from 'reactstrap';\n\nimport './searchDisplay.css'\n\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\nimport { Table } from 'reactstrap';\n\nclass ListDisplayTab extends Component {\n\n  render() {\n\n    let inp = '';\n    let i = 1;\n    inp = this.props.arr.map((input) => {\n\n      return (\n        <tr>\n          <th scope=\"row\">{i++}</th>\n          <td>{input[\"Reference Name\"]}</td>\n          <td><a  href={input[\"Reference Link\"]}>{input[\"Reference Link\"]}</a></td>\n        </tr>\n    )});\n\n    return (\n      <div>\n      <h3>{this.props.type}</h3>\n      <Table dark>\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Title</th>\n          <th>Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        {inp}\n      </tbody>\n    </Table>\n    </div>\n    )\n  }\n}\n\n\nexport default ListDisplayTab;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './bodyZones.css'\nimport * as actionTypes from '../store/actions';\nimport ImageMapper from 'react-image-mapper';\n\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\nclass ColCharts extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n\n        };\n  }\n\n  render() {\n\n    const label = this.props.label;\n\n    /*\n      I have search data and I have a label\n    */\n\n    let curList = [];\n    let data = [];\n    if(this.props.label === 'Function') {\n          curList = this.props.function;\n\n\n          curList = curList.map((subType) => {\n\n          let temp = this.props.searchData.filter((item) => {\n\n            return (item[\"Function 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n            || item[\"Function 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n            || item[\"Function 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\n          });\n\n          return {name: subType, Results: temp.length}\n        });\n\n\n    data = curList;\n    }\n\n    else if(this.props.label === 'Fabrication') {\n\n      curList = this.props.fabrication;\n\n\n      curList = curList.map((subType) => {\n\n      let temp = this.props.searchData.filter((item) => {\n\n        return item[\"Fabrication 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n        || item[\"Fabrication 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n      });\n\n      return {name: subType, Results: temp.length}\n      });\n      data = curList;\n    }\n\n    else {\n\n      curList = this.props.material;\n\n\n      curList = curList.map((subType) => {\n\n      let temp = this.props.searchData.filter((item) => {\n\n        return (item[\"Material 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n        || item[\"Material 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n        || item[\"Material 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\n      });\n\n      return {name: subType, Results: temp.length}\n    });\n\n\n      data = curList;\n    }\n\n\n    let fillColor = \"rgb(172, 216, 206)\";\n\n    if(this.props.label === \"Fabrication\")\n      fillColor = \"rgb(133, 194, 219)\";\n\n    if(this.props.label === \"Material\")\n      fillColor = \"rgb(254, 205, 102)\";\n\n    let w = window.innerWidth / 1280;\n    let h = window.innerHeight / 610;\n    return (\n      <div style={{width: \"50%\", display: \"flex\"}}>\n\n      <div style={{color: fillColor, fontWeight: \"bold\"}}>{this.props.label}</div>\n      <div style={{transform: \"translateX(-30px)\"}}>\n            <BarChart width={550 * w} height={240 * h} data={data}\n                margin={{top: 5 * h, right: 30 * w, left: 20 * w, bottom: 5 * h}}>\n\n           <XAxis dataKey=\"name\"/>\n           <YAxis/>\n           <Tooltip cursor={false}/>\n           <Bar style={{fill: fillColor}} dataKey=\"Results\" fill=\"black\" />\n          </BarChart>\n    </div>\n\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchData: state.searchData,\n        function: state.functions,\n        material: state.material,\n        fabrication: state.fabrication,\n    }\n};\n\nexport default connect(mapStateToProps)(ColCharts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './bodyZones.css'\nimport * as actionTypes from '../store/actions';\nimport ImageMapper from 'react-image-mapper';\n\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\nclass BodyChart extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n\n        };\n  }\n\n  render() {\n\n\n    let curList = [];\n    let data = [];\n\n    curList = this.props.bodyZones;\n\n    curList = curList.map((subType) => {\n\n    let temp = this.props.searchData.filter((item) => {\n\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n      || item[\"Body Zone 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n      || item[\"Body Zone 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\n    });\n\n    return {name: subType, value: temp.length}\n  });\n\n    data = curList;\n    let out = {};\n    for(let i = 0; i < data.length; i++) {\n      out[data[i].name] = data[i].value;\n    }\n\n    console.log(out);\n\n\n    let w = window.innerWidth / 1280;\n    let h = window.innerHeight / 610;\n\n    let val = \"translate(\" + 20 * w + \"px, -\" + 30 * h + \"px)\"\n\n    return (\n      <div style={{width: \"50%\", display: \"flex\"}}>\n          <div style={{color:\"rgb(239,122,134)\", fontWeight: \"bold\"}}>Body Zones</div>\n          <div style={{transform: val, position: \"relative\"}}>\n              <img src={\"ImageDatabase/Icons/BodyStats.jpg\"}\n               alt=\"\" style={{height: '100%', width: \"55%\", objectFit: \"cover\"}}/>\n               <div style={{position: \"absolute\", top: \"16%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Head\"]}</div>\n               <div style={{position: \"absolute\", top: \"25%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Back\"]}</div>\n               <div style={{position: \"absolute\", top: \"35%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Chest\"]}</div>\n               <div style={{position: \"absolute\", top: \"49%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Pelvic Region\"]}</div>\n               <div style={{position: \"absolute\", bottom: \"2.5%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Feet\"]}</div>\n\n               <div style={{position: \"absolute\", top: \"35%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Arms\"]}</div>\n               <div style={{position: \"absolute\", top: \"48%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Wrist and Hand\"]}</div>\n               <div style={{position: \"absolute\", top: \"72%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Legs\"]}</div>\n\n               <div style={{position: \"absolute\", top: \"50%\", left: \"55%\", color: \"rgb(239,122,134)\", fontSize: 12 * w * h + 'px'}}>{out[\"Full Body\"]}</div>\n\n           </div>\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchData: state.searchData,\n        bodyZones: state.bodyZones,\n    }\n};\n\nexport default connect(mapStateToProps)(BodyChart);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport 'rc-slider/assets/index.css';\nimport './filterBody.css'\nimport Slider from 'rc-slider';\nimport * as actionTypes from '.././store/actions';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\nimport { ButtonDropdown, Progress, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nimport ColCharts from './ColCharts'\nimport BodyChart from './BodyChart'\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { Label } from 'semantic-ui-react'\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = Slider.Range;\n\nclass FilterBody extends Component {\n\n  /*\n    Make the UI changes using reactstrap\n  */\n\n    constructor(props) {\n          super(props);\n          this.toggleAuthor = this.toggleAuthor.bind(this);\n          this.toggleVenue = this.toggleVenue.bind(this);\n          this.state = {\n            dropdownVenueOpen: false,\n            dropdownAuthorOpen: false,\n            venue: 'All',\n            modal: false,\n            showLabels: true,\n            author: 'All',\n            sourceInit: 0,\n            metricsModal: 0,\n          };\n    }\n\n    toggleStats = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n\n      this.props.filterToggle();\n\n    }\n\n    toggleMetrics = () => {\n      this.setState(prevState => ({\n        metricsModal: !prevState.metricsModal\n      }));\n    }\n\n    toggleVenue() {\n\n      this.setState(prevState => ({\n        dropdownVenueOpen: !prevState.dropdownVenueOpen,\n        showLabels: !prevState.showLabels\n      }));\n   }\n\n   toggleAuthor() {\n\n     this.setState(prevState => ({\n       dropdownAuthorOpen: !prevState.dropdownAuthorOpen,\n       showLabels: !prevState.showLabels\n     }));\n  }\n\n     onChange = (value) => {\n\n       console.log(value[1]);\n\n      this.props.filterData();\n      this.props.filterYear(value[0], value[1]);\n    }\n\n    onVenueClick = (value) => {\n\n      let val = value.split(\" (\");\n\n      console.log(val[0]);\n      this.setState({\n        venue: val[0],\n      });\n\n      this.props.filterVenue(val[0]);\n    }\n\n    onAuthorClick = (value) => {\n\n      let val = value.split(\" (\");\n\n      console.log(val[0]);\n      this.setState({\n        author: val[0],\n      });\n\n      this.props.filterAuthor(val[0]);\n    }\n\n    onSourceClick = (value) => {\n\n      let temp = value;\n\n      if(value === 'Engineering') {\n\n        if(this.props.source === 'Engineering')\n          temp = \"Both\"\n        else {\n          temp = \"Engineering\"\n        }\n\n      }\n      else if(value === 'Fashion') {\n\n        if(this.props.source === 'Fashion')\n          temp = \"Both\"\n        else {\n          temp = \"Fashion\"\n        }\n      }\n\n\n\n\n    this.props.filterSource(temp);\n    }\n\n    render() {\n\n      let w = window.innerWidth / 1280;\n      let h = window.innerHeight / 610;\n\n      let searchData = this.props.searchData;\n      let venueArr = []\n      let authorArr = []\n\n      //TODO: Create author array from this.props.searchData\n      for(let i = 0; i < searchData.length; i++) {\n        venueArr.push(searchData[i][\"Conference (VENUE)\"])\n\n        let authors = \"\"\n        if(\"AUTHORS\" in searchData[i]) {\n          authors = searchData[i][\"AUTHORS\"]\n        }\n        let splitAuthors = authors.split(\",\")\n\n        for(let j = 0; j < splitAuthors.length; j++) {\n          authorArr.push(splitAuthors[j].trim())\n        }\n      }\n\n      if(!this.props.mainPage) {\n\n        searchData = this.props.curSearchData\n      }\n      //venueArr = searchData.map((venue) => venue[\"Conference (VENUE)\"]);\n      venueArr.unshift('All')\n      authorArr.unshift('All')\n\n      venueArr = venueArr.map((venue) => {\n\n        if(this.props.mainPage) {\n              if(venue === 'All')\n                  return venue + \" (\" + this.props.searchData.length + \")\";\n\n              let temp = this.props.searchData.filter((item) => item[\"Conference (VENUE)\"].toLowerCase() === venue.toLowerCase());\n\n\n              return venue + \" (\" + temp.length + \")\";\n          }\n          else {\n\n            if(venue === 'All')\n              return venue + \" (\" + this.props.curSearchData.length + \")\";\n            let temp = this.props.curSearchData.filter((item) => item[\"Conference (VENUE)\"].toLowerCase() === venue.toLowerCase());\n\n            return venue + \" (\" + temp.length + \")\";\n          }\n          return venue;\n\n      });\n\n//Author filter\n      authorArr = authorArr.map((author) => {\n\n        if(this.props.mainPage) {\n              if(author === 'All')\n                  return author + \" (\" + this.props.searchData.length + \")\";\n\n              let authorArticles = this.props.searchData.filter((item) => {\n                let authors = \"\"\n                if(\"AUTHORS\" in item) {\n                  authors = item[\"AUTHORS\"]\n                }\n                authors.toLowerCase().includes(author.toLowerCase())\n              });\n\n\n              return author + \" (\" + authorArticles.length + \")\";\n          }\n          else {\n\n            if(author === 'All')\n              return author + \" (\" + this.props.curSearchData.length + \")\";\n            let authorArticles = this.props.curSearchData.filter((item) => {\n              let authors = \"\"\n              if(\"AUTHORS\" in item) {\n                authors = item[\"AUTHORS\"]\n              }\n              authors.toLowerCase().includes(author.toLowerCase())\n            });\n\n            return author + \" (\" + authorArticles.length + \")\";\n          }\n      });\n\n      let myData = this.props.searchData;\n\n      if(!this.props.mainPage) {\n        myData = this.props.curSearchData\n      }\n      let filterEngineering = myData.filter((item) => {\n        return (item[\"Source\"] === \"Engineering\" || item[\"Source\"] === \"Both\")\n      });\n\n      let filterFashion = myData.filter((item) => {\n        return (item[\"Source\"] === \"Fashion\" || item[\"Source\"] === \"Both\")\n      });\n\n      let engLength = filterEngineering.length;\n      let fashLength = filterFashion.length;\n\n      engLength = engLength * 100 / (engLength + fashLength);\n      fashLength = 100 - engLength;\n\n      venueArr = [...new Set(venueArr)];\n\n      venueArr = venueArr.map((venue) => {\n        return (\n          <DropdownItem onClick={() => this.onVenueClick(venue)}>{venue}</DropdownItem>\n        )\n      });\n\n      authorArr = [...new Set(authorArr)];\n\n      authorArr = authorArr.map((author) => {\n        return (\n          <DropdownItem onClick={() => this.onAuthorClick(author)}>{author}</DropdownItem>\n        )\n      });\n\n      const style = { width: 400 * w, margin: 50 * w};\n\n      const dataPie = [\n          {value: 25, color: \"black\", title: \"Function\"},\n          {value: 50, color: \"red\", title: \"BodyZones\"},\n          {value: 30, color: \"green\", title: \"Material\"},\n          {value: 20, color: \"blue\", title: \"Fabrication\"},\n      ]\n\n\n      let yearData = [];\n\n      for(let i = 1990; i <= 2019; i++) {\n\n        let temp = myData.filter((item) => {\n\n          return item[\"Year\"] === i.toString();\n        })\n\n        yearData = [\n            ...yearData,\n            {\n              name: i.toString(),\n              Projects: temp.length,\n            }\n        ];\n      }\n\n        const closeBtn = <Button onClick={this.toggleStats} color=\"secondary\">{\"Close (X)\"}</Button>\n        const closeBtnMetrics = <Button onClick={this.toggleMetrics} color=\"secondary\">{\"Close (X)\"}</Button>\n      return (\n          <div>\n              <div style={{ marginTop: \"1%\", fontSize: \"120%\"}}>Time Frame</div>\n              <BarChart width={260 * w} height={150 * h} data={yearData}\n                  margin={{top: 5 * h, left: 0, bottom: 0}}>\n                  <XAxis dataKey=\"name\" hide={true}/>\n                  <Tooltip cursor={false}/>\n                  <Bar dataKey=\"Projects\" />\n             </BarChart>\n\n              <Range handleStyle={[{ backgroundColor: 'black'}, {backgroundColor: 'black' }]} trackStyle={[{ backgroundColor: 'grey', height: 6 * h + \"px\"}]}\n              allowCross={false}  railStyle={{ backgroundColor: 'black' }} min={1990} max={2019} defaultValue={[this.props.minYear, this.props.maxYear]} onChange={(value) => this.onChange(value)} />\n              <div>{this.props.minYear}<span style={{float: \"right\"}}>{this.props.maxYear}</span></div>\n\n              <div style={{ marginTop: \"1%\", fontSize: \"120%\"}}>Publication Venue</div>\n              <ButtonDropdown style={{width:\"100%\", height: 20 * h + 'px'}} isOpen={this.state.dropdownVenueOpen} toggle={this.toggleVenue}>\n                      <DropdownToggle style={{backgroundColor: \"white\", color: \"black\"}} caret>\n                        <div style={{ transform: \"translateY(-25%)\"}}>{this.state.venue}</div>\n                      </DropdownToggle>\n                      <DropdownMenu className=\"dropdownStyle\" style={{width:\"100%\", overflowY:\"scroll\", height: window.innerHeight * 0.4}}>\n                        {venueArr}\n                      </DropdownMenu>\n              </ButtonDropdown>\n\n              <div style={{ marginTop: \"1%\", fontSize: \"120%\"}}>Authors</div>\n              <ButtonDropdown style={{width:\"100%\", height: 20 * h + 'px'}} isOpen={this.state.dropdownAuthorOpen} toggle={this.toggleAuthor}>\n                      <DropdownToggle style={{backgroundColor: \"white\", color: \"black\"}} caret>\n                        <div style={{ transform: \"translateY(-25%)\"}}>{this.state.author}</div>\n                      </DropdownToggle>\n                      <DropdownMenu className=\"dropdownStyle\" style={{width:\"100%\", overflowY:\"scroll\", height: window.innerHeight * 0.4}}>\n                        {authorArr}\n                      </DropdownMenu>\n              </ButtonDropdown>\n\n\n              {/*<div style={{ marginTop: \"4%\", fontSize: \"120%\"}}>Filter by:</div>\n              <div style={{marginTop: \"2%\"}}>\n              {(this.props.source === 'HCI') ? (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelector\" onClick={() => this.onSourceClick(\"HCI\")}>HCI</Button>)\n                  : (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"HCI\")}>HCI</Button>)}\n\n                {(this.props.source === 'Fashion') ? (<Button className=\"btnSelector\" style={{float: \"right\", width: \"40%\", transform: \"translateX(-20%)\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)\n                 : (<Button className=\"btnSelectorClicked\" style={{float: \"right\", width: \"40%\", transform: \"translateX(-20%)\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)}\n              </div>\n              <div style={{marginTop: \"2%\"}}>\n\n                {(this.props.source === 'Technology') ? (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelector\" onClick={() => this.onSourceClick(\"Technology\")}>Technology</Button>)\n                  : (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"Engineering\")}>Technology</Button>)}\n              </div>\n              <div style={{textAlign: \"center\"}}>\n                  {(this.props.source === 'HCI') ? (<div>HCI</div>) : (this.props.source === 'Technology') ? (<div>Technology</div>)\n                   : ((this.props.source === \"Fashion\") ? (<div>Fashion</div>) : (<div>HCI + Fashion + Technology</div>))}\n      </div>*/}\n              {/*<div style={{ marginTop: \"3%\", fontSize: \"120%\"}}>\n                % Contribution\n      </div>*/}\n              {/*<div style={{marginTop: '3%'}}>\n                {(this.state.showLabels) ? (<><Label style={{transform: \"translateY(4px)\", backgroundColor: \"#f98686\"}} key=\"Orange\" />{' '}<span>Engineering</span>{' '}\n                <Label style={{transform: \"translateY(4px)\"}} color=\"red\" key=\"red\" />{' '}<span>Fashion</span>{' '}</>) : (<div style={{height: \"2vh\"}}>Placeholder</div>)}\n\n                  <br />\n                  <div>\n                  <br />\n                  <Progress multi>\n                    <Progress className=\"engStyle\" bar value={engLength} />\n                    <Progress bar color=\"danger\" value={fashLength} />\n                  </Progress>\n    </div>\n    </div>*/}\n\n              <div style={{marginTop: \"8%\", marginLeft: \"20%\"}}>\n                <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleDisplay}>{(this.props.listView) ? (\"View Results in Original Form\") : (\"View Results in List Form\")}</Button>{' '}\n              </div>\n\n              {(this.props.loggedIn) ? (<div style={{marginTop: \"5%\", marginLeft: \"20%\"}}>\n                <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleBookmarks}>{(this.props.viewBookmarks) ? (\"View all Results\") : (\"View Pinned/Bookmarks\")}</Button>{' '}\n              </div>) : (<div/>)}\n\n              <div style={{marginTop: \"5%\", marginLeft: \"20%\", zIndex: \"2500 !important\"}}>\n\n\n                      <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleStats}>Database Statistics</Button>\n\n                      <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal} toggle={this.toggle}>\n                        <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\"}} toggle={this.toggleStats}>Database Statistics</ModalHeader>\n\n                        <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\"}}>\n\n                            <div style={{display: \"flex\", height: \"49%\"}}>\n                               <ColCharts label=\"Function\" />\n                               <ColCharts label=\"Material\" />\n                            </div>\n\n                            <div style={{display: \"flex\",height: \"49%\", marginTop: \"2%\"}}>\n                               <ColCharts label=\"Fabrication\" />\n                               <BodyChart />\n                            </div>\n\n                        </ModalBody>\n\n                      </Modal>\n           </div>\n\n           <div style={{marginTop: \"5%\", marginLeft: \"20%\"}}>\n\n\n                  {/*} <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleMetrics}>Metrics Description</Button>*/}\n\n                   <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.metricsModal}>\n                     <ModalHeader close={closeBtnMetrics} style={{backgroundColor: \"black\", color: \"white\"}}>Metrics Description</ModalHeader>\n\n                     <ModalBody style={{backgroundColor: \"black\", overflowY: \"scroll\"}}>\n\n                        <div>\n\n\n                              <div style={{marginTop: \"2.5%\"}}>\n                                <div style={{ textAlign: \"center\", color: \"white\", padding: \"1% 20% 1% 20%\"}}>\n                                    <h5 style={{}}>Cost Metric</h5>\n                                    <p>To generate the cost rating system of the CHIMERA resources, we made classify the categories Fabrication and Material according to the cost of each one using USA costs as references. This analysis generates a 3 level ranking expressed by symbols on the interface ($ - $$ - $$$). This provides the user a matric that allow to compare between resources in terms of cost of implementation.</p>\n\n                                    <p>\n\n                                    The elements of each main category were classified from low to high cost, and then grouped in three common groups of price level. We applied a scale of 1-3-9 being 1 the lowest cost representation and 9 the highest. Then we grade each of the resources on the database according to what elements in Fabrication and materials uses. Then these values are combined when the user makes the correlations on the interface. This correlation generates another three level ranking of the cost that results in the selection of the corresponding symbol of $, $$, or $$$ presented on the low right corner of each work included in CHIMERA’s results page. In case a project presents multiple fabrication steps or multiple materials, the system selects the one with the highest value in the list and proceeds to generate the comparisons.\n                                    </p>\n\n                                    <div>\n                                          COST LEVEL: Highest Fabrication Value + Highest Material value\n                                    </div>\n\n\n                                    </div>\n\n                                <img src={\"ImageDatabase/Icons/Metrics2.jpg\"}\n                                 alt=\"\" style={{width: '90%', height: \"60%\", marginLeft: \"5%\", objectFit: \"cover\"}}/>\n                               </div>\n\n                               <div style={{marginTop: \"-25%\", color: \"white\", textAlign: \"center\", padding: \"1% 20% 1% 20%\"}}>\n                                     <div style={{marginTop: \"5%\", color: \"white\"}}><h4>Wearability Metric</h4></div>\n\n                                     <div>\n                                       <p>The metrics used to evaluate the physical wearability of the current work in wearable devices was developed by a combination of criteria. Six principles categories for grading were evaluated for each one of the works included in the interface, which represent basic components and principles of what conforms a wearable device. This principle answer questions of How does the wearable attaches to the body? What is the maintenance level required? What is the impact in body movement and in regular activities? What is the level of integration of the elements in the garment/device? In which contexts the wearable is useful? and What is the level of Aesthetics considered (Aesthetics vs Functionality)?\n                                       </p>\n\n                                     <p>By analyzing each work, we generate the evaluation ranking for wearability. This ranking will add all the points given in each one of the six categories and categorize in five defined groups described in Figure 1.</p>\n                                     </div>\n                                     <img src={\"ImageDatabase/Icons/Metrics4.jpg\"}\n                                      alt=\"\" style={{width: '60%', height: \"60%\", marginTop: \"2%\", objectFit: \"cover\"}}/>\n\n                                      <div style={{marginTop: \"-7.5%\"}}>\n                                      <p>Each principle considered grading is shown in the tables below.\n                                       This grading system helps to differentiate between selections, generate groups, and avoid the tendency to grade most of the elements around a\n                                        mean point. This type of scale is used in design process to define priorities of the elements in a particular design.</p>\n\n                                        <p>This ranking will help the user analyze the presented work before accessing the information. The Higher in the scale the more optimal to wear it is. Depending on the users’ needs this information can help filter and identify desired requirements.</p>\n\n                                        <div>The following table shows an example on how the metric is calculated for each resource.</div>\n                                      </div>\n                                     <img src={\"ImageDatabase/Icons/Metrics1.jpg\"}\n                                      alt=\"\" style={{width: '80%', height: \"60%\",  marginTop: \"2.5%\", marginLeft: '5%', objectFit: \"cover\"}}/>\n\n                                      <div style={{marginTop: \"-7.5%\"}}>Points assigned for each category to calculate Wearability: </div>\n                                       <img src={\"ImageDatabase/Icons/Metrics3.jpg\"}\n                                        alt=\"\" style={{width: '80%', height: \"60%\", marginTop: \"0%\", marginLeft: '5%', objectFit: \"cover\"}}/>\n\n                              </div>\n\n                              <div style={{ textAlign: \"center\", color: \"white\", padding: \"1% 20% 1% 20%\"}}>\n                                  <h5 style={{}}>Implementation Metric</h5>\n                                  <p>This metric compares resources in terms of how complex and time-consuming their Fabrication and Functionality are. Each resource is allocated two main Fabrication methods, and three main Function methods. Both category elements were ranked from lower to\n                                   higher complexity and grouped using the 1-3-9 scale (similar to the Cost metric) [18]. Using this scale, the Fabrication values were added together and the result multiplied by the highest-ranked value in the Function category. The resulting Implementation\n                                    Complexity level is displayed using a traffic light metaphor with the colors green, yellow, and red, where green means a short or relatively straightforward predicted implementation, and red a high predicted implementation in terms of complexity and time.\n                                     There are a number of exceptions to this metric where the rating of the implementation time cannot be calculated due to the nature of the source. Examples include design patents (i.e. drawings of a design with no material, fabrication or function specification), design concepts that have not yet been implemented and behavioral research (i.e. studies on how people use or interact with wearables). These exceptions are displayed as white blocks with an X in the center.</p>\n\n                             </div>\n\n\n                        </div>\n\n                     </ModalBody>\n\n                   </Modal>\n        </div>\n\n           <div>\n               <img className=\"homeButton\" src={\"ImageDatabase/Icons/Home.png\"}\n                alt=\"\" style={{width: '50%', marginLeft: \"25%\", marginTop: \"5%\", objectFit: \"cover\"}}/>\n           </div>\n\n          </div>\n        );\n    }\n\n\n    toggleDisplay = () => {\n\n      this.props.toggleDisplay();\n    }\n\n    toggleBookmarks = () => {\n\n      this.props.toggleBookmarks();\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        filterData: () => dispatch({type: actionTypes.FILTER_DATA}),\n        filterYear: (minYear, maxYear) => dispatch({type: actionTypes.FILTER_YEAR, minYear: minYear, maxYear: maxYear}),\n        filterVenue: (venue) => dispatch({type: actionTypes.FILTER_VENUE, val: venue}),\n        filterAuthor: (author) => dispatch({type: actionTypes.FILTER_AUTHOR, val: author}),\n        filterSource: (source) => dispatch({type: actionTypes.FILTER_SOURCE, val: source}),\n        toggleDisplay: () => dispatch({type: actionTypes.TOGGLE_DISPLAY}),\n        toggleBookmarks: () =>  dispatch({type: actionTypes.VIEW_BOOKMARKS}),\n\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n\n        filter: state.filter,\n        minYear: state.minYear,\n        maxYear: state.maxYear,\n        venue: state.venueFilter,\n        source: state.sourceFilter,\n        searchData: state.searchData,\n        listView: state.listView,\n        viewBookmarks: state.viewBookmarks,\n\n        loggedIn: state.isLoggedIn,\n\n        curSearchData: state.currentFilteredArray,\n\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './filterBody.css'\n\nimport { Button, UncontrolledPopover, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nimport FilterBody from './FilterBody';\nimport * as actionTypes from '../store/actions';\n\nclass FilterPane extends Component {\n\n  /*\n    Make a boolean in store, whether results to be displayed are from searchQuery\n    Store the search query itself\n\n    Define an action to store search query\n  */\n\n\n  constructor(props) {\n      super(props);\n\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        value: '',\n        popoverOpen: false,\n        visibility: 'visible',\n      };\n    }\n\n    toggleVisibility = () => {\n      if(this.state.visibility === 'visible') {\n        this.setState({\n          visibility: 'hidden',\n        });\n      }\n      else {\n        this.setState({\n          visibility: 'visible',\n        });\n      }\n\n      console.log(this.state.visibility);\n    }\n\n    toggle() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n    }\n\n    handleChange = (event) => {\n       this.setState({value: event.target.value});\n     }\n\n   handleSubmit = (event) => {\n\n     this.props.toggleDisplay();\n     this.props.searchTermDisplayUpdate();\n     this.props.searchTermQueryUpdate(this.state.value);\n\n     this.setState({value: ''});\n     event.preventDefault();\n\n   }\n\n   toggleHome = () => {\n\n     this.props.toggleBack();\n\n     if(this.props.move)\n      this.props.toggleMainDisplay();\n     this.props.logout();\n  }\n\n    render() {\n\n      let val = 'translate(0, 100%)';\n      let popVal = 'translate(0%, 0%)'\n\n\n      if(this.state.popoverOpen){\n        popVal = 'translate(-1275%, 0%)';\n      }\n      let w = window.innerWidth * 0.22\n      let h = window.innerHeight * 0.98;\n\n      return (\n\n      <div className={(this.props.move) ? ((!this.props.listView) ? (\"filterTabMove\") : (\"filterTabExtra\")) : (\"filterTab\")}>\n\n          <div style={{display: \"flex\"}}>\n\n              {<div className=\"searchBar\">\n              <form onSubmit={this.handleSubmit} id=\"demo-2\">\n                <input type=\"search\" placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\n              </form>\n      </div>}\n\n              <div>\n                  <img onClick={this.toggleHome} className=\"homeButton\" src={\"ImageDatabase/Icons/MiniHome.png\"}\n                   alt=\"\" style={{width: '2vw', transform: \"translate(20%, 40%)\", objectFit: \"cover\"}}/>\n              </div>\n            </div>\n\n          <div style={{height: \"25%\"}}>\n                  <div style={{transform: val, height: \"100%\", zIndex: \"999\"}}>\n                      <div className=\"rotate6\" style={{ border:\"2px solid white\", transform:  popVal}} id={'PopoverFilter'}>\n\n                          <div className=\"rotate9\">\n                          <div style={{width: \"450%\", transform: \"translateX(-57.5%)\"}}>\n                              DATA<text className=\"hackText\"> _</text>FILTER\n                          </div>\n                          </div>\n                      </div>\n                  </div>\n\n\n                   <UncontrolledPopover hideArrow={true} trigger=\"legacy\" style={{width: w, maxWidth: w, height: h, maxHeight: h + \" !important\", color: \"black\", overflowY: \"scroll\", backgroundColor: \"black\", zIndex: \"10\"}} placement=\"right\" isOpen={this.state.popoverOpen} target={'PopoverFilter'} toggle={this.toggle}>\n                     <PopoverHeader style={{fontSize: \"150%\", width: \"100%\", height: \"5%\", backgroundColor: \"black\", padding: \"0 0\", color: \"white\"}}><div style={{marginLeft: \"3%\", marginTop: \"2%\"}}>Data Filter</div></PopoverHeader>\n                     <PopoverBody style={{color: \"black\", width: \"100%\", height: \"95%\", fontWeight: \"500\", padding: \"0 .6rem\", backgroundColor: \"black\", color: \"white\"}}><FilterBody filterToggle={this.toggleVisibility} showLoop={this.props.showLoop} mainPage={this.props.mainPage}/></PopoverBody>\n                   </UncontrolledPopover>\n            </div>\n\n            {(this.props.showView) ? (<div style={{ marginTop: \"380%\", color: \"white\"}}>\n                Views: {this.props.viewCount}\n            </div>) : (<></>)}\n\n        </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        searchTermDisplayUpdate: () => dispatch({type: actionTypes.SEARCH_TERM_DISPLAY}),\n        searchTermQueryUpdate: (value) => dispatch({type: actionTypes.SEARCH_TERM_QUERY, val: value}),\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\n\n        logout: () => dispatch({type: actionTypes.AUTH_FAILURE}),\n    }\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        listView: state.listView,\n        viewCount: state.viewCount,\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPane);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './bodyZones.css'\nimport * as actionTypes from '../store/actions';\nimport ImageMapper from 'react-image-mapper';\nimport ContributePage from './ContributePage';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Tabletop from 'tabletop';\n\nconst SHEET_ID = '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc';\nconst ACCESS_TOKEN = 'AIzaSyBhtelk0uYpfhyFPHF6VRx9_V7AgFHTsNk';\nclass BodyZones extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n          zone: 'none',\n          modal: false,\n          modal2: false,\n          modal3: false,\n          nameitems: [],\n        };\n  }\n\n  componentDidMount() {\n\n    \n    \n\n\n\n}\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  toggle2 = () => {\n    this.setState(prevState => ({\n      modal2: !prevState.modal2\n    }));\n  }\n  toggle3 = () => {\n    this.setState(prevState => ({\n      modal3: !prevState.modal3\n    }));\n  }\n  componentWillMount = props => {\n    this.clickTimeout = null\n  }\n\n  handleClicks = (area) => {\n    if (this.clickTimeout !== null) {\n      this.doubleClicked(\"Full Body\")\n      clearTimeout(this.clickTimeout)\n      this.clickTimeout = null\n    } else {\n\n      this.clickTimeout = setTimeout(()=>{\n      this.clicked(area)\n      clearTimeout(this.clickTimeout)\n        this.clickTimeout = null\n      }, 225)\n    }\n  }\n\n  doubleClicked = (area) => {\n\n    this.setState({\n      zone: area\n    });\n\n    this.props.onSelectBodyZones(area);\n  }\n\n  clicked = (area) => {\n\n    if(this.state.name === 'none') {\n\n      this.setState({\n        zone: area.name\n      });\n\n      this.props.onSelectBodyZones(area.name);\n    }\n\n    else {\n\n      if(area.name != this.state.zone) {\n\n        this.setState({\n          zone: area.name\n        });\n\n        this.props.onSelectBodyZones(area.name);\n      }\n\n      else {\n        this.setState({\n          zone: 'none'\n        });\n\n          this.props.onSelectBodyZones('');\n      }\n   }\n\t}\n\n    render() {\n      const namefinalitems = [];\n\n      let sheet1Data = this.props.searchData\n      let names = [];\n      for(let i = 0; i < sheet1Data.length; i++) {\n        names.push(\"<h4>&nbsp;&nbsp;&nbsp;&nbsp;\"+sheet1Data[i][\"Reference Name\"] +\"</h4>\"+ \"<h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\n        + sheet1Data[i][\"AUTHORS\"] + \"</h6>\")\n      }\n\n      let img = \"ImageDatabase/HumanBody/Androgynous.png\";\n      \n      for (const [index, value] of names.entries()) {\n        namefinalitems.push(<li style={{padding: \"5px 5px\"}} key={index}><span dangerouslySetInnerHTML={{__html:value}}></span></li>)\n      }\n      if(this.state.zone === 'Full Body')\n        img = \"ImageDatabase/HumanBody/Androgynous_fullbody.png\";\n\n      else if(this.state.zone === 'Head')\n        img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\n\n      else if(this.state.zone === 'Chest')\n        img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\n\n      else if(this.state.zone === 'Back')\n        img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\n\n      else if(this.state.zone === 'Pelvic Region')\n        img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\n\n      else if(this.state.zone === 'Legs')\n        img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\n\n      else if(this.state.zone === 'Feet')\n        img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\n\n      else if(this.state.zone === 'Arms')\n        img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\n\n      else if(this.state.zone === 'Wrist and Hand')\n        img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\n\n\n\n        let w = window.innerWidth / 1280\n        let h = window.innerHeight / 610\n\n\n      let myMap = {\n          name: \"my-map\",\n          areas: [\n          {name: \"Head\", shape: \"rect\", coords: [93 * w, 0 * h, 140 * w, 57 * h], fillColor: \"transparent\"},\n          {name: \"Chest\", shape: \"rect\", coords: [83 * w, 60 * h, 120 * w, 180 * h], fillColor: \"transparent\"},\n          {name: \"Back\", shape: \"rect\", coords: [120 * w, 60 * h, 152 * w, 180 * h], fillColor: \"transparent\"},\n          {name: \"Pelvic Region\", shape: \"rect\", coords: [73 * w, 168 * h, 153 * w, 214 * h], fillColor: \"transparent\"},\n          {name: \"Legs\", shape: \"rect\", coords: [73 * w, 214 * h, 153 * w, 368 * h], fillColor: \"transparent\"},\n          {name: \"Feet\", shape: \"rect\", coords: [58 * w, 368 * h, 165 * w, 400 * h], fillColor: \"transparent\"},\n\n          {name: \"Arms\", shape: \"rect\", coords: [43 * w, 67 * h, 83 * w, 174 * h], fillColor: \"transparent\"},\n          {name: \"Arms\", shape: \"rect\", coords: [152 * w, 67 * h, 185 * w, 170 * h], fillColor: \"transparent\"},\n\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [28 * w, 174 * h, 63 * w, 215 * h], fillColor: \"transparent\"},\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [165 * w, 174 * h, 206 * w, 215 * h], fillColor: \"transparent\"}\n          ]\n      }\n\n            return (\n             <div className=\"container\">\n                \n                \n                 <div style={{transform: \"translate(0%, 8%)\"}}>\n                       <ImageMapper strokeColor=\"transparent\" src={img} map={myMap} width={265 * w} height={400 * h}\n                        \tonClick={area => this.handleClicks(area)}\n                        />\n                        <div style={{marginTop: \"10%\", transform: \"translateX(-3%)\", color: \"white\", fontWeight: \"600\", fontSize: \"small\"}}>\n                            <div>CLICK TO SELECT</div>\n                            <div>BODY ZONES</div>\n                            <div style={{ fontSize: \"smaller\"}}><b>(</b>DOUBLE CLICK FOR</div>\n                            <div style={{ fontSize: \"smaller\"}}>FULL BODY SELECTION<b>)</b></div>\n                        </div>\n                  </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n      searchData: state.searchData,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyZones);\n","import React, { Component } from 'react';\nimport SkyLight from 'react-skylight';\nimport { connect } from 'react-redux';\nimport './HomePage.css'\nimport * as actionTypes from '../store/actions';\nimport {Alert} from 'reactstrap';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport GoogleLogin from 'react-google-login';\nimport tutorial from '../ImageDatabase/tutorial.mp4';\n\nclass HomePage extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n          zone: 'none',\n          signUpEmail: '',\n          signUpUsername: '',\n          signUpPassword: '',\n          signUpWarning: '',\n          loginUsername: '',\n          loginPassword: '',\n          loginWarning: '',\n          modal: false\n        };\n\n      this.onSignUpEmailChange = this.onSignUpEmailChange.bind(this);\n      this.onSignUpUsernameChange = this.onSignUpUsernameChange.bind(this);\n      this.onSignUpPasswordChange = this.onSignUpPasswordChange.bind(this);\n      this.onSignUpWarningChange = this.onSignUpWarningChange.bind(this);\n\n      this.onLoginUsernameChange = this.onLoginUsernameChange.bind(this);\n      this.onLoginPasswordChange = this.onLoginPasswordChange.bind(this);\n      this.onLoginWarningChange = this.onLoginWarningChange.bind(this);\n\n      this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\n      this.onLoginSubmit = this.onLoginSubmit.bind(this);\n\n      this.onGoogleLoginSubmit = this.onGoogleLoginSubmit.bind(this);\n      this.onGoogleSignUpSubmit = this.onGoogleSignUpSubmit.bind(this);\n  }\n\n    toggle = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    }\n\n    onSignUpWarningChange = (event) => {\n\n      this.setState({\n        signUpWarning: 'Invalid credentials',\n      });\n    }\n\n    onLoginWarningChange = (event) => {\n\n      this.setState({\n        loginWarning: 'Invalid credentials',\n      });\n    }\n\n    onSignUpUsernameChange = (event) => {\n\n      this.setState({\n        signUpUsername: event.target.value,\n      });\n    }\n\n    onLoginUsernameChange = (event) => {\n\n      this.setState({\n        loginUsername: event.target.value,\n      });\n    }\n\n\n    onSignUpEmailChange = (event) => {\n\n\n      this.setState({\n        signUpEmail: event.target.value,\n      });\n    }\n\n    onSignUpPasswordChange = (event) => {\n\n      this.setState({\n        signUpPassword: event.target.value,\n      });\n    }\n\n    onLoginPasswordChange = (event) => {\n\n      this.setState({\n        loginPassword: event.target.value,\n      });\n    }\n\n    onGoogleLoginSubmit = (username, password, email) => {\n\n      let success = true;\n      let bookMarks = [];\n\n      let authSuccess = this.props.authSuccess;\n      let toggleDisp = this.props.toggle;\n\n      let onLoginWarningChange = this.onLoginWarningChange;\n\n      let onGoogleSignUpSubmit = this.onGoogleSignUpSubmit;\n\n      let jsonToSend = JSON.stringify({\n           username: username,\n           password: password\n       })\n\n       let pwd = password;\n\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\n             method: 'POST',\n             headers: {\n               'Content-Type': 'application/json',\n             },\n             body: jsonToSend\n           });\n       fetch(request).then(function(response){\n\n          if(response.status.toString() === '200') {\n             response.text().then(function(text) {\n\n                 var objReceived = JSON.parse(text);\n                 if (objReceived.message === 'SUCCESS') {\n\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                    toggleDisp();\n                 }\n                 else {\n\n                     onGoogleSignUpSubmit(username, email, password);\n\n\n                 }\n             })\n           }\n\n           else {\n             onGoogleSignUpSubmit(username, email, password);\n           }\n       })\n\n    }\n\n    onLoginSubmit = () => {\n\n      let success = true;\n      let bookMarks = [];\n\n      let authSuccess = this.props.authSuccess;\n      let toggleDisp = this.props.toggle;\n\n      let onLoginWarningChange = this.onLoginWarningChange;\n\n      let jsonToSend = JSON.stringify({\n           username: this.state.loginUsername,\n           password: this.state.loginPassword\n       })\n\n       let pwd = this.state.loginPassword;\n\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\n             method: 'POST',\n             headers: {\n               'Content-Type': 'application/json',\n             },\n             body: jsonToSend\n           });\n       fetch(request).then(function(response){\n\n          if(response.status.toString() === '200') {\n             response.text().then(function(text) {\n\n                 var objReceived = JSON.parse(text);\n                 if (objReceived.message === 'SUCCESS') {\n\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                    toggleDisp();\n                 }\n                 else {\n\n                     onLoginWarningChange();\n\n                 }\n             })\n           }\n\n           else {\n             onLoginWarningChange();\n           }\n       })\n\n    }\n\n\n  responseGoogle = (response) => {\n   console.log(response);\n\n   this.onGoogleLoginSubmit(response.profileObj.name,response.profileObj.name,response.profileObj.email);\n\n   /*\n    If successful, use the username to login with same password, if login fails, try signup with that username password\n   */\n  }\n\n  responseGoogleError = (response) => {\n   console.log(\"error\");\n  }\n\n  onGoogleSignUpSubmit = (username, email, password) => {\n\n    let success = true;\n    let bookMarks = [];\n\n    let authSuccess = this.props.authSuccess;\n    let toggleDisp = this.props.toggle;\n\n    let onSignUpWarningChange = this.onSignUpWarningChange;\n\n    let pwd = password;\n\n    let jsonToSend = JSON.stringify({\n         username: username,\n         email: email,\n         password: password\n     })\n\n     var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\n           method: 'POST',\n           headers: {\n             'Content-Type': 'application/json',\n           },\n           body: jsonToSend\n         });\n     fetch(request).then(function(response){\n\n        if(response.status.toString() === '200') {\n           response.text().then(function(text) {\n\n               var objReceived = JSON.parse(text);\n               if (objReceived.message === 'SUCCESS') {\n\n                  console.log(objReceived);\n                  authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                  toggleDisp();\n               }\n               else {\n\n                   onSignUpWarningChange();\n\n               }\n           })\n         }\n\n         else {\n           onSignUpWarningChange();\n         }\n     })\n  }\n\n    onSignUpSubmit = () => {\n\n      let success = true;\n      let bookMarks = [];\n\n      let authSuccess = this.props.authSuccess;\n      let toggleDisp = this.props.toggle;\n\n      let onSignUpWarningChange = this.onSignUpWarningChange;\n\n      let pwd = this.state.signUpPassword;\n\n      let jsonToSend = JSON.stringify({\n           username: this.state.signUpUsername,\n           email: this.state.signUpEmail,\n           password: this.state.signUpPassword\n       })\n\n       var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\n             method: 'POST',\n             headers: {\n               'Content-Type': 'application/json',\n             },\n             body: jsonToSend\n           });\n       fetch(request).then(function(response){\n\n          if(response.status.toString() === '200') {\n             response.text().then(function(text) {\n\n                 var objReceived = JSON.parse(text);\n                 if (objReceived.message === 'SUCCESS') {\n\n                    console.log(objReceived);\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                    toggleDisp();\n                 }\n                 else {\n\n                     onSignUpWarningChange();\n\n                 }\n             })\n           }\n\n           else {\n             onSignUpWarningChange();\n           }\n       })\n    }\n    \n\n    render() {\n\n      const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\n      \n      /*\n        Make sign up warning and login warning in store and if success, call searchDisplay or toggleSearchDisplay.\n        Whateva\n      */\n\n\n\n      return (\n\n      <div style={{height: \"100vh\", width:\"100vw\", backgroundSize: \"cover\", backgroundColor: \"black\"}}>\n\n      <div style={{height: '50%', width: '50%'}}>\n      <img src={\"ImageDatabase/Icons/Home.png\"}\n       alt=\"\" style={{width: '50vw', transform: \"translate(26vw, 18vh)\", objectFit: \"cover\"}}/>\n      </div>\n\n         <div className=\"containerHome\">\n\n         <div style={{color: \"white\", textAlign: \"center\", margin: \"5% 25%\"}}>\n         Welcome to Chimera, an interactive database for wearables development & information awareness.\n         It includes Research - Tutorials - Patents - Concepts and Aesthetic approaches used by the wearables\n         community to inspire & boost the wearables development from different field perspectives.\n         </div>\n\n         <div style={{display: \"flex\", marginTop: \"3%\"}}>\n             {/*<div style={{marginLeft: \"38%\"}}>\n               <GoogleLogin\n                clientId=\"1030014197436-1oftnoda9j1qk7qgv0cpjbc625q1qr2k.apps.googleusercontent.com\"\n                render={renderProps => (\n                    <Button color=\"secondary\" onClick={renderProps.onClick}>Google Login</Button>\n                  )}\n                buttonText=\"Google Login\"\n                onSuccess={this.responseGoogle}\n                onFailure={this.responseGoogleError}\n                cookiePolicy={'single_host_origin'}\n\n              />\n                </div>*/}\n\n             <Button onClick={this.props.toggle} style={{ margin: \"0 auto\" }} color=\"secondary\">Enter</Button>\n             \n         </div>\n         <div style={{display: \"flex\", marginTop: \"1%\"}}>\n             \n\n             \n          <Button style={{ margin: \"0 auto\"}} color = \"secondary\" onClick={() => this.simpleDialog.show()}>Watch Tutorial</Button>\n        <SkyLight hideOnOverlayClicked ref={ref => this.simpleDialog = ref} title=\"Welcome to Chimera Wearables!\">\n          \n        <video src={tutorial} width=\"100%\" height=\"100%\" controls = \"controls\" />\n\n        </SkyLight>\n         </div>\n         <Modal size=\"lg\" style={{backgroundColor: \"black\", maxWidth: '90vw',  maxHeight: '90vh', width: '90vw', height: '90vh'}} isOpen={this.state.modal} toggle={this.toggle}>\n\n           <ModalBody style={{backgroundColor: \"black\", color: \"white\"}}>\n           <div style={{display: \"flex\"}}>\n            <div style={{width: \"30%\", marginTop: \"1.25%\"}}>\n               <Form>\n                      {(this.state.loginWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.loginWarning}</div>) : (<div></div>)}\n                       <div>Username</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onLoginUsernameChange} value={this.state.loginUsername}/>\n\n                       <div style={{marginTop: \"4.83%\"}}>Password</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onLoginPasswordChange} value={this.state.loginPassword} />\n\n                     <Button onClick={this.onLoginSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Login</Button>\n\n                </Form>\n                <div style={{marginTop: \"10%\", marginLeft: \"25%\"}}>\n                  <GoogleLogin\n                   clientId=\"1030014197436-1oftnoda9j1qk7qgv0cpjbc625q1qr2k.apps.googleusercontent.com\"\n                   buttonText=\"Google Login\"\n                   onSuccess={this.responseGoogle}\n                   onFailure={this.responseGoogleError}\n                   cookiePolicy={'single_host_origin'}\n                 />\n               </div>\n            </div>\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\n               <Form>\n                        {(this.state.signUpWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.signUpWarning}</div>) : (<div></div>)}\n                       <div style={{marginTop: \"10px\"}}>Username</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onSignUpUsernameChange} value={this.state.signUpUsername}/>\n\n                       <div style={{marginTop: \"10px\"}}>Email</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\" onChange={this.onSignUpEmailChange} value={this.state.signUpEmail}/>\n\n                       <div style={{marginTop: \"10px\"}}>Password</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onSignUpPasswordChange} value={this.state.signUpPassword} />\n\n                      <Button onClick={this.onSignUpSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Sign Up</Button>\n                </Form>\n            </div>\n\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\n               <Form>\n                       <div style={{marginTop: \"10px\"}}>Username</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\"/>\n\n                      <Button onClick={this.props.toggle} style={{marginTop: \"10%\", marginLeft: \"35%\"}} color=\"secondary\">Guest Mode</Button>\n                </Form>\n            </div>\n\n            </div>\n            <img src={\"ImageDatabase/Icons/Home.png\"}\n             alt=\"\" style={{width: '25%', transform: \"translate(155%, 100%)\", objectFit: \"cover\"}}/>\n           </ModalBody>\n\n         </Modal>\n          </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchData: state.searchData,\n        function: state.functions,\n        material: state.material,\n        fabrication: state.fabrication,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authSuccess: (valuename, valuepass, value) => dispatch({type: actionTypes.AUTH_SUCCESS, valName: valuename, valPassword: valuepass, val: value}),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport \"react-awesome-popover/build/index.css\";\nimport { connect } from 'react-redux';\nimport LeftPane from './components/LeftPane';\nimport Matrix from './components/Matrix';\nimport LeftPaneModal from './components/LeftPaneModal';\nimport SearchDisplay from './components/SearchDisplay';\nimport FilterPane from './components/FilterPane';\nimport BodyZones from './components/BodyZones';\nimport HomePage from './components/HomePage'\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport * as actionTypes from './store/actions';\n\nconst SHEET_ID = '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc';\nconst ACCESS_TOKEN = 'AIzaSyBhtelk0uYpfhyFPHF6VRx9_V7AgFHTsNk';\n\nclass App extends Component {\n\n    constructor() {\n      super()\n      this.state = {\n        data: [],\n        displayHome: true,\n        viewCount: 0,\n      }\n  }\n\n  toggleToSearch = () => {\n\n    this.setState({\n      displayHome: false,\n    })\n  }\n\n  toggleBack = () => {\n\n    this.setState({\n      displayHome: true,\n    })\n  }\n\n/*\n    1) Create a modal for login when start is clicked\n    2) Make a state variable, isLoggen in, only display bookmark related features if user is indeed logged in\n*/\n    async componentDidMount() {\n\n      var request = new Request('http://3.139.109.233:5000/api/fetchData/', {\n                    method: 'GET',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                  });\n      var response = await fetch(request)\n      const responseInfo = await response.json()\n      \n              \n        // const sheet1Response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/Sheet1!A1:AR807?key=${ACCESS_TOKEN}`,\n        // {\n        //   headers: {\n        //     \"Content-Type\": \"application/json\",\n        // }\n        // });\n        const wearabilityResponse = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/Wearability!A1:J807?key=${ACCESS_TOKEN}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n        }\n        });\n\n        // const sheet1Info = await sheet1Response.json()\n        const wearabilityInfo = await wearabilityResponse.json()\n\n        // const sheet1ArrayData = sheet1Info[\"values\"]\n        const wearabilityArrayData = wearabilityInfo[\"values\"]\n\n        // let sheet1Data = []\n        let wearabilityData = []\n        \n        // console.log(`sheet1 Info: ${sheet1ArrayData}`)\n        // const sheet1Headers = sheet1ArrayData[0]\n        // for(let i = 1; i < sheet1ArrayData.length; i++) {\n        //   let tempMap = {}\n        //   let currentRow = sheet1ArrayData[i];\n        //   for(let j = 0; j < currentRow.length; j++) {\n        //     tempMap[sheet1Headers[j]] = currentRow[j]; \n        //   }\n        //   sheet1Data.push(tempMap)\n        // }\n\n\n        // console.log(\"sheet1 Final Response\")\n        // sheet1Data.forEach(data => console.log(data))\n\n        const wearabilityHeaders = wearabilityArrayData[0]\n        for(let i = 1; i < wearabilityArrayData.length; i++) {\n          let tempMap = {}\n          let currentRow = wearabilityArrayData[i];\n          for(let j = 0; j < currentRow.length; j++) {\n            tempMap[wearabilityHeaders[j]] = currentRow[j]; \n          }\n          wearabilityData.push(tempMap)\n        }\n        let costmetric = this.computeCostMetric(responseInfo.payload);\n        let impMetric = this.computeImplementationMetric(responseInfo.payload);\n        let wearability = this.computeWearability(wearabilityData);\n        for(let i = 0; i < responseInfo.payload.length; i++) {\n          let wearabilityDatum = wearability[i]\n          let wearabilityStr = \"\"\n          if(wearabilityDatum !== undefined) {\n            wearabilityStr = wearabilityDatum[\"Wearability\"]\n          }\n\n          responseInfo.payload[i] = {\n              ...responseInfo.payload[i],\n              Wearability: wearabilityStr,\n              costMetric: costmetric[i][\"costMetric\"],\n              impMetric: impMetric[i][\"impMetric\"],\n            };\n        }\n        console.log(responseInfo.payload)\n        this.props.updateSearchData(responseInfo.payload);\n    }\n\n    componentWillMount() {\n\n      let updateViewCount = this.props.updateViewCount;\n      let temp = 0;\n\n\n              var request = new Request('https://chimerabackend.herokuapp.com/api/viewCounter/', {\n                    method: 'GET',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                  });\n              fetch(request).then(function(response){\n                 if(response.status.toString() === '200') {\n                    response.text().then(function(text) {\n                        var objReceived = JSON.parse(text);\n                        if (objReceived.message === 'SUCCESS') {\n                          temp = 1;\n                          updateViewCount(objReceived.counter)\n                        }\n                    })\n                  }\n              })\n\n              if(temp = 0) {\n\n                request = new Request('https://chimerabackend.herokuapp.com/api/viewCounter/', {\n                      method: 'GET',\n                      headers: {\n                        'Content-Type': 'application/json',\n                      },\n                    });\n                fetch(request).then(function(response){\n                   if(response.status.toString() === '200') {\n                      response.text().then(function(text) {\n                          var objReceived = JSON.parse(text);\n                          if (objReceived.message === 'SUCCESS') {\n                            temp = 1;\n                            updateViewCount(objReceived.counter)\n                          }\n                      })\n                    }\n                })\n              }\n\n    }\n\n    computeImplementationMetric = (data) => {\n\n      let fabricationChart =\n      {\"laser cutting\":\t3,\"3d printing\":\t9,\"layering\": 1,\"printing\": 3,\"painting\": 3,\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 9,\"soldering\":\t3,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\n       \"knitting\": 9,\"embroidery and applique\":\t9,\n       \"patchwork and patterning\": 3,\"weaving\": 3,\"non woven\":\t3,\n      \"machining\":\t3,\"cut and sew\":\t1, \"joining\": 1};\n\n      let functionChart =\n        {'storage': 1, 'breathability': 3, 'energy harvesting': 9, 'feeling/sensation/haptics': 9,\n         'display': 3, 'electronic connections': 3, 'wireless communication': 9, 'movement': 3,\n          'sensing': 3, 'protective': 1, 'magnetic': 1, 'cognitive': 9, 'modularity': 3, 'emissivity': 3,\n        'wearability': 3, 'shape changing': 3, 'aesthetics': 3, 'gestures': 3, 'studies/reviews': 3, 'interfaces':3, 'skins':3, 'interactions/Control':3};\n\n      let impMetric = [];\n\n      for(let i = 0; i < data.length; i++) {\n\n          let fabScore = 0;\n          let funcScore = 0;\n\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\n            fabScore += fabricationChart[data[i][\"Fabrication 1\"].toLowerCase()];\n          }\n\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\n            fabScore += fabricationChart[data[i][\"Fabrication 2\"].toLowerCase()];\n          }\n\n          if(data[i][\"Function 1\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 1\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Function 2\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 2\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Function 3\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 3\"].toLowerCase()]);\n          }\n\n          let temp = fabScore * funcScore;\n\n          let ans = 1;\n          if(temp <= 12)\n            ans = 1;\n          else if(temp > 12 && temp < 54)\n            ans = 2;\n          else {\n            ans = 3;\n          }\n\n          impMetric[i] = {\"impMetric\": ans};\n      }\n\n\n      return impMetric;\n\n\n  }\n\n    computeCostMetric = (data) => {\n\n      let fabricationChart =\n      {\"laser cutting\":\t9,\"3d printing\":\t9,\"layering\": 3,\"printing\": 3,\"painting\": 3,\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 3,\"soldering\":\t1,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\n       \"knitting\": 1,\"embroidery and applique\":\t3,\n       \"patchwork and patterning\": 3,\"weaving\": 9,\"non woven\":\t9,\n       \"machining\":\t9,\"cut and wew\":\t1, \"joining\": 3};\n\n\n      /*\n        INKS AND FINISHES\n      */\n      let materialChart =\n      {\n          \"conductive inks\": 3,\n          \"polymers\": 9,\n          \"molding materials\": 9,\n          \"threads\": 1,\n          \"conductive threads\":\t3,\n          \"adhesives\": 3,\n          \"paper and cardboard\": 1,\n          \"electronics\": 9,\n          \"textiles and composites\": 1,\n          \"hide\":\t1,\n          \"clips/Velcro/pins/zippers\": 1,\n          \"Bio-materials/organic materials\": 9,\n          \"inks & finishes\": 0,\n          \"metal\": 3,\n          \"shape memory alloy\": 9\n      };\n\n      let costMetric = [];\n\n      for(let i = 0; i < data.length; i++) {\n\n          let fabScore = 0;\n          let matScore = 0;\n\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 1\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 2\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Material 1\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 1\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Material 2\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 2\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Material 3\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 3\"].toLowerCase()]);\n          }\n\n          costMetric[i] = {\"costMetric\": fabScore + matScore};\n      }\n      return costMetric;\n    }\n\n    computeWearability = (wearability) => {\n\n      wearability = wearability.map((item) => {\n\n        let count = 0\n        let totalCount = 50\n\n        let attachScore = item[\"Attachment to the Body\"];\n\n        switch (attachScore) {\n\n            case \"Threads\":\n              attachScore = 5;\n              break;\n            case \"Velcro\":\n              attachScore = 3;\n              break;\n            case \"Adhesives\":\n               attachScore = 4;\n              break;\n            case \"Embedded\":\n              attachScore = 2;\n              break;\n            case \"Straps\":\n              attachScore = 1;\n              break;\n            case \"Clips\":\n              attachScore = 4;\n              break;\n            default:\n              attachScore = 0;\n              totalCount = totalCount - 5;\n\n        }\n\n        let mainScore = item[\"Maintenance required\"];\n\n        if(isNaN(mainScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n\n          count += parseInt(mainScore);\n        }\n\n        let actScore = item[\"activity obstruction\"];\n\n        if(isNaN(actScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(actScore);\n        }\n\n        let intScore = item[\"Integration (form and size)\"];\n\n        if(isNaN(intScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(intScore);\n        }\n\n        let conScore = item[\"Context\"];\n\n        if(isNaN(conScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(conScore);\n        }\n\n        let aesScore = item[\"Aesthetics\"];\n\n        if(isNaN(aesScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(aesScore);\n        }\n\n        return {\"Wearability\": ((count / totalCount) * 100).toFixed(2)}\n      })\n\n      return wearability;\n    }\n\n  displayMatrix = () => {\n    this.setState({\n      displayHome: false,\n    });\n  }\n\n    render() {\n\n        return (\n          <BrowserRouter>\n          {(this.state.displayHome) ? (<HomePage toggle={this.toggleToSearch} />) : ((!this.props.searchDisplay) ? (<div className=\"layout\" style={{\n            width: window.innerWidth\n          }}>\n             <LeftPane />\n             <BodyZones />\n             <Matrix />\n             \n            <FilterPane toggleBack={this.toggleBack} move={false} showLoop={true} showView={true} views={this.state.viewCount} mainPage={true}/>\n          </div>) : (<div className=\"layoutBlack\"><SearchDisplay backToSearch={this.props.updateSearchDisplay}/>\n          <FilterPane toggleMainDisplay={this.props.updateSearchDisplay} move={true} toggleBack={this.toggleBack} showView={false} views={this.state.viewCount} showLoop={true} mainPage={false}/>\n        </div>)\n        )}\n        </BrowserRouter>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchDisplay: state.searchDisplay,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateSearchData: (value) => dispatch({type: actionTypes.UPDATE_DATA, value: value}),\n        updateSearchDisplay: () => dispatch({type: actionTypes.REMOVE_SEARCH_DISPLAY}),\n        updateViewCount:  (value) => dispatch({type: actionTypes.VIEW_COUNTER, val: value}),\n        toggleMainDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers/index'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = reducer;\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}